
///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,ОписаниеШага,ТипШага,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВГлобальномМассивеФайловТогда(Парам01,Парам02)","ВГлобальномМассивеФайловТогда","Если в глобальном массиве ""МассивФичаФайлов"" 0 файлов Тогда","","","Условие");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ПокаЕстьНеВыполненныйФичаФайлЯВыполняюДействия()","ПокаЕстьНеВыполненныйФичаФайлЯВыполняюДействия","Тогда Пока есть не выполненный фича файл я выполняю действия","","","Цикл");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ДляКаждогоРаннераИзТаблицыРаннеровЯДелаю()","ДляКаждогоРаннераИзТаблицыРаннеровЯДелаю","Тогда для каждого раннера из таблицы раннеров я делаю","","","Цикл");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯЗагружаюСписокФичаФайловИзУказанныхНастроекИФильтров()","ЯЗагружаюСписокФичаФайловИзУказанныхНастроекИФильтров","Когда я загружаю список фича файлов из указанных настроек и фильтров","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯЗапускаюНесколькоСеансовРаннеровСогласноУказанныхНастроек()","ЯЗапускаюНесколькоСеансовРаннеровСогласноУказанныхНастроек","Затем я запускаю несколько сеансов раннеров согласно указанных настроек","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ТекущийРаннерСвободенТогда()","ТекущийРаннерСвободенТогда","Если текущий раннер свободен Тогда","","","Условие");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯСделалАктивнымСледующийФичаФайлИзСписка()","ЯСделалАктивнымСледующийФичаФайлИзСписка","Когда я сделал активным следующий фича файл из списка","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯСобралИзРаннераТекущиеДанные()","ЯСобралИзРаннераТекущиеДанные","Тогда  я собрал из раннера текущие данные","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯЗагрузилВРаннерТекущийФичаФайлИЗапустилНаВыполнение()","ЯЗагрузилВРаннерТекущийФичаФайлИЗапустилНаВыполнение","Затем  я загрузил в раннер текущий фича файл и запустил на выполнение","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯЗакрываюСеансПовисшегоРаннераИВсехЕгоTestClient()","ЯЗакрываюСеансПовисшегоРаннераИВсехЕгоTestClient","Тогда я закрываю сеанс повисшего раннера и всех его TestClient","","");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции



///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры



///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//Когда я загружаю список фича файлов из указанных настроек и фильтров
//@ЯЗагружаюСписокФичаФайловИзУказанныхНастроекИФильтров()
Процедура ЯЗагружаюСписокФичаФайловИзУказанныхНастроекИФильтров() Экспорт
	
	Если Ванесса.ПолучитьЗначениеДополнительногоПараметра("КаталогФичДляVBManager") = Неопределено Тогда
		Сообщить("НЕ ПЕРЕДАН КАТАЛОГ ФИЧ ДЛЯ ОБРАБОТКИ!!! Используется " + Ванесса.Объект.КаталогИнструментов + "\features\Core\TestClient");
		Ванесса.УстановитьЗначениеДополнительногоПараметра("КаталогФичДляVBManager",Ванесса.Объект.КаталогИнструментов + "\features\Core\TestClient");
	КонецЕсли;	 
	
	КаталогДляОбработки = Ванесса.ПолучитьЗначениеДополнительногоПараметра("КаталогФичДляVBManager");
	
	
	МассивФич = Ванесса.ПолучитьМассивФичаФайловИзКаталогаСогласноНастроек(КаталогДляОбработки);
	
	КонтекстСохраняемый.Вставить("МассивФичаФайлов",МассивФич);
	КонтекстСохраняемый.Вставить("ТекущийИДМассивФичаФайлов",-1);
КонецПроцедуры

&НаКлиенте
//Затем я запускаю несколько сеансов раннеров согласно указанных настроек
//@ЯЗапускаюНесколькоСеансовРаннеровСогласноУказанныхНастроек()
Процедура ЯЗапускаюНесколькоСеансовРаннеровСогласноУказанныхНастроек() Экспорт
	//Возврат;
	
	КонтекстСохраняемый.Вставить("МассивРаннеров",Неопределено);
	
	МассивРаннеров = Новый Массив;
	Для Каждого СтрокаДанныеКлиентовТестирования Из Ванесса.ДанныеКлиентовТестирования Цикл
		Если Найти(НРег(СтрокаДанныеКлиентовТестирования.Имя),"runner") = 0  Тогда
			Продолжить;
		КонецЕсли;	 
		
		МассивРаннеров.Добавить(Новый Структура("Имя",СтрокаДанныеКлиентовТестирования.Имя));
	КонецЦикла;	
	
	
	Если МассивРаннеров.Количество() = 0 Тогда
		ВызватьИсключение "Не найдено ни одной строки в таблице клиентов тестирования, которая бы содержала <runner>";
	КонецЕсли;	 
	
	
	КонтекстСохраняемый.Вставить("МассивРаннеров",МассивРаннеров);
	
	
	Для Каждого Раннер Из МассивРаннеров Цикл
		Ванесса.ПолучитьКлиентаТестирования(Раннер.Имя, "")
	КонецЦикла;	
	
	
КонецПроцедуры

&НаКлиенте
//Когда я сделал активным следующий фича файл из списка
//@ЯСделалАктивнымСледующийФичаФайлИзСписка()
Процедура ЯСделалАктивнымСледующийФичаФайлИзСписка() Экспорт
	Если (КонтекстСохраняемый.МассивФичаФайлов.Количество()-1) >= (КонтекстСохраняемый.ТекущийИДМассивФичаФайлов+1) Тогда
		КонтекстСохраняемый.ТекущийИДМассивФичаФайлов = КонтекстСохраняемый.ТекущийИДМассивФичаФайлов + 1;	
		Сообщить("Фича №" + (КонтекстСохраняемый.ТекущийИДМассивФичаФайлов+1) + " из " + КонтекстСохраняемый.МассивФичаФайлов.Количество());
		Сообщить("" + ТекущаяДата() + " <" + КонтекстСохраняемый.МассивФичаФайлов[КонтекстСохраняемый.ТекущийИДМассивФичаФайлов] + ">");
	Иначе
		Сообщить("Фичи для обработки закончились.");
	КонецЕсли;	 
КонецПроцедуры

&НаКлиенте
//Дано я загрузил в раннер текущий фича файл и запустил на выполнение
//@ЯЗагрузилВРаннерТекущийФичаФайлИЗапустилНаВыполнение()
Процедура ЯЗагрузилВРаннерТекущийФичаФайлИЗапустилНаВыполнение() Экспорт
	
	Если (КонтекстСохраняемый.МассивФичаФайлов.Количество()-1) < КонтекстСохраняемый.ТекущийИДМассивФичаФайлов Тогда
		Сообщить("Закончились фичи. Не стал назначать раннеру фичу.");
		Возврат;
	КонецЕсли;	 
	
	
	//Возврат;
	
	ОкноVB = Ванесса.НайтиОкноVB();
	
	Если ОкноVB = Неопределено Тогда
		Ванесса.Шаг("Когда Я открываю VanessaBehavior в режиме TestClient со стандартной библиотекой для запуска в раннере");
	КонецЕсли;	
	
	ОкноVB = Ванесса.НайтиОкноVB();
	Если ОкноVB = Неопределено Тогда
		ВызватьИсключение "Не найдено окно VanessaBehavior.";
	КонецЕсли;
	
	ТекущаяФича = КонтекстСохраняемый.МассивФичаФайлов[КонтекстСохраняемый.ТекущийИДМассивФичаФайлов];
	
	Ванесса.Шаг("И я перехожу к закладке ""Служебная""");
	Ванесса.Шаг("И в поле ""Каталог фич (служебный)"" я ввожу текст """ + ТекущаяФича + """");
	Ванесса.Шаг("И я снимаю флаг с именем ""ФлагСценарииВыполнены""");
	
	Ванесса.Шаг("И я нажимаю на кнопку ""Перезагрузить и выполнить""");
	
КонецПроцедуры

&НаКлиенте
//Тогда я закрываю сеанс повисшего раннера и всех его TestClient
//@ЯЗакрываюСеансПовисшегоРаннераИВсехЕгоTestClient()
Процедура ЯЗакрываюСеансПовисшегоРаннераИВсехЕгоTestClient() Экспорт
	
КонецПроцедуры

&НаКлиенте
//Если в глобальном массиве "МассивФичаФайлов" 0 файлов Тогда
//@ВГлобальномМассивеФайловТогда(Парам01,Парам02)
Процедура ВГлобальномМассивеФайловТогда(ИмяПеременнойМассива,Количество) Экспорт
	МассивФайлов = КонтекстСохраняемый[ИмяПеременнойМассива];
	Если МассивФайлов.Количество() = Количество Тогда
		Ванесса.УстановитьРезультатУсловия(Истина);
	Иначе	
		Ванесса.УстановитьРезультатУсловия(Ложь);
	КонецЕсли;	 
КонецПроцедуры

&НаКлиенте
//Дано я собрал из раннера текущие данные
//@ЯСобралИзРаннераТекущиеДанные()
Процедура ЯСобралИзРаннераТекущиеДанные() Экспорт
	
КонецПроцедуры

&НаКлиенте
//Тогда Пока есть не выполненный фича файл я выполняю действия
//@ПокаЕстьНеВыполненныйФичаФайлЯВыполняюДействия()
Процедура ПокаЕстьНеВыполненныйФичаФайлЯВыполняюДействия() Экспорт
	Если (КонтекстСохраняемый.МассивФичаФайлов.Количество()-1) >= (КонтекстСохраняемый.ТекущийИДМассивФичаФайлов+1) Тогда
		//значит мы можем увеличить ид на 1 и не выйдем за границы массива
		Ванесса.УстановитьРезультатУсловия(Истина);
	Иначе	
		Ванесса.УстановитьРезультатУсловия(Ложь);
	КонецЕсли;	 
КонецПроцедуры

&НаКлиенте
//Тогда для каждого раннера из таблицы раннеров я делаю
//@ДляКаждогоРаннераИзТаблицыРаннеровЯДелаю()
Процедура ДляКаждогоРаннераИзТаблицыРаннеровЯДелаю() Экспорт
	//Возврат;
	
	Если Не Контекст.Свойство("ИдТекущегоРаннера") Тогда
		Контекст.Вставить("ИдТекущегоРаннера",-1);
	КонецЕсли;	 
	
	Контекст.ИдТекущегоРаннера = Контекст.ИдТекущегоРаннера + 1;
	
	Если (КонтекстСохраняемый.МассивРаннеров.Количество()-1) >= Контекст.ИдТекущегоРаннера Тогда
		Ванесса.УстановитьРезультатУсловия(Истина);
		Ванесса.Шаг("И я активизирую TestClient """ + КонтекстСохраняемый.МассивРаннеров[Контекст.ИдТекущегоРаннера].Имя + """");
	Иначе	
		Контекст.Вставить("ИдТекущегоРаннера",-1);
		Ванесса.УстановитьРезультатУсловия(Ложь);
	КонецЕсли;	 
	
КонецПроцедуры

&НаКлиенте
//Если текущий раннер свободен Тогда
//@ТекущийРаннерСвободенТогда()
Процедура ТекущийРаннерСвободенТогда() Экспорт
	//Если КонтекстСохраняемый.ТекущийИДМассивФичаФайлов > 3 Тогда
	//	Ванесса.УстановитьРезультатУсловия(Ложь);
	//КонецЕсли;	 
	//
	//Возврат;
	
	ОкноVB = Ванесса.НайтиОкноVB();
	
	Если ОкноVB = Неопределено Тогда
		Ванесса.УстановитьРезультатУсловия(Истина);
		Возврат;
	КонецЕсли;	
	
	Попытка
		ФлагСценарииВыполнены = ОкноVB.НайтиОбъект(Тип("ТестируемоеПолеФормы"),,"ФлагСценарииВыполнены",1);	
	Исключение
		Ванесса.УстановитьРезультатУсловия(Ложь);
		Возврат;
	КонецПопытки;
	
	Если ФлагСценарииВыполнены.ПолучитьПредставлениеДанных() = Строка(Истина) Тогда
		Ванесса.УстановитьРезультатУсловия(Истина);
		Возврат;
	КонецЕсли;	 
	
	Ванесса.УстановитьРезультатУсловия(Ложь);
КонецПроцедуры
