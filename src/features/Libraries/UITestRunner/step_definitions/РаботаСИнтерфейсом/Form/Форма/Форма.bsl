//начало текста модуля  
&НаКлиенте
Перем Ванесса;

&НаКлиенте
Перем Контекст Экспорт;
&НаКлиенте
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
Перем ТекущийЭлементДляРаботы;

&НаКлиенте
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеВТЧИзВыпадающегоСпискаСЗаголовкомЯВыбираюСВыбором(Парам01,Парам02,Парам03)","ВОткрытойФормеВТЧИзВыпадающегоСпискаСЗаголовкомЯВыбираюСВыбором","И В открытой форме в ТЧ ""ТабличнаяЧасть1"" из выпадающего списка с заголовком ""Реквизит справочник"" я выбираю ""ТестовыйЭлемент21"" с выбором",,"");//устаревшее
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеВТЧИзВыпадающегоСпискаЯВыбираюСВыбором(Парам01,Парам02,Парам03)","ВОткрытойФормеВТЧИзВыпадающегоСпискаЯВыбираюСВыбором","И В открытой форме в ТЧ ""ТабличнаяЧасть1"" из выпадающего списка ""Реквизит справочник"" я выбираю ""ТестовыйЭлемент21"" с выбором",,"");//устаревшее
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТЧИзВыпадающегоСпискаЯВыбираюСВыбором(Парам01,Парам02,Парам03)","ВТЧИзВыпадающегоСпискаЯВыбираюСВыбором","И В ТЧ ""ТабличнаяЧасть1"" из выпадающего списка ""Реквизит справочник"" я выбираю ""ТестовыйЭлемент21"" с выбором","Выбор из выпадающего списка в ТЧ с дополнительным вызовом метода Выбрать(). Применялось на 8.3.6.","UI.Таблицы.Прочее");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВФормеВТЧЯЗавершаюРедактированиеСтроки(Парам01,Парам02)","ВФормеВТЧЯЗавершаюРедактированиеСтроки","И В форме ""Справочник1"" в ТЧ ""ТабличнаяЧасть1"" я завершаю редактирование строки");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТЧЯЗавершаюРедактированиеСтроки(Парам01)","ВТЧЯЗавершаюРедактированиеСтроки","И В ТЧ ""ТабличнаяЧасть1"" я завершаю редактирование строки");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТаблицеЯЗавершаюРедактированиеСтроки(Парам01)","ВТаблицеЯЗавершаюРедактированиеСтроки","И В таблице ""ТабличнаяЧасть1"" я завершаю редактирование строки","Завершение редактирования строки","UI.Таблицы.Редактирование строки");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯЗавершаюРедактированиеСтроки()","ЯЗавершаюРедактированиеСтроки","И Я завершаю редактирование строки","Завершение редактирования строки","UI.Таблицы.Редактирование строки");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеВТЧЯНажимаюКнопкуВыбораУРеквизитаСЗаголовком(Парам01,Парам02)","ВОткрытойФормеВТЧЯНажимаюКнопкуВыбораУРеквизитаСЗаголовком","И В открытой форме в ТЧ ""ДокументыПоВидам"" я нажимаю кнопку выбора у реквизита с заголовком ""Скан""","","");//устаревшее
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеВТЧЯНажимаюКнопкуВыбораУРеквизита(Парам01,Парам02)","ВОткрытойФормеВТЧЯНажимаюКнопкуВыбораУРеквизита","В открытой форме в ТЧ ""ДокументыПоВидам"" я нажимаю кнопку выбора у реквизита ""Скан""","","");//устаревшее
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТЧЯНажимаюКнопкуВыбораУРеквизита(Парам01,Парам02)","ВТЧЯНажимаюКнопкуВыбораУРеквизита","И В ТЧ ""ДокументыПоВидам"" я нажимаю кнопку выбора у реквизита ""Скан""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТаблицеЯНажимаюКнопкуВыбораУРеквизита(Парам01,Парам02)","ВТаблицеЯНажимаюКнопкуВыбораУРеквизита","И В таблице ""ДокументыПоВидам"" я нажимаю кнопку выбора у реквизита ""Скан""","Нажатие кнопки выбора у реквизита в ТЧ","UI.Таблицы.Реквизиты");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТаблицеЯНажимаюКнопкуВыбораУРеквизитаСИменем(Парам01,Парам02)","ВТаблицеЯНажимаюКнопкуВыбораУРеквизитаСИменем","И В таблице ""ДокументыПоВидам"" я нажимаю кнопку выбора у реквизита с именем ""Скан""","Нажатие кнопки выбора у реквизита в ТЧ","UI.Таблицы.Реквизиты");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТаблицеЯПерехожуНаОдинУровеньВниз(Парам01)","ВТаблицеЯПерехожуНаОдинУровеньВниз"  ,"И     в таблице  ""Список"" я перехожу на один уровень вниз" ,"Переход на один уровень вниз в списке в режиме ""Иерархический список""" ,"UI.Таблицы.Иерархический список");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТаблицеЯПерехожуНаОдинУровеньВверх(Парам01)","ВТаблицеЯПерехожуНаОдинУровеньВверх","И     в таблице  ""Список"" я перехожу на один уровень вверх","Переход на один уровень вверх в списке в режиме ""Иерархический список""","UI.Таблицы.Иерархический список");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТаблицеЯНачинаюРедактированиеСтроки(Парам01)","ВТаблицеЯНачинаюРедактированиеСтроки","И     в таблице  ""Список"" я начинаю редактирование строки","Начало редактирования строки","UI.Таблицы.Строки");
	
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеВТЧЯПерехожуНаОднуСтрокуВниз(Парам01)","ВОткрытойФормеВТЧЯПерехожуНаОднуСтрокуВниз","И     В открытой форме в ТЧ  ""Список"" я перехожу на одну строку вниз","","");//устаревшее
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеВТЧЯПерехожуНаОднуСтрокуВверх(Парам01)","ВОткрытойФормеВТЧЯПерехожуНаОднуСтрокуВверх","И     В открытой форме в ТЧ  ""Список"" я перехожу на одну строку вверх","","");//устаревшее
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеВТЧЯПерехожуНаОднуСтрокуВнизСВыделением(Парам01)","ВОткрытойФормеВТЧЯПерехожуНаОднуСтрокуВнизСВыделением","И     В открытой форме в ТЧ  ""Список"" я перехожу на одну строку вниз с выделением");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеВТЧЯПерехожуНаОднуСтрокуВверхСВыделением(Парам01)","ВОткрытойФормеВТЧЯПерехожуНаОднуСтрокуВверхСВыделением","И     В открытой форме в ТЧ  ""Список"" я перехожу на одну строку вверх с выделением");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТЧЯПерехожуНаОднуСтрокуВнизСВыделением(Парам01)","ВТЧЯПерехожуНаОднуСтрокуВнизСВыделением","И     В ТЧ  ""Список"" я перехожу на одну строку вниз с выделением");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТаблицеЯПерехожуНаОднуСтрокуВнизСВыделением(Парам01)","ВТаблицеЯПерехожуНаОднуСтрокуВнизСВыделением","И     В таблице  ""Список"" я перехожу на одну строку вниз с выделением", "Переходим в ТЧ на следующую строку с выделением", "UI.Таблицы.Переход к строке");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТЧЯПерехожуНаОднуСтрокуВверхСВыделением(Парам01)","ВТЧЯПерехожуНаОднуСтрокуВверхСВыделением","И     В ТЧ  ""Список"" я перехожу на одну строку вверх с выделением");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТаблицеЯПерехожуНаОднуСтрокуВверхСВыделением(Парам01)","ВТаблицеЯПерехожуНаОднуСтрокуВверхСВыделением","И     В таблице  ""Список"" я перехожу на одну строку вверх с выделением", "Переходим в ТЧ на предыдущую строку с выделением", "UI.Таблицы.Переход к строке");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеВТЧЯПерехожуНаПервуюСтроку(Парам01)","ВОткрытойФормеВТЧЯПерехожуНаПервуюСтроку","И     В открытой форме в ТЧ  ""Список"" я перехожу на первую строку");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеВТЧЯПерехожуНаПоследнююСтроку(Парам01)","ВОткрытойФормеВТЧЯПерехожуНаПоследнююСтроку","И     В открытой форме в ТЧ  ""Список"" я перехожу на последнюю строку");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТЧЯПерехожуНаПервуюСтроку(Парам01)","ВТЧЯПерехожуНаПервуюСтроку","И     В ТЧ  ""Список"" я перехожу на первую строку", "Переходим в ТЧ на первую строку", "UI.Таблицы.Переход к строке");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТЧЯПерехожуНаПоследнююСтроку(Парам01)","ВТЧЯПерехожуНаПоследнююСтроку","И     В ТЧ  ""Список"" я перехожу на последнюю строку", "Переходим в ТЧ на последнюю строку", "UI.Таблицы.Переход к строке");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯУдаляюВсеСтрокиТаблицы(Парам01)","ЯУдаляюВсеСтрокиТаблицы","И я удаляю все строки таблицы ""График""","Очистить таблицу","UI.Таблицы.Удаление строк");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТаблицеСИменемЯУдаляюТекущуюСтроку(Парам01)","ВТаблицеСИменемЯУдаляюТекущуюСтроку","И     в таблице с именем ""ТабличнаяЧасть1"" я удаляю текущую строку");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТаблицеЯУдаляюТекущуюСтроку(Парам01)","ВТаблицеЯУдаляюТекущуюСтроку","И     в таблице ""ТабличнаяЧасть1"" я удаляю текущую строку","Удаляет текущую строку таблицы","UI.Таблицы.Удаление строк");
	
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТЧЯПерехожуНаОднуСтрокуВниз(Парам01)","ВТЧЯПерехожуНаОднуСтрокуВниз","И     в ТЧ  ""Список"" я перехожу на одну строку вниз");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТаблицеЯПерехожуНаОднуСтрокуВниз(Парам01)","ВТаблицеЯПерехожуНаОднуСтрокуВниз","И     в таблице  ""Список"" я перехожу на одну строку вниз", "Переходим в ТЧ на следующую строку", "UI.Таблицы.Переход к строке");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТЧЯПерехожуНаОднуСтрокуВверх(Парам01)","ВТЧЯПерехожуНаОднуСтрокуВверх","И     в ТЧ  ""Список"" я перехожу на одну строку вверх");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТаблицеЯПерехожуНаОднуСтрокуВверх(Парам01)","ВТаблицеЯПерехожуНаОднуСтрокуВверх","И     в таблице  ""Список"" я перехожу на одну строку вверх", "Переходим в ТЧ на предыдущую строку", "UI.Таблицы.Переход к строке");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеВПолеСЗаголовкомЯВвожуТекст(Парам01,Парам02)","ВОткрытойФормеВПолеСЗаголовкомЯВвожуТекст","И     В открытой форме в поле с заголовком ""Наименование"" я ввожу текст ""111""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеВПолеЯВвожуТекст(Парам01,Парам02)","ВОткрытойФормеВПолеЯВвожуТекст","И     В открытой форме в поле ""Наименование"" я ввожу текст ""111""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВПолеЯВвожуТекст(Парам01,Парам02)","ВПолеЯВвожуТекст","И     в поле ""Наименование"" я ввожу текст ""111""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"УПоляЯПерехожуКДате(Парам01,Парам02)","УПоляЯПерехожуКДате","И     у поля ""Имя поля"" я перехожу к дате ""08.04.1981""","Делает переход к дате в поля календаря","UI.Формы.Календарь");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"УПоляСИменемЯПерехожуКДате(Парам01,Парам02)","УПоляСИменемЯПерехожуКДате","И     у поля с именем ""ИмяПоля"" я перехожу к дате ""08.04.1981""","Делает переход к дате в поля календаря","UI.Формы.Календарь");
	
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ТаблицаФормыСИменемСталаРавной(Парам01,ТабПарам)","ТаблицаФормыСИменемСталаРавной","И     таблица формы с именем ""ТабличнаяЧасть1"" стала равной:");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ТаблицаФормыСИменемСодержитСтроки(Парам01,ТабПарам)","ТаблицаФормыСИменемСодержитСтроки","И     таблица формы с именем ""ТабличнаяЧасть1"" содержит строки:");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ТаблицаФормыСИменемСодержитИзменения(Парам01,ТабПарам)","ТаблицаФормыСИменемСодержитИзменения","Тогда таблица формы с именем ""ТабличнаяЧасть1"" содержит изменения:");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВПанелиРазделовЯВыбираю(Парам01)","ВПанелиРазделовЯВыбираю","Когда В панели разделов я выбираю ""Склады""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВПанелиОткрытыхЯВыбираю(Парам01)","ВПанелиОткрытыхЯВыбираю","Когда В панели открытых я выбираю ""Склады""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВПанелиФункцийЯВыбираю(Парам01)","ВПанелиФункцийЯВыбираю","И     В панели функций я выбираю ""Склады""");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТаблицеСИменемЯВыделяюВсеСтроки(Парам01)","ВТаблицеСИменемЯВыделяюВсеСтроки","Тогда в таблице с именем ""Список"" я выделяю все строки");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТаблицеЯВыделяюВсеСтроки(Парам01)","ВТаблицеЯВыделяюВсеСтроки","Тогда в таблице ""Список"" я выделяю все строки", "Выделение всех строк в таблице", "UI.Таблицы.Выделение строк");
	
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеЯНажимаюКнопкуВыбораУПоляСЗаголовком(Парам01)","ВОткрытойФормеЯНажимаюКнопкуВыбораУПоляСЗаголовком","И     В открытой форме я нажимаю кнопку выбора у поля с заголовком ""Реквизит2""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеЯНажимаюКнопкуВыбораУПоля(Парам01)","ВОткрытойФормеЯНажимаюКнопкуВыбораУПоля","И     В открытой форме я нажимаю кнопку выбора у поля ""Реквизит2""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯНажимаюКнопкуВыбораУПоля(Парам01)","ЯНажимаюКнопкуВыбораУПоля","И     я нажимаю кнопку выбора у поля ""Реквизит2""");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ПолеСуществует(Парам01)","ПолеСуществует","И     поле ""Реквизит2"" существует","Проверка существования поля","UI.Формы.Поля");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ПолеСИменемСуществует(Парам01)","ПолеСИменемСуществует","И     поле с именем ""Реквизит2"" существует","Проверка существования поля","UI.Формы.Поля");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ПолеНеСуществует(Парам01)","ПолеНеСуществует","И     поле ""Реквизит2"" не существует","Проверка не существования поля","UI.Формы.Поля");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ПолеСИменемНеСуществует(Парам01)","ПолеСИменемНеСуществует","И     поле с именем ""Реквизит2"" не существует","Проверка не существования поля","UI.Формы.Поля");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ПолеСИменемИмеетЗаголовок(Парам01,Парам02)","ПолеСИменемИмеетЗаголовок","И     поле с именем ""Реквизит2"" имеет заголовок ""Заголовок""","Проверка, что у поля нужный заголовок. Поле ищется по внутреннему идентификатору.""UI.Формы.Поля");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"УПоляСИменемТекстПодсказкиРавен(Парам01,Парам02)","УПоляСИменемТекстПодсказкиРавен","И     у поля с именем ""Реквизит2"" текст подсказки равен ""Заголовок""","Проверка, что у поля нужный текст подсказки. Поле ищется по внутреннему идентификатору.""UI.Формы.Поля");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеЯНажимаюКнопкуВыбораУПоляСИменем(Парам01)","ВОткрытойФормеЯНажимаюКнопкуВыбораУПоляСИменем","И     В открытой форме я нажимаю кнопку выбора у поля с именем ""Реквизит4""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯНажимаюКнопкуВыбораУПоляСИменем(Парам01)","ЯНажимаюКнопкуВыбораУПоляСИменем","И     я нажимаю кнопку выбора у поля с именем ""Реквизит4""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ТабличныйДокументФормыСИменемСталРавен(Парам01,ТабПарам)","ТабличныйДокументФормыСИменемСталРавен","И     табличный документ формы с именем ""РеквизитТабличныйДокумент"" стал равен:");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯЗакрылВсеОкнаКлиентскогоПриложения()","ЯЗакрылВсеОкнаКлиентскогоПриложения","И    Я закрыл все окна клиентского приложения","Закрывает все окна текущего TestClient.","UI.Окна");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯЗакрылВсеОкнаКлиентскогоПриложенияКроме(Парам01)","ЯЗакрылВсеОкнаКлиентскогоПриложенияКроме","И    Я закрыл все окна клиентского приложения кроме ""Нужное окно""","Закрывает все окна текущего TestClient, кроме нужного окна.","UI.Окна");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯНажимаюКнопкуКомандногоИнтерфейса(Парам01)","ЯНажимаюКнопкуКомандногоИнтерфейса","Когда Я нажимаю кнопку командного интерфейса ""Основная""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ОткрылосьОкно(Парам01)","ОткрылосьОкно","Тогда открылось окно ""Справочник1""","Проверяет, что на экране есть активное окно с нужым заголовком","UI.Окна");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯАктивизируюОкно(Парам01)","ЯАктивизируюОкно","И я активизирую окно ""Справочник1""","Активизирует окно с нужным заголовком","UI.Окна");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯЖдуЗакрытияОкнаВТеченииСекунд(Парам01,Парам02)","ЯЖдуЗакрытияОкнаВТеченииСекунд","И я жду закрытия окна ""Имя окна"" в течении 600 секунд","Ожидает, что окно исчезнет через нужное число секунд","UI.Окна");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеЯНажимаюНаКнопкуСЗаголовком(Парам01)","ВОткрытойФормеЯНажимаюНаКнопкуСЗаголовком","И     В открытой форме я нажимаю на кнопку с заголовком ""Создать""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеЯНажимаюНаКнопку(Парам01)","ВОткрытойФормеЯНажимаюНаКнопку","И     В открытой форме я нажимаю на кнопку ""Создать""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯНажимаюНаКнопку(Парам01)","ЯНажимаюНаКнопку","И     я нажимаю на кнопку ""Создать""");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеВПолеСИменемЯВвожуТекст(Парам01,Парам02)","ВОткрытойФормеВПолеСИменемЯВвожуТекст","И     В открытой форме в поле с именем ""Наименование"" я ввожу текст ""111""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВПолеСИменемЯВвожуТекст(Парам01,Парам02)","ВПолеСИменемЯВвожуТекст","И     в поле с именем ""Наименование"" я ввожу текст ""111""");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеЯПерехожуКЗакладкеСЗаголовком(Парам01)","ВОткрытойФормеЯПерехожуКЗакладкеСЗаголовком","И     В открытой форме я перехожу к закладке с заголовком ""Вспомогательная""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеЯПерехожуКЗакладке(Парам01)","ВОткрытойФормеЯПерехожуКЗакладке","И     В открытой форме я перехожу к закладке ""Вспомогательная""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯПерехожуКЗакладке(Парам01)","ЯПерехожуКЗакладке","И     я перехожу к закладке ""Вспомогательная""");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеЯПерехожуКЗакладкеСИменем(Парам01)","ВОткрытойФормеЯПерехожуКЗакладкеСИменем","И     В открытой форме я перехожу к закладке с именем ""Вспомогательная""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯПерехожуКЗакладкеСИменем(Парам01)","ЯПерехожуКЗакладкеСИменем","И     я перехожу к закладке с именем ""Вспомогательная""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ПолеЗаполнено(Парам01)","ПолеЗаполнено","И поле ""Имя поля"" заполнено","Проверяет заполненность поля формы","UI.Формы.Поля");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯАктивизируюПоле(Парам01)","ЯАктивизируюПоле","И я активизирую поле ""Имя поля""","Сделать поле активным","UI.Формы.Поля");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯАктивизируюПолеСИменем(Парам01)","ЯАктивизируюПолеСИменем","И я активизирую поле с именем ""ИмяПоля""","Сделать поле активным","UI.Формы.Поля");

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЭлементФормыСталРавен(Парам01,Парам02)","ЭлементФормыСталРавен","Тогда элемент формы ""Наименование"" стал равен ""111""","Проверка значения элемента формы","UI.Формы.Ожидание значения элемента");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЭлементФормыСИменемСталРавен(Парам01,Парам02)","ЭлементФормыСИменемСталРавен","Тогда элемент формы с именем ""Наименование"" стал равен ""111""","Проверка значения элемента формы","UI.Формы.Ожидание значения элемента");
	
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЭлементТаблицыСталРавен(Парам01,Парам02,Парам03)","ЭлементТаблицыСталРавен","Тогда элемент таблицы ""Таблица"" ""Наименование"" стал равен ""111""","Проверка значения реквизита таблицы","UI.Таблицы.Ожидание значения элемента");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ТекстЯчейкиТаблицыСталРавен(Парам01,Парам02,Парам03)","ТекстЯчейкиТаблицыСталРавен","Тогда текст ячейки таблицы ""Таблица"" ""Наименование"" стал равен ""111""","Проверка значения ячейки таблицы. Имя ячейки указывается как оно указано в конфигураторе.","UI.Таблицы.Ожидание значения элемента");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ТекстТекущейЯчейкиТаблицыСталРавен(Парам01,Парам02)","ТекстТекущейЯчейкиТаблицыСталРавен","Тогда текст текущей ячейки таблицы ""Таблица"" стал равен ""111""","Проверка значения текущей ячейки таблицы.","UI.Таблицы.Ожидание значения элемента");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеЯНажимаюНаГиперссылкуСЗаголовком(Парам01)","ВОткрытойФормеЯНажимаюНаГиперссылкуСЗаголовком","И     В открытой форме я нажимаю на гиперссылку с заголовком ""Гиперссылка""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеЯНажимаюНаГиперссылку(Парам01)","ВОткрытойФормеЯНажимаюНаГиперссылку","И     В открытой форме я нажимаю на гиперссылку ""Гиперссылка""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯНажимаюНаГиперссылку(Парам01)","ЯНажимаюНаГиперссылку","И     я нажимаю на гиперссылку ""Гиперссылка""","Нажатие на гиперссылку.","UI.Формы.Гиперссылки");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеЯНажимаюНаГиперссылкуСИменем(Парам01)","ВОткрытойФормеЯНажимаюНаГиперссылкуСИменем","И     В открытой форме я нажимаю на гиперссылку с именем ""Гиперссылка""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯНажимаюНаГиперссылкуСИменем(Парам01)","ЯНажимаюНаГиперссылкуСИменем","И     я нажимаю на гиперссылку с именем ""Гиперссылка""","Нажатие на гиперссылку.","UI.Формы.Гиперссылки");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеЯНажимаюНаКнопкуСИменем(Парам01)","ВОткрытойФормеЯНажимаюНаКнопкуСИменем","И     В открытой форме я нажимаю на кнопку с именем ""ЗаполнитьРекСтрока1""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯНажимаюНаКнопкуСИменем(Парам01)","ЯНажимаюНаКнопкуСИменем","И     я нажимаю на кнопку с именем ""ЗаполнитьРекСтрока1""");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеЯСворачиваюГруппуСЗаголовком(Парам01)","ВОткрытойФормеЯСворачиваюГруппуСЗаголовком","И     В открытой форме я сворачиваю группу с заголовком ""СворачиваемаяГруппа""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеЯСворачиваюГруппу(Парам01)","ВОткрытойФормеЯСворачиваюГруппу","И     В открытой форме я сворачиваю группу ""СворачиваемаяГруппа""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯСворачиваюГруппу(Парам01)","ЯСворачиваюГруппу","И     я сворачиваю группу ""СворачиваемаяГруппа""","Сворачивает группу","UI.Формы.Группы");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеЯСворачиваюГруппуСИменем(Парам01)","ВОткрытойФормеЯСворачиваюГруппуСИменем","И     В открытой форме я сворачиваю группу с именем ""СворачиваемаяГруппа""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯСворачиваюГруппуСИменем(Парам01)","ЯСворачиваюГруппуСИменем","И     я сворачиваю группу с именем ""СворачиваемаяГруппа""","Сворачивает группу","UI.Формы.Группы");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеЯРазворачиваюГруппуСЗаголовком(Парам01)","ВОткрытойФормеЯРазворачиваюГруппуСЗаголовком","И     В открытой форме я разворачиваю группу с заголовком ""СворачиваемаяГруппа""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеЯРазворачиваюГруппу(Парам01)","ВОткрытойФормеЯРазворачиваюГруппу","И     В открытой форме я разворачиваю группу ""СворачиваемаяГруппа""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯРазворачиваюГруппу(Парам01)","ЯРазворачиваюГруппу","И     я разворачиваю группу ""СворачиваемаяГруппа""","Разворачивает группу","UI.Формы.Группы");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеЯРазворачиваюГруппуСИменем(Парам01)","ВОткрытойФормеЯРазворачиваюГруппуСИменем","И     В открытой форме я разворачиваю группу с именем ""СворачиваемаяГруппа""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯРазворачиваюГруппуСИменем(Парам01)","ЯРазворачиваюГруппуСИменем","И     я разворачиваю группу с именем ""СворачиваемаяГруппа""","Разворачивает группу","UI.Формы.Группы");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеЯОткрываюВыпадающийСписокСЗаголовком(Парам01)","ВОткрытойФормеЯОткрываюВыпадающийСписокСЗаголовком","И     В открытой форме я открываю выпадающий список с заголовком ""Реквизит2""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеЯОткрываюВыпадающийСписок(Парам01)","ВОткрытойФормеЯОткрываюВыпадающийСписок","И     В открытой форме я открываю выпадающий список ""Реквизит2""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯОткрываюВыпадающийСписок(Парам01)","ЯОткрываюВыпадающийСписок","И     я открываю выпадающий список ""Реквизит2""");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеЯОткрываюВыпадающийСписокСИменем(Парам01)","ВОткрытойФормеЯОткрываюВыпадающийСписокСИменем","И     В открытой форме я открываю выпадающий список с именем ""Реквизит2""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯОткрываюВыпадающийСписокСИменем(Парам01)","ЯОткрываюВыпадающийСписокСИменем","И     я открываю выпадающий список с именем ""Реквизит2""");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеЯВыбираюЗначениеРеквизитаСЗаголовкомИзФормыСписка(Парам01)","ВОткрытойФормеЯВыбираюЗначениеРеквизитаСЗаголовкомИзФормыСписка","И     В открытой форме я выбираю значение реквизита с заголовком ""Реквизит2"" из формы списка");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеЯВыбираюЗначениеРеквизитаИзФормыСписка(Парам01)","ВОткрытойФормеЯВыбираюЗначениеРеквизитаИзФормыСписка","И     В открытой форме я выбираю значение реквизита ""Реквизит2"" из формы списка");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯВыбираюЗначениеРеквизитаИзФормыСписка(Парам01)","ЯВыбираюЗначениеРеквизитаИзФормыСписка","И     я выбираю значение реквизита ""Реквизит2"" из формы списка");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеЯВыбираюЗначениеРеквизитаСИменемИзФормыСписка(Парам01)","ВОткрытойФормеЯВыбираюЗначениеРеквизитаСИменемИзФормыСписка","И     В открытой форме я выбираю значение реквизита с именем ""Реквизит2"" из формы списка");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯВыбираюЗначениеРеквизитаСИменемИзФормыСписка(Парам01)","ЯВыбираюЗначениеРеквизитаСИменемИзФормыСписка","И     я выбираю значение реквизита с именем ""Реквизит2"" из формы списка");
	
	
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВФормеВТаблицеЯПерехожуКСтроке(Парам01,Парам02,ТабПарам)","ВФормеВТаблицеЯПерехожуКСтроке","И     В форме ""Справочник2"" в таблице ""Список"" я перехожу к строке:" + Символы.ПС + "		| Наименование |" + Символы.ПС + "		|    Товар1    |");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТаблицеЯПерехожуКСтроке(Парам01,ТабПарам)","ВТаблицеЯПерехожуКСтроке","И     в таблице ""Список"" я перехожу к строке:" + Символы.ПС + "		| Наименование |" + Символы.ПС + "		|    Товар1    |","Переход к нужной строке данной таблицы","UI.Таблицы.Переход к строке");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТаблицеЯПерехожуКПервойСтроке(Парам01)","ВТаблицеЯПерехожуКПервойСтроке",      "И     в таблице ""Список"" я перехожу к первой строке","Переход к первой строке данной таблицы","UI.Таблицы.Переход к строке");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТаблицеЯПерехожуКПоследнейСтроке(Парам01)","ВТаблицеЯПерехожуКПоследнейСтроке","И     в таблице ""Список"" я перехожу к последней строке","Переход к последней строке данной таблицы","UI.Таблицы.Переход к строке");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТаблицеЯПерехожуКПредыдущейСтроке(Парам01)","ВТаблицеЯПерехожуКПредыдущейСтроке",      "И     в таблице ""Список"" я перехожу к предыдущей строке","Переход к предыдущей строке данной таблицы","UI.Таблицы.Переход к строке");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТаблицеЯПерехожуКСледующейСтроке(Парам01)","ВТаблицеЯПерехожуКСледующейСтроке",      "И     в таблице ""Список"" я перехожу к следующей строке","Переход к следующей строке данной таблицы","UI.Таблицы.Переход к строке");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТаблицеЯДобавляюСтроку(Парам01)","ВТаблицеЯДобавляюСтроку",      "И     в таблице ""Список"" я добавляю строку","Добавление строки","UI.Таблицы.Добавить строку");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТаблицеЯУдаляюСтроку(Парам01)","ВТаблицеЯУдаляюСтроку",          "И     в таблице ""Список"" я удаляю строку"  ,"Удаление строки","UI.Таблицы.Удалить строку");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВФормеВТаблицеЯРазворачиваюСтроку(Парам01,Парам02,ТабПарам)","ВФормеВТаблицеЯРазворачиваюСтроку","И     В форме ""Справочник2"" в таблице ""Список"" я разворачиваю строку:" + Символы.ПС + "		| Наименование |" + Символы.ПС + "		|    Товар1    |");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТаблицеЯРазворачиваюСтроку(Парам01,ТабПарам)","ВТаблицеЯРазворачиваюСтроку","И    в таблице ""Список"" я разворачиваю строку:" + Символы.ПС + "		| Наименование |" + Символы.ПС + "		|    Товар1    |","Развернуть группу строк","UI.Таблицы.Развернуть/Свернуть");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТаблицеЯРазворачиваюТекущуюСтроку(Парам01)","ВТаблицеЯРазворачиваюТекущуюСтроку","И    в таблице ""Список"" я разворачиваю текущую строку","Развернуть текущую строку таблицы/дерева","UI.Таблицы.Развернуть/Свернуть");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВФормеВТаблицеЯСворачиваюСтроку(Парам01,Парам02,ТабПарам)","ВФормеВТаблицеЯСворачиваюСтроку","И     В форме ""Справочник2"" в таблице ""Список"" я сворачиваю строку:" + Символы.ПС + "		| Наименование |" + Символы.ПС + "		|    Товар1    |");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТаблицеЯСворачиваюСтроку(Парам01,ТабПарам)","ВТаблицеЯСворачиваюСтроку","И    в таблице ""Список"" я сворачиваю строку:" + Символы.ПС + "		| Наименование |" + Символы.ПС + "		|    Товар1    |","Свернуть группу строк","UI.Таблицы.Развернуть/Свернуть");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТаблицеЯСворачиваюТекущуюСтроку(Парам01)","ВТаблицеЯСворачиваюТекущуюСтроку","И    в таблице ""Список"" я сворачиваю текущую строку","Свернуть текущую строку таблицы/дерева","UI.Таблицы.Развернуть/Свернуть");
	
	
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВФормеВТЧЯВыбираюТекущуюСтроку(Парам01,Парам02)","ВФормеВТЧЯВыбираюТекущуюСтроку","И     В форме ""Справочник2"" в ТЧ ""Список"" я выбираю текущую строку");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТаблицеЯВыбираюТекущуюСтроку(Парам01)","ВТаблицеЯВыбираюТекущуюСтроку","И     в таблице ""Список"" я выбираю текущую строку","Выбор текущей строки с указанием ТЧ","UI.Таблицы.Выбор строки");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЕстьЭлементСправочникаСНаименованиемИРеквизитомРавным(Парам01,Парам02,Парам03,Парам04)","ЕстьЭлементСправочникаСНаименованиемИРеквизитомРавным","И     Есть элемент справочника ""Справочник1"" с наименованием ""Тест"" и  реквизитом ""Реквизит2"" равным ""Группа2Элем2""");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеЯИзменяюФлагСЗаголовком(Парам01)","ВОткрытойФормеЯИзменяюФлагСЗаголовком","И     В открытой форме я изменяю флаг с заголовком ""Реквизит булево""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеЯИзменяюФлаг(Парам01)","ВОткрытойФормеЯИзменяюФлаг","И     В открытой форме я изменяю флаг ""Реквизит булево""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯИзменяюФлаг(Парам01)","ЯИзменяюФлаг","И     я изменяю флаг ""Реквизит булево""", "Изменяет текущее состояние флага", "UI.Флаги");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеЯИзменяюФлагСИменем(Парам01)","ВОткрытойФормеЯИзменяюФлагСИменем","И     В открытой форме я изменяю флаг с именем ""Реквизит булево""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯИзменяюФлагСИменем(Парам01)","ЯИзменяюФлагСИменем","И     я изменяю флаг с именем ""Реквизит булево""", "Изменяет текущее состояние флага", "UI.Флаги");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеЯМеняюЗначениеПереключателяСЗаголовкомНа(Парам01,Парам02)","ВОткрытойФормеЯМеняюЗначениеПереключателяСЗаголовкомНа","И     В открытой форме я меняю значение переключателя с заголовком ""Реквизит переключатель"" на ""Первое значение""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеЯМеняюЗначениеПереключателяНа(Парам01,Парам02)","ВОткрытойФормеЯМеняюЗначениеПереключателяНа","И     В открытой форме я меняю значение переключателя ""Реквизит переключатель"" на ""Первое значение""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯМеняюЗначениеПереключателяНа(Парам01,Парам02)","ЯМеняюЗначениеПереключателяНа","И     я меняю значение переключателя ""Реквизит переключатель"" на ""Первое значение""","UI.Переключатели");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеЯМеняюЗначениеПереключателяСИменемНа(Парам01,Парам02)","ВОткрытойФормеЯМеняюЗначениеПереключателяСИменемНа","И     В открытой форме я меняю значение переключателя с именем ""Реквизит переключатель"" на ""Первое значение""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯМеняюЗначениеПереключателяСИменемНа(Парам01,Парам02)","ЯМеняюЗначениеПереключателяСИменемНа","И     я меняю значение переключателя с именем ""Реквизит переключатель"" на ""Первое значение""");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеВТЧЯНажимаюНаКнопкуСЗаголовком(Парам01,Парам02)","ВОткрытойФормеВТЧЯНажимаюНаКнопкуСЗаголовком","И     В открытой форме в ТЧ ""ТабличнаяЧасть1"" я нажимаю на кнопку с заголовком ""Добавить""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеВТЧЯНажимаюНаКнопку(Парам01,Парам02)","ВОткрытойФормеВТЧЯНажимаюНаКнопку","И     В открытой форме в ТЧ ""ТабличнаяЧасть1"" я нажимаю на кнопку ""Добавить""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТЧЯНажимаюНаКнопку(Парам01,Парам02)","ВТЧЯНажимаюНаКнопку","И     в ТЧ ""ТабличнаяЧасть1"" я нажимаю на кнопку ""Добавить""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТаблицеЯНажимаюНаКнопку(Парам01,Парам02)","ВТаблицеЯНажимаюНаКнопку","И     в таблице ""ТабличнаяЧасть1"" я нажимаю на кнопку ""Добавить""","Нажимает на кнопку таблицы. Кнопка ищется по заголовку.","UI.Таблицы.Кнопки");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеВТЧЯНажимаюНаКнопкуСИменем(Парам01,Парам02)","ВОткрытойФормеВТЧЯНажимаюНаКнопкуСИменем","И     В открытой форме в ТЧ ""ТабличнаяЧасть1"" я нажимаю на кнопку с именем ""Добавить""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТЧЯНажимаюНаКнопкуСИменем(Парам01,Парам02)","ВТЧЯНажимаюНаКнопкуСИменем","И     в ТЧ ""ТабличнаяЧасть1"" я нажимаю на кнопку с именем ""Добавить""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТаблицеЯНажимаюНаКнопкуСИменем(Парам01,Парам02)","ВТаблицеЯНажимаюНаКнопкуСИменем","И     в таблице ""ТабличнаяЧасть1"" я нажимаю на кнопку с именем ""Добавить""","Нажимает на кнопку таблицы. Кнопка ищется по имени.","UI.Таблицы.Кнопки");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеВТЧВПолеСЗаголовкомЯВвожуТекст(Парам01,Парам02,Парам03)","ВОткрытойФормеВТЧВПолеСЗаголовкомЯВвожуТекст","И     В открытой форме в ТЧ ""ТабличнаяЧасть1"" в поле с заголовком ""Реквизит число"" я ввожу текст ""56,78""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеВТЧВПолеЯВвожуТекст(Парам01,Парам02,Парам03)","ВОткрытойФормеВТЧВПолеЯВвожуТекст","И     В открытой форме в ТЧ ""ТабличнаяЧасть1"" в поле ""Реквизит число"" я ввожу текст ""56,78""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТЧВПолеЯВвожуТекст(Парам01,Парам02,Парам03)","ВТЧВПолеЯВвожуТекст","И     в ТЧ ""ТабличнаяЧасть1"" в поле ""Реквизит число"" я ввожу текст ""56,78""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТаблицеВПолеЯВвожуТекст(Парам01,Парам02,Парам03)","ВТаблицеВПолеЯВвожуТекст","И     в таблице ""ТабличнаяЧасть1"" в поле ""Реквизит число"" я ввожу текст ""56,78""","Ввод текста в поле таблицы","UI.Таблицы.Реквизиты");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеВТЧВПолеСИменемЯВвожуТекст(Парам01,Парам02,Парам03)","ВОткрытойФормеВТЧВПолеСИменемЯВвожуТекст","И     В открытой форме в ТЧ ""ТабличнаяЧасть1"" в поле с именем ""Реквизит число"" я ввожу текст ""56,78""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТЧВПолеСИменемЯВвожуТекст(Парам01,Парам02,Парам03)","ВТЧВПолеСИменемЯВвожуТекст","И     в ТЧ ""ТабличнаяЧасть1"" в поле с именем ""Реквизит число"" я ввожу текст ""56,78""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТаблицеВПолеСИменемЯВвожуТекст(Парам01,Парам02,Парам03)","ВТаблицеВПолеСИменемЯВвожуТекст","И     в таблице ""ТабличнаяЧасть1"" в поле с именем ""Реквизит число"" я ввожу текст ""56,78""","Ввод текста в поле таблицы","UI.Таблицы.Реквизиты");
	
	
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеВТЧИзВыпадающегоСпискаСЗаголовкомЯВыбираю(Парам01,Парам02,Парам03)","ВОткрытойФормеВТЧИзВыпадающегоСпискаСЗаголовкомЯВыбираю","И     В открытой форме в ТЧ ""ТабличнаяЧасть1"" из выпадающего списка с заголовком ""Реквизит справочник"" я выбираю ""ТестовыйЭлемент21""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеВТЧИзВыпадающегоСпискаЯВыбираю(Парам01,Парам02,Парам03)","ВОткрытойФормеВТЧИзВыпадающегоСпискаЯВыбираю","И     В открытой форме в ТЧ ""ТабличнаяЧасть1"" из выпадающего списка ""Реквизит справочник"" я выбираю ""ТестовыйЭлемент21""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТЧИзВыпадающегоСпискаЯВыбираю(Парам01,Парам02,Парам03)","ВТЧИзВыпадающегоСпискаЯВыбираю","И     в ТЧ ""ТабличнаяЧасть1"" из выпадающего списка ""Реквизит справочник"" я выбираю ""ТестовыйЭлемент21""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТаблицеИзВыпадающегоСпискаЯВыбираю(Парам01,Парам02,Парам03)","ВТаблицеИзВыпадающегоСпискаЯВыбираю","И     в таблице ""ТабличнаяЧасть1"" из выпадающего списка ""Реквизит справочник"" я выбираю ""ТестовыйЭлемент21""","Выбор значения из выпадающего списка","UI.Таблицы.Реквизиты");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТаблицеИзВыпадающегоСпискаСИменемЯВыбираю(Парам01,Парам02,Парам03)","ВТаблицеИзВыпадающегоСпискаСИменемЯВыбираю","И     в таблице ""ТабличнаяЧасть1"" из выпадающего списка с именем ""Реквизит справочник"" я выбираю ""ТестовыйЭлемент21""","Выбор значения из выпадающего списка","UI.Таблицы.Реквизиты");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеВТЧЯИзменяюФлагСЗаголовком(Парам01,Парам02)","ВОткрытойФормеВТЧЯИзменяюФлагСЗаголовком","И     В открытой форме в ТЧ ""ТабличнаяЧасть1"" я изменяю флаг с заголовком ""Реквизит булево""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеВТЧЯИзменяюФлаг(Парам01,Парам02)","ВОткрытойФормеВТЧЯИзменяюФлаг","И     В открытой форме в ТЧ ""ТабличнаяЧасть1"" я изменяю флаг ""Реквизит булево""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТЧЯИзменяюФлаг(Парам01,Парам02)","ВТЧЯИзменяюФлаг","И     в ТЧ ""ТабличнаяЧасть1"" я изменяю флаг ""Реквизит булево""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТаблицеЯИзменяюФлаг(Парам01,Парам02)","ВТаблицеЯИзменяюФлаг","И     в таблице ""ТабличнаяЧасть1"" я изменяю флаг ""Реквизит булево""", "Изменяет текущее состояние флага", "UI.Таблицы.Флаги");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТаблицеЯИзменяюФлагСИменем(Парам01,Парам02)","ВТаблицеЯИзменяюФлагСИменем","И     в таблице ""ТабличнаяЧасть1"" я изменяю флаг с именем ""РеквизитБулево""", "Изменяет текущее состояние флага", "UI.Таблицы.Флаги");
	
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеВТЧЯВыбираюЗначениеРеквизитаСЗаголовкомИзФормыСписка(Парам01,Парам02)","ВОткрытойФормеВТЧЯВыбираюЗначениеРеквизитаСЗаголовкомИзФормыСписка","И     В открытой форме в ТЧ ""ТабличнаяЧасть1"" я выбираю значение реквизита с заголовком ""Реквизит справочник выбор из формы списка"" из формы списка");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеВТЧЯВыбираюЗначениеРеквизитаИзФормыСписка(Парам01,Парам02)","ВОткрытойФормеВТЧЯВыбираюЗначениеРеквизитаИзФормыСписка","И     В открытой форме в ТЧ ""ТабличнаяЧасть1"" я выбираю значение реквизита ""Реквизит справочник выбор из формы списка"" из формы списка");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТЧЯВыбираюЗначениеРеквизитаИзФормыСписка(Парам01,Парам02)","ВТЧЯВыбираюЗначениеРеквизитаИзФормыСписка","И     в ТЧ ""ТабличнаяЧасть1"" я выбираю значение реквизита ""Реквизит справочник выбор из формы списка"" из формы списка");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТаблицеЯВыбираюЗначениеРеквизитаИзФормыСписка(Парам01,Парам02)","ВТаблицеЯВыбираюЗначениеРеквизитаИзФормыСписка","И     в таблице ""ТабличнаяЧасть1"" я выбираю значение реквизита ""Реквизит справочник выбор из формы списка"" из формы списка","Выбор значения реквизита из выпадающего списка","UI.Таблицы.Реквизиты");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеВТЧЯВыбираюЗначениеРеквизитаСИменемИзФормыСписка(Парам01,Парам02)","ВОткрытойФормеВТЧЯВыбираюЗначениеРеквизитаСИменемИзФормыСписка","И     В открытой форме в ТЧ ""ТабличнаяЧасть1"" я выбираю значение реквизита с именем ""Реквизит справочник выбор из формы списка"" из формы списка");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТЧЯВыбираюЗначениеРеквизитаСИменемИзФормыСписка(Парам01,Парам02)","ВТЧЯВыбираюЗначениеРеквизитаСИменемИзФормыСписка","И     в ТЧ ""ТабличнаяЧасть1"" я выбираю значение реквизита с именем ""Реквизит справочник выбор из формы списка"" из формы списка");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТаблицеЯВыбираюЗначениеРеквизитаСИменемИзФормыСписка(Парам01,Парам02)","ВТаблицеЯВыбираюЗначениеРеквизитаСИменемИзФормыСписка","И     в таблице ""ТабличнаяЧасть1"" я выбираю значение реквизита с именем ""Реквизит справочник выбор из формы списка"" из формы списка","Выбор значения реквизита из выпадающего списка","UI.Таблицы.Реквизиты");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЭлементСправочника1СИменемЗаписалсяКорректно(Парам01)","ЭлементСправочника1СИменемЗаписалсяКорректно","И     Элемент Справочника1 с именем ""Тестовый Элемент 2"" записался корректно");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯЗакрываюОкноСЗаголовком(Парам01)","ЯЗакрываюОкноСЗаголовком","И     Я закрываю окно с заголовком ""Справочник1""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯЗакрываюОкно(Парам01)","ЯЗакрываюОкно","И     Я закрываю окно ""Справочник1""","Закрывает окно с нужным заголовком","UI.Окна");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯЗакрываюТекущееОкно()","ЯЗакрываюТекущееОкно","И     Я закрываю теукщее окно","Закрывает активное окно","UI.Окна");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТекущемОкнеЯНажимаюКнопкуКомандногоИнтерфейса(Парам01)","ВТекущемОкнеЯНажимаюКнопкуКомандногоИнтерфейса","И     В текущем окне я нажимаю кнопку командного интерфейса ""Общая команда для справочника1""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеВТЧЯДобавляюНовуюСтроку(Парам01)","ВОткрытойФормеВТЧЯДобавляюНовуюСтроку","И     В открытой форме в ТЧ ""Товары"" я добавляю новую строку");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТЧЯДобавляюНовуюСтроку(Парам01)","ВТЧЯДобавляюНовуюСтроку","И     в ТЧ ""Товары"" я добавляю новую строку");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТаблицеЯДобавляюНовуюСтроку(Парам01)","ВТаблицеЯДобавляюНовуюСтроку","И     в таблице ""Товары"" я добавляю новую строку");

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеЯНажимаюНаКнопкуОткрытияПоляСЗаголовком(Парам01)","ВОткрытойФормеЯНажимаюНаКнопкуОткрытияПоляСЗаголовком","И     В открытой форме я нажимаю на кнопку открытия поля с заголовком ""Реквизит2""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеЯНажимаюНаКнопкуОткрытияПоля(Парам01)","ВОткрытойФормеЯНажимаюНаКнопкуОткрытияПоля","И     В открытой форме я нажимаю на кнопку открытия поля ""Реквизит2""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯНажимаюНаКнопкуОткрытияПоля(Парам01)","ЯНажимаюНаКнопкуОткрытияПоля","И     я нажимаю на кнопку открытия поля ""Реквизит2""");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеЯНажимаюНаКнопкуОткрытияПоляСИменем(Парам01)","ВОткрытойФормеЯНажимаюНаКнопкуОткрытияПоляСИменем","И     В открытой форме я нажимаю на кнопку открытия поля с именем ""Реквизит2""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯНажимаюНаКнопкуОткрытияПоляСИменем(Парам01)","ЯНажимаюНаКнопкуОткрытияПоляСИменем","И     я нажимаю на кнопку открытия поля с именем ""Реквизит2""");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеИзВыпадающегоСпискаСЗаголовкомЯВыбираю(Парам01,Парам02)","ВОткрытойФормеИзВыпадающегоСпискаСЗаголовкомЯВыбираю","И     В открытой форме из выпадающего списка с заголовком ""Реквизит2"" я выбираю ""ТестовыйЭлемент21""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеИзВыпадающегоСпискаЯВыбираю(Парам01,Парам02)","ВОткрытойФормеИзВыпадающегоСпискаЯВыбираю","И     В открытой форме из выпадающего списка ""Реквизит2"" я выбираю ""ТестовыйЭлемент21""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ИзВыпадающегоСпискаЯВыбираю(Парам01,Парам02)","ИзВыпадающегоСпискаЯВыбираю","И     из выпадающего списка ""Реквизит2"" я выбираю ""ТестовыйЭлемент21""","Выбор из выпадающего списка","UI.Выпадающий список");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеИзВыпадающегоСпискаСИменемЯВыбираю(Парам01,Парам02)","ВОткрытойФормеИзВыпадающегоСпискаСИменемЯВыбираю","И     В открытой форме из выпадающего списка с именем ""Реквизит2"" я выбираю ""ТестовыйЭлемент21""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ИзВыпадающегоСпискаСИменемЯВыбираю(Парам01,Парам02)","ИзВыпадающегоСпискаСИменемЯВыбираю","И     из выпадающего списка с именем ""Реквизит2"" я выбираю ""ТестовыйЭлемент21""");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеЯНажимаюКнопкуОчиститьУПоляСЗаголовком(Парам01)","ВОткрытойФормеЯНажимаюКнопкуОчиститьУПоляСЗаголовком","И     В открытой форме я нажимаю кнопку очистить у поля с заголовком ""Отбор""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеЯНажимаюКнопкуОчиститьУПоля(Парам01)","ВОткрытойФормеЯНажимаюКнопкуОчиститьУПоля","И     В открытой форме я нажимаю кнопку очистить у поля ""Отбор""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯНажимаюКнопкуОчиститьУПоля(Парам01)","ЯНажимаюКнопкуОчиститьУПоля","И     я нажимаю кнопку очистить у поля ""Отбор""");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеЯНажимаюКнопкуОчиститьУПоляСИменем(Парам01)","ВОткрытойФормеЯНажимаюКнопкуОчиститьУПоляСИменем","И     В открытой форме я нажимаю кнопку очистить у поля с именем ""Отбор""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯНажимаюКнопкуОчиститьУПоляСИменем(Парам01)","ЯНажимаюКнопкуОчиститьУПоляСИменем","И     я нажимаю кнопку очистить у поля с именем ""Отбор""");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ТабличныйДокументФормыСИменемСталПустым(Парам01)","ТабличныйДокументФормыСИменемСталПустым","И     табличный документ формы с именем ""РеквизитТабличныйДокумент"" стал пустым");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеВТаблицеСИменемВКолонкеНетЗначения(Парам01,Парам02,Парам03)","ВОткрытойФормеВТаблицеСИменемВКолонкеНетЗначения","И В открытой форме в таблице с именем ""ДеревоТестов"" в колонке ""Имя"" нет значения ""Temp1""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТаблицеСИменемВКолонкеНетЗначения(Парам01,Парам02,Парам03)","ВТаблицеСИменемВКолонкеНетЗначения","И в таблице с именем ""ДеревоТестов"" в колонке ""Имя"" нет значения ""Temp1""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеВТаблицеСИменемВКолонкеЕстьЗначение(Парам01,Парам02,Парам03)","ВОткрытойФормеВТаблицеСИменемВКолонкеЕстьЗначение","И В открытой форме в таблице с именем ""ДеревоТестов"" в колонке ""Имя"" есть значение ""ОткрытиеФормы""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТаблицеСИменемВКолонкеЕстьЗначение(Парам01,Парам02,Парам03)","ВТаблицеСИменемВКолонкеЕстьЗначение","И в таблице с именем ""ДеревоТестов"" в колонке ""Имя"" есть значение ""ОткрытиеФормы""");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеВТЧЯАктивизируюПоле(Парам01,Парам02)","ВОткрытойФормеВТЧЯАктивизируюПоле","И     В открытой форме в ТЧ ""Отборы"" я активизирую поле ""ИмяПоля""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТЧЯАктивизируюПоле(Парам01,Парам02)","ВТЧЯАктивизируюПоле","И     в ТЧ ""Отборы"" я активизирую поле ""ИмяПоля""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТаблицеЯАктивизируюПоле(Парам01,Парам02)","ВТаблицеЯАктивизируюПоле","И     в таблице ""Отборы"" я активизирую поле ""ИмяПоля""","Активизирует поле таблицы","UI.Таблицы.Реквизиты");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеВТЧЯАктивизируюПолеСИменем(Парам01,Парам02)","ВОткрытойФормеВТЧЯАктивизируюПолеСИменем","И     В открытой форме в ТЧ ""Отборы"" я активизирую поле с именем ""ИмяПоля""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТЧЯАктивизируюПолеСИменем(Парам01,Парам02)","ВТЧЯАктивизируюПолеСИменем","И     в ТЧ ""Отборы"" я активизирую поле с именем ""ИмяПоля""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТаблицеЯАктивизируюПолеСИменем(Парам01,Парам02)","ВТаблицеЯАктивизируюПолеСИменем","И     в таблице ""Отборы"" я активизирую поле с именем ""ИмяПоля""","Активизирует поле таблицы","UI.Таблицы.Реквизиты");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯБудуВыбиратьВнешнийФайл(Парам01)","ЯБудуВыбиратьВнешнийФайл","И     я буду выбирать внешний файл ""c:\temp\333.epf""");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯОчищаюОкноСообщенийПользователю()","ЯОчищаюОкноСообщенийПользователю","И     Я очищаю окно сообщений пользователю","Очищает окно сообщений пользователю.","UI.Сообщения пользователю");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯПерехожуПоНавигационнойСсылке(Парам01)","ЯПерехожуПоНавигационнойСсылке","Когда я перехожу по навигационной ссылке ""НавигационнаяСсылка""");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯПерехожуКСледующемуРеквизиту()","ЯПерехожуКСледующемуРеквизиту","И     я перехожу к следующему реквизиту");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯВыбираюПунктМеню(ЗначениеМеню)","ЯВыбираюПунктМеню","И     я выбираю пункт меню ""ЗначениеМеню""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"УПоляЯВыбираюПунктКонтекстногоМеню(Парам01,Парам02)","УПоляЯВыбираюПунктКонтекстногоМеню","И     у поля ""ИмяПоля"" я выбираю пункт контекстного меню ""ПунктМеню""","Выбирает нужный пункт контекстного меню у поля","UI.Формы.Контекстное меню");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"УПоляСИменемЯВыбираюПунктКонтекстногоМеню(Парам01,Парам02)","УПоляСИменемЯВыбираюПунктКонтекстногоМеню","И     у поля с именем ""ИмяПоля"" я выбираю пункт контекстного меню ""ПунктМеню""","Выбирает нужный пункт контекстного меню у поля","UI.Формы.Контекстное меню");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯВыбираюИзСписка(Значение)","ЯВыбираюИзСписка","И     я выбираю из списка ""Значение""");
	
	// В ТЧ Я Устанавливаю Флаг
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеВТЧЯУстанавливаюФлагСЗаголовком(Парам01,Парам02)","ВОткрытойФормеВТЧЯУстанавливаюФлагСЗаголовком","И     В открытой форме в ТЧ ""ТабличнаяЧасть1"" я устанавливаю флаг с заголовком ""Реквизит булево""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеВТЧЯУстанавливаюФлаг(Парам01,Парам02)","ВОткрытойФормеВТЧЯУстанавливаюФлаг","И     В открытой форме в ТЧ ""ТабличнаяЧасть1"" я устанавливаю флаг ""Реквизит булево""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТЧЯУстанавливаюФлаг(Парам01,Парам02)","ВТЧЯУстанавливаюФлаг","И     в ТЧ ""ТабличнаяЧасть1"" я устанавливаю флаг ""Реквизит булево""", "Устанавливает флаг в Истина", "UI.Таблицы.Флаги");

	// В ТЧ Я Снимаю Флаг
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеВТЧЯСнимаюФлагСЗаголовком(Парам01,Парам02)","ВОткрытойФормеВТЧЯСнимаюФлагСЗаголовком","И     В открытой форме в ТЧ ""ТабличнаяЧасть1"" я снимаю флаг с заголовком ""Реквизит булево""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеВТЧЯСнимаюФлаг(Парам01,Парам02)","ВОткрытойФормеВТЧЯСнимаюФлаг","И     В открытой форме в ТЧ ""ТабличнаяЧасть1"" я снимаю флаг ""Реквизит булево""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТЧЯСнимаюФлаг(Парам01,Парам02)","ВТЧЯСнимаюФлаг","И     в ТЧ ""ТабличнаяЧасть1"" я снимаю флаг ""Реквизит булево""", "Устанавливает флаг в Ложь", "UI.Таблицы.Флаги");
	
	// Я Снимаю Флаг
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеЯСнимаюФлагСЗаголовком(Парам01)","ВОткрытойФормеЯСнимаюФлагСЗаголовком","И     В открытой форме я снимаю флаг с заголовком ""Реквизит булево""", "Устанавливает флаг в Ложь", "UI.Флаги");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеЯСнимаюФлаг(Парам01)","ВОткрытойФормеЯСнимаюФлаг","И     В открытой форме я снимаю флаг ""Реквизит булево""", "Устанавливает флаг в Ложь", "UI.Флаги");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯСнимаюФлаг(Парам01)","ЯСнимаюФлаг","И     я снимаю флаг ""Реквизит булево""","Устанавливает флаг в Ложь", "UI.Флаги");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеЯСнимаюФлагСИменем(Парам01)","ВОткрытойФормеЯСнимаюФлагСИменем","И     В открытой форме я снимаю флаг с именем ""Реквизит булево""", "Устанавливает флаг в Ложь", "UI.Флаги");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯСнимаюФлагСИменем(Парам01)","ЯСнимаюФлагСИменем","И     я снимаю флаг с именем ""Реквизит булево""", "Устанавливает флаг в Ложь", "UI.Флаги");
	
	// Я Устанавливаю Флаг
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеЯУстанавливаюФлагСЗаголовком(Парам01)","ВОткрытойФормеЯУстанавливаюФлагСЗаголовком","И     В открытой форме я устанавливаю флаг с заголовком ""Реквизит булево""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеЯУстанавливаюФлаг(Парам01)","ВОткрытойФормеЯУстанавливаюФлаг","И     В открытой форме я устанавливаю флаг ""Реквизит булево""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯУстанавливаюФлаг(Парам01)","ЯУстанавливаюФлаг","И     я устанавливаю флаг ""Реквизит булево""","Устанавливает флаг в Истина","UI.Флаги");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеЯУстанавливаюФлагСИменем(Парам01)","ВОткрытойФормеЯУстанавливаюФлагСИменем","И     В открытой форме я устанавливаю флаг с именем ""Реквизит булево""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯУстанавливаюФлагСИменем(Парам01)","ЯУстанавливаюФлагСИменем","И     я устанавливаю флаг с именем ""Реквизит булево""", "Устанавливает флаг в Истина", "UI.Флаги");
	
	//чтобы запомнить в переменной Контекст значение элемента формы
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯЗапоминаюЗначениеПоляКак(Парам01,Парам02)","ЯЗапоминаюЗначениеПоляКак","И     я запоминаю значение поля ""Номер"" как ""НомерДокумента""","Сохранение значения поля в переменную Контекст","Контекст.Контекст.Сохранить значение");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯЗапоминаюЗначениеТаблицыПоляКак(Парам01,Парам02,Парам03)","ЯЗапоминаюЗначениеТаблицыПоляКак","И     я запоминаю значение таблицы ""ТабличнаяЧасть1"" поля ""Номер"" как ""НомерДокумента""","Сохранение значения поля таблицы в переменную Контекст","Контекст.Контекст.Сохранить значение");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯЗапоминаюЗначениеПоляСКлючом(Парам01,Парам02)","ЯЗапоминаюЗначениеПоляСКлючом","И     я запоминаю значение поля ""Номер"" с ключом ""Номер документа""","Сохранение значения поля в переменную Контекст с произвольным ключом","Контекст.Контекст.Сохранить значение");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯЗапоминаюЗначениеПоляКакГлобально(Парам01,Парам02)","ЯЗапоминаюЗначениеПоляКакГлобально","И     я запоминаю значение поля ""Номер"" как ""НомерДокумента"" глобально","Сохранение значения поля в переменную КонтекстСохраняемый","Контекст.Контекст сохраняемый.Сохранить значение");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯЗапоминаюЗначениеПоляСКлючомГлобально(Парам01,Парам02)","ЯЗапоминаюЗначениеПоляСКлючомГлобально","И     я запоминаю значение поля ""Номер"" с ключом ""Номер документа"" глобально","Сохранение значения поля в переменную КонтекстСохраняемый с произвольным ключом","Контекст.Контекст сохраняемый.Сохранить значение");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВПолеВвожуЗначениеПеременной(Парам01,Парам02)","ВПолеВвожуЗначениеПеременной","И     в поле ""Номер"" ввожу значение переменной ""НомерДокумента""", "Вставка значения ранее сохраненной переменной в реквизит", "Контекст.Контекст.Прочитать значение");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТаблицуВПолеВвожуЗначениеПеременной(Парам01,Парам02,Парам03)","ВТаблицуВПолеВвожуЗначениеПеременной","И     в Таблицу ""ТабличнаяЧасть1"" в поле ""Номер"" ввожу значение переменной ""НомерДокумента""", "Вставка значения ранее сохраненной переменной в реквизит", "Контекст.Контекст.Прочитать значение");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВПолеВвожуЗначениеКлюча(Парам01,Парам02)","ВПолеВвожуЗначениеКлюча","И     в поле ""Номер"" ввожу значение ключа ""Номер документа""", "Вставка значения ранее сохраненного произвольного ключа в реквизит", "Контекст.Контекст.Прочитать значение");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВПолеВвожуЗначениеГлобальнойПеременной(Парам01,Парам02)","ВПолеВвожуЗначениеГлобальнойПеременной","И     в поле ""Номер"" ввожу значение глобальной переменной ""НомерДокумента""", "Вставка значения ранее сохраненной переменной в реквизит", "Контекст.Контекст сохраняемый.Прочитать значение");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВПолеВвожуЗначениеГлобальногоКлюча(Парам01,Парам02)","ВПолеВвожуЗначениеГлобальногоКлюча","И     в поле ""Номер"" ввожу значение глобального ключа ""НомерДокумента""", "Вставка значения ранее сохраненного ключа в реквизит", "Контекст.Контекст сохраняемый.Прочитать значение");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВПолеСИменемВвожуЗначениеПеременной(Парам01,Парам02)","ВПолеСИменемВвожуЗначениеПеременной","И     в поле с именем ""Номер"" ввожу значение переменной ""НомерДокумента""", "Вставка значения ранее сохраненной переменной в реквизит", "Контекст.Контекст.Прочитать значение");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВПолеСИменемВвожуЗначениеКлюча(Парам01,Парам02)","ВПолеСИменемВвожуЗначениеКлюча","И     в поле с именем ""Номер"" ввожу значение ключа ""Номер документа""", "Вставка значения ранее сохраненного произвольного ключа в реквизит", "Контекст.Контекст.Прочитать значение");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВПолеСИменемВвожуЗначениеГлобальнойПеременной(Парам01,Парам02)","ВПолеСИменемВвожуЗначениеГлобальнойПеременной","И     в поле с именем ""Номер"" ввожу значение глобальной переменной ""НомерДокумента""", "Вставка значения ранее сохраненной переменной в реквизит", "Контекст.Контекст сохраняемый.Прочитать значение");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВПолеСИменемВвожуЗначениеГлобальногоКлюча(Парам01,Парам02)","ВПолеСИменемВвожуЗначениеГлобальногоКлюча","И     в поле с именем ""Номер"" ввожу значение глобального ключа ""Номер документа""", "Вставка значения ранее сохраненного произвольного ключа в реквизит", "Контекст.Контекст сохраняемый.Прочитать значение");
	
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ФлагРавен(Парам01,Парам02)","ФлагРавен","И     флаг ""Реквизит булево"" равен ""Истина""","Проверяет значение флага","UI.Флаги");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ПоявилосьПредупреждениеСодержащееТекст(Парам01)","ПоявилосьПредупреждениеСодержащееТекст","Тогда появилось предупреждение, содержащее текст ""Текст""","Проверяет, что появилось окно предупреждения, содержащее нужный текст.","UI.Всплывающие окна");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"НеПоявилосьОкноПредупрежденияСистемы()","НеПоявилосьОкноПредупрежденияСистемы","Тогда не появилось окно предупреждения системы","Проверяет, что на экране нет предупреждения системы.","UI.Всплывающие окна");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЕслиПоявилосьОкноДиалогаЯНажимаюНаКнопку(Парам01)","ЕслиПоявилосьОкноДиалогаЯНажимаюНаКнопку","Затем Если появилось окно диалога я нажимаю на кнопку ""ОК""","Если на экране появилось диалоговое окно - нажимает на нужную кнопку.","UI.Всплывающие окна");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯЖдуПоявленияЭлемента(Парам01)", 								"ЯЖдуПоявленияЭлемента", 						"И я жду появления элемента ""Имя элемента""","Ожидание появления элемента формы с нужным заголовком","UI.Формы.Ожидание появляния элемента");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯЖдуПоявленияЭлементаСИменем(Парам01)", 							"ЯЖдуПоявленияЭлементаСИменем", 				"И я жду появления элемента с именем ""Имя элемента""","Ожидание появления элемента формы с нужным именем","UI.Формы.Ожидание появляния элемента");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯЖдуПоявленияЭлементаВТеченииСекунд(Парам01, Парам02)", 			"ЯЖдуПоявленияЭлементаВТеченииСекунд", 			"И я жду появления элемента ""Имя элемента"" в течении ""Таймаут"" секунд","Ожидание появления элемента формы с нужным заголовком в течении указанного числа секунд","UI.Формы.Ожидание появляния элемента");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯЖдуПоявленияЭлементаСИменемВТеченииСекунд(Парам01, Парам02)", 	"ЯЖдуПоявленияЭлементаСИменемВТеченииСекунд", 	"И я жду появления элемента с именем ""Имя элемента"" в течении ""Таймаут"" секунд","Ожидание появления элемента формы с нужным именем в течении указанного числа секунд","UI.Формы.Ожидание появляния элемента");
	
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"УЭлементаЯЖдуЗначения(Парам01,Парам02)", 							"УЭлементаЯЖдуЗначения", 						"И у элемента ""Имя элемента"" я жду значения ""Значение""","Ожидание что элемент формы примет нужное значение (таймаут 10)","UI.Формы.Ожидание значения элемента");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"УЭлементаСИменемЯЖдуЗначения(Парам01,Парам02)", 						"УЭлементаСИменемЯЖдуЗначения", 				"И у элемента с именем ""Имя элемента"" я жду значения ""Значение""","Ожидание что элемент формы примет нужное значение (таймаут 10)","UI.Формы.Ожидание значения элемента");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"УЭлементаЯЖдуЗначенияВТеченииСекунд(Парам01,Парам02,Парам03)",		"УЭлементаЯЖдуЗначенияВТеченииСекунд", 			"И у элемента ""Имя элемента"" я жду значения ""Значение"" в течении 20 секунд","Ожидание что элемент формы примет нужное значение в течении нужного времени. Иначе будет вызвано исключение.","UI.Формы.Ожидание значения элемента");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"УЭлементаСИменемЯЖдуЗначенияВТеченииСекунд(Парам01,Парам02,Парам03)",		"УЭлементаСИменемЯЖдуЗначенияВТеченииСекунд", 			"И у элемента с именем ""Имя элемента"" я жду значения ""Значение"" в течении 20 секунд","Ожидание что элемент формы примет нужное значение в течении нужного времени. Иначе будет вызвано исключение.","UI.Формы.Ожидание значения элемента");
	
	
	// проверка видимости элемента
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯВижуЭлемент(ИмяЭлемента)",               "ЯВижуЭлемент",               "И я вижу элемент ""Имя элемента""",                  "Проверяет видимость элемента на форме", "UI.Формы.Видимость");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯВижуЭлементНаФорме(ИмяЭлемента)",        "ЯВижуЭлементНаФорме",        "И я вижу элемент ""Имя элемента"" на форме",         "Проверяет видимость элемента на форме", "UI.Формы.Видимость");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯВижуЭлементСИменем(ИмяЭлемента)",        "ЯВижуЭлемент",               "И я вижу элемент с именем ""Имя элемента""",         "Проверяет видимость элемента на форме", "UI.Формы.Видимость");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯВижуЭлементСИменемНаФорме(ИмяЭлемента)", "ЯВижуЭлементНаФорме",        "И я вижу элемент с именем ""Имя элемента"" на форме","Проверяет видимость элемента на форме", "UI.Формы.Видимость");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯНеВижуЭлемент(ИмяЭлемента)",              "ЯНеВижуЭлемент",              "И я не вижу элемент ""Имя элемента""",                  "Проверяет не видимость элемента на форме","UI.Формы.Видимость");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯНеВижуЭлементНаФорме(ИмяЭлемента)",       "ЯНеВижуЭлементНаФорме",       "И я не вижу элемент ""Имя элемента"" на форме",         "Проверяет не видимость элемента на форме","UI.Формы.Видимость");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯНеВижуЭлементСИменем(ИмяЭлемента)",       "ЯНеВижуЭлементСИменем",       "И я не вижу элемент с именем ""Имя элемента""",         "Проверяет не видимость элемента на форме","UI.Формы.Видимость");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯНеВижуЭлементСИменемНаФорме(ИмяЭлемента)","ЯНеВижуЭлементСИменемНаФорме","И я не вижу элемент с именем ""Имя элемента"" на форме","Проверяет не видимость элемента на форме","UI.Формы.Видимость");	
	
	// стоит флаг "только просмотр"
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЭлементДоступенДляПросмотра(ИмяЭлемента)",                     "ЭлементДоступенДляПросмотра",                     "И элемент ""Имя элемента"" доступен для просмотра",                          "Проверка отсутствия флага ""Только просмотр""","UI.Формы.Просмотр");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЭлементСИменемДоступенДляПросмотра(ИмяЭлемента)",              "ЭлементСИменемДоступенДляПросмотра",              "И элемент с именем ""Имя элемента"" доступен для просмотра",                 "Проверка отсутствия флага ""Только просмотр""","UI.Формы.Просмотр");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеЭлементДоступенДляПросмотра(ИмяЭлемента)",       "ВОткрытойФормеЭлементДоступенДляПросмотра",       "И в открытой форме элемент ""Имя элемента"" доступен для просмотра");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеЭлементСИменемДоступенДляПросмотра(ИмяЭлемента)","ВОткрытойФормеЭлементСИменемДоступенДляПросмотра","И в открытой форме элемент с именем ""Имя элемента"" доступен для просмотра");	
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЭлементДоступенНеТолькоДляПросмотра(ИмяЭлемента)",       "ЭлементДоступенНеТолькоДляПросмотра",       "И элемент ""Реквизит1"" доступен не только для просмотра","Проверка установленного флага ""Только просмотр""",         "UI.Формы.Просмотр");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЭлементСИменемДоступенНеТолькоДляПросмотра(ИмяЭлемента)","ЭлементСИменемДоступенНеТолькоДляПросмотра","И элемент с именем ""Реквизит1"" доступен не только для просмотра","Проверка установленного флага ""Только просмотр""","UI.Формы.Просмотр");	
	
	// проверка доступность элемента
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЭлементФормыДоступен(ИмяЭлемента)",         "ЭлементФормыДоступен",         "И     элемент формы ""ИмяЭлемента"" доступен",            "Проверка доступности элемента формы","UI.Формы.Доступность");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЭлементФормыНеДоступен(ИмяЭлемента)",       "ЭлементФормыНеДоступен",       "И     элемент формы ""ИмяЭлемента"" не доступен",         "Проверка доступности элемента формы","UI.Формы.Доступность");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЭлементФормыСИменемДоступен(ИмяЭлемента)",  "ЭлементФормыСИменемДоступен",  "И     элемент формы с именем ""ИмяЭлемента"" доступен",   "Проверка доступности элемента формы","UI.Формы.Доступность");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЭлементФормыСИменемНеДоступен(ИмяЭлемента)","ЭлементФормыСИменемНеДоступен","И     элемент формы с именем ""ИмяЭлемента"" не доступен","Проверка доступности элемента формы","UI.Формы.Доступность");
	
	// проверка доступность элемента ТЧ
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТЧПолеДоступно(ИмяТЧ, ИмяРеквизита)", "ВТЧПолеДоступно","И     В ТЧ ""ИмяТЧ"" поле ""ИмяРеквизита"" доступно", "Проверка доступности элемента ТЧ","UI.Таблицы.Доступность");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТЧПолеСИменемДоступно(ИмяТЧ, ИмяРеквизита)", "ВТЧПолеСИменемДоступно","И     В ТЧ ""ИмяТЧ"" поле с именем ""ИмяРеквизита"" доступно", "Проверка доступности элемента ТЧ","UI.Таблицы.Доступность");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТЧПолеНеДоступно(ИмяТЧ, ИмяРеквизита)", "ВТЧПолеНеДоступно","И     В ТЧ ""ИмяТЧ"" поле ""ИмяРеквизита"" не доступно", "Проверка не доступности элемента ТЧ","UI.Таблицы.Доступность");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТЧПолеСИменемНеДоступно(ИмяТЧ, ИмяРеквизита)", "ВТЧПолеСИменемНеДоступно","И     В ТЧ ""ИмяТЧ"" поле с именем ""ИмяРеквизита"" не доступно", "Проверка не доступности элемента ТЧ","UI.Таблицы.Доступность");
	
	// стоит флаг "только просмотр" для реквизита ТЧ
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТЧПолеДоступноТолькоДляПросмотра(ИмяТЧ, ИмяРеквизита)", "ВТЧПолеДоступноТолькоДляПросмотра","И     В ТЧ ""ИмяТЧ"" поле ""ИмяРеквизита"" доступно только для просмотра", "Проверка установленного флага ""Только просмотр"" для реквизита в ТЧ","UI.Таблицы.Просмотр");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТЧПолеСИменемДоступноТолькоДляПросмотра(ИмяТЧ, ИмяРеквизита)", "ВТЧПолеСИменемДоступноТолькоДляПросмотра","И     В ТЧ ""ТЗ"" поле с именем ""ТЗРеквизит4"" доступно только для просмотра", "Проверка установленного флага ""Только просмотр"" для реквизита в ТЧ","UI.Таблицы.Просмотр");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТЧПолеДоступноНеТолькоДляПросмотра(ИмяТЧ, ИмяРеквизита)", "ВТЧПолеДоступноНеТолькоДляПросмотра","И     В ТЧ ""ИмяТЧ"" поле с именем ""ИмяРеквизита"" доступно не только для просмотра", "Проверка установленного флага ""Только просмотр"" для реквизита в ТЧ","UI.Таблицы.Просмотр");	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТЧПолеСИменемДоступноНеТолькоДляПросмотра(ИмяТЧ, ИмяРеквизита)", "ВТЧПолеСИменемДоступноНеТолькоДляПросмотра","И     В ТЧ ""ИмяТЧ"" поле с именем ""ИмяРеквизита"" доступно не только для просмотра", "Проверка установленного флага ""Только просмотр"" для реквизита в ТЧ","UI.Таблицы.Просмотр");	

	Возврат ВсеТесты;
КонецФункции

//---------------------------------------

&НаКлиенте
Процедура СоеденитьСтрокиЕслиЭтоВозможно(Стр,Стр2,Стр3,Стр4,Стр5,Стр6,Стр7)
	Если Стр2 <> Неопределено Тогда
		Стр = Стр + Стр2;
	КонецЕсли;	 
	Если Стр3 <> Неопределено Тогда
		Стр = Стр + Стр3;
	КонецЕсли;	 
	Если Стр4 <> Неопределено Тогда
		Стр = Стр + Стр4;
	КонецЕсли;	 
	Если Стр5 <> Неопределено Тогда
		Стр = Стр + Стр5;
	КонецЕсли;	 
	Если Стр6 <> Неопределено Тогда
		Стр = Стр + Стр6;
	КонецЕсли;	 
	Если Стр7 <> Неопределено Тогда
		Стр = Стр + Стр7;
	КонецЕсли;	 
КонецПроцедуры

&НаКлиенте
Функция НайтиЭлементНаФорме(ИмяЭлемента, ТипЭлемента = Неопределено, ИскатьПоИмени, Таймаут = 0)

	МассивФорм = НайтиФормыТекущегоОкна();
	
	Для каждого ТекущаяФорма Из МассивФорм Цикл
		
		Если ИскатьПоИмени Тогда
			ЭлементФормы = ТекущаяФорма.НайтиОбъект(ТипЭлемента,, ИмяЭлемента, Таймаут);
		Иначе
			ЭлементФормы = ТекущаяФорма.НайтиОбъект(ТипЭлемента, ИмяЭлемента,, Таймаут);
		КонецЕсли;
		
		Если ЭлементФормы = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Прервать;
		
	КонецЦикла;
	
	Возврат ЭлементФормы;

КонецФункции // НайтиЭлементНаФорме()

&НаКлиенте
Процедура ВОткрытойФормеЯЖдуПоявленияЭлементаВТеченииСекунд(ИмяЭлемента, Таймаут = 10, ИскатьПоИмени = Ложь)
	
	Нашли = Ложь;
	ЭлементФормы = НайтиЭлементНаФорме(ИмяЭлемента,, ИскатьПоИмени, Таймаут);
	Если ЭлементФормы <> Неопределено Тогда
		Нашли = Истина;
	КонецЕсли;
	
	Если НЕ Нашли Тогда
		Если ИскатьПоИмени Тогда
			Стр = "Элемент с именем <" + ИмяЭлемента + "> не появился в текущей форме в течении <" + Таймаут + "> секунд!";
		Иначе	
			Стр = "Элемент с заголовком <" + ИмяЭлемента + "> не появился в текущей форме в течении <" + Таймаут + "> секунд!";
		КонецЕсли;	 
		Сообщить(Стр);
		ВызватьИсключение Стр;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
//И я жду появления элемента "Имя элемента"
//@ЯЖдуПоявленияЭлемента(Парам01)
Процедура ЯЖдуПоявленияЭлемента(Парам01) Экспорт
	ВОткрытойФормеЯЖдуПоявленияЭлементаВТеченииСекунд(Парам01);
КонецПроцедуры

&НаКлиенте
//И я жду появления элемента с именем "Имя элемента"
//@ЯЖдуПоявленияЭлементаСИменем(Парам01)
Процедура ЯЖдуПоявленияЭлементаСИменем(Парам01) Экспорт
	ВОткрытойФормеЯЖдуПоявленияЭлементаВТеченииСекунд(Парам01,, Истина);
КонецПроцедуры

&НаКлиенте
//И я жду появления элемента "Имя элемента" в течении "Таймаут" секунд
//@ЯЖдуПоявленияЭлементаВТеченииСекунд(Парам01, Парам02)
Процедура ЯЖдуПоявленияЭлементаВТеченииСекунд(Парам01, Парам02) Экспорт
	ВОткрытойФормеЯЖдуПоявленияЭлементаВТеченииСекунд(Парам01, Парам02);
КонецПроцедуры

&НаКлиенте
//И я жду появления элемента с именем "Имя элемента" в течении "Таймаут" секунд
//@ЯЖдуПоявленияЭлементаСИменемВТеченииСекунд(Парам01, Парам02)
Процедура ЯЖдуПоявленияЭлементаСИменемВТеченииСекунд(Парам01, Парам02) Экспорт
	ВОткрытойФормеЯЖдуПоявленияЭлементаВТеченииСекунд(Парам01, Парам02, Истина);
КонецПроцедуры

&НаКлиенте
//И     я перехожу к следующему реквизиту
//@ЯПерехожуКСледующемуРеквизиту()
Процедура ЯПерехожуКСледующемуРеквизиту() Экспорт
    АктивноеОкно = КонтекстСохраняемый.ТестовоеПриложение.ПолучитьАктивноеОкно();
    АктивнаяФорма = АктивноеОкно.НайтиОбъект(Тип("ТестируемаяФорма"));
    АктивнаяФорма.ПерейтиКСледующемуЭлементу();
КонецПроцедуры

//---------------------------------------




&НаКлиенте
//И у элемента "Имя элемента" я жду значения "Значение"
//@УЭлементаЯЖдуЗначения(Парам01,Парам02)
Процедура УЭлементаЯЖдуЗначения(ИмяПоля,Значение) Экспорт
	УЭлементаЯЖдуЗначенияВТеченииСекунд(ИмяПоля,Значение,10,Ложь);
КонецПроцедуры

&НаКлиенте
//И у элемента с именем "Имя элемента" я жду значения "Значение"
//@УЭлементасИменемЯЖдуЗначения(Парам01,Парам02)
Процедура УЭлементасИменемЯЖдуЗначения(ИмяПоля,Значение) Экспорт
	УЭлементаЯЖдуЗначенияВТеченииСекунд(ИмяПоля,Значение,10,Истина);
КонецПроцедуры



&НаКлиенте
Процедура ОбработичкОжиданияУЭлементаЯЖдуЗначенияВТеченииСекунд()
	Попытка
		ТекущееЗначение = Ванесса.ПолучитьЗначениеРеквизитаОткрытойФормыПоЗаголовку(ИмяПоляОбработкаОжидания,ИскатьПоИмениОбрабткаОжидания);
	Исключение
		ОтключитьОбработчикОжидания("ОбработичкОжиданияУЭлементаЯЖдуЗначенияВТеченииСекунд");
		Ванесса.ПродолжитьВыполнениеШагов(Истина,ОписаниеОшибки());
		Возврат;
	КонецПопытки;
	
	Если НРег(ЗначениеОбрабткаОжидания) = НРег(ТекущееЗначение) Тогда
		ОтключитьОбработчикОжидания("ОбработичкОжиданияУЭлементаЯЖдуЗначенияВТеченииСекунд");
		Ванесса.ПродолжитьВыполнениеШагов();
		Возврат;
	КонецЕсли;	 
	
	Если (ТекущаяДата() - ДатаНачалаОбработкиОжидания) > КоличествоСекундОбработкаОжидания Тогда
		ОтключитьОбработчикОжидания("ОбработичкОжиданияУЭлементаЯЖдуЗначенияВТеченииСекунд");
		Ванесса.ПродолжитьВыполнениеШагов(Истина,"Ожидали в течении <" + КоличествоСекундОбработкаОжидания + "> секунд у поля <" + ИмяПоляОбработкаОжидания + "> значения <" + ЗначениеОбрабткаОжидания + ">. Текущее значение <" + ТекущееЗначение + ">");
		Возврат;
	КонецЕсли;	 
	
	
КонецПроцедуры

&НаКлиенте
//И у элемента "Имя элемента" я жду значения "Значение" в течении 11 секунд
//@УЭлементаЯЖдуЗначенияВТеченииСекунд(Парам01,Парам02)
Процедура УЭлементаЯЖдуЗначенияВТеченииСекунд(ИмяПоля,Значение,КоличествоСекунд,ИскатьПоИмени = Ложь) Экспорт
	
	Ванесса.ЗапретитьВыполнениеШагов();
	ДатаНачалаОбработкиОжидания       = ТекущаяДата();
	ИмяПоляОбработкаОжидания          = ИмяПоля;
	ИскатьПоИмениОбрабткаОжидания     = ИскатьПоИмени;
	ЗначениеОбрабткаОжидания          = Значение;
	КоличествоСекундОбработкаОжидания = КоличествоСекунд;
	ПодключитьОбработчикОжидания("ОбработичкОжиданияУЭлементаЯЖдуЗначенияВТеченииСекунд",1,Ложь);
КонецПроцедуры

&НаКлиенте
//И у элемента с именем "Имя элемента" я жду значения "Значение"
//@УЭлементаЯЖдуЗначения(Парам01,Парам02)
Процедура УЭлементаСИменемЯЖдуЗначенияВТеченииСекунд(ИмяПоля,Значение,КоличествоСекунд) Экспорт
	УЭлементаЯЖдуЗначенияВТеченииСекунд(ИмяПоля,Значение,КоличествоСекунд,Истина);
КонецПроцедуры




&НаКлиенте
//И     в ТЧ "ТабличнаяЧасть1" я устанавливаю флаг "Реквизит булево"
//@ВТЧЯУстанавливаюФлаг(Парам01,Парам02)
Процедура ВТЧЯУстанавливаюФлаг(Парам01,Парам02) Экспорт
	ВОткрытойФормеВТЧЯУстанавливаюФлаг(Парам01,Парам02);
КонецПроцедуры

&НаКлиенте
//В открытой форме в ТЧ "ТабличнаяЧасть1" я устанавливаю флаг "Реквизит булево"
//@ВОткрытойФормеВТЧЯУстанавливаюФлаг(Парам01,Парам02)
Процедура ВОткрытойФормеВТЧЯУстанавливаюФлаг(ИмяТЧ,ИмяРеквизита) Экспорт
	ВОткрытойФормеВТЧЯУстанавливаюФлагСЗаголовком(ИмяТЧ,ИмяРеквизита);
КонецПроцедуры

&НаКлиенте
//В открытой форме в ТЧ "ТабличнаяЧасть1" я устанавливаю флаг с заголовком "Реквизит булево"
//@ВОткрытойФормеВТЧЯУстанавливаюФлагСЗаголовком(Парам01,Парам02)
Процедура ВОткрытойФормеВТЧЯУстанавливаюФлагСЗаголовком(ИмяТЧ,ИмяРеквизита) Экспорт
	//ОкноПриложения         = ПолучитьАктивноеОкноИзКонтекста();
	//ТекущаяФорма           = ОкноПриложения.НайтиОбъект(Тип("ТестируемаяФорма"));
	//ТЧ                     = ТекущаяФорма.НайтиОбъект(Тип("ТестируемаяТаблицаФормы"),,ИмяТЧ);
	ТЧ                     =  НайтиТЧПоИмени(ИмяТЧ);
	ПолеРеквизит           = ТЧ.НайтиОбъект(Тип("ТестируемоеПолеФормы"), ИмяРеквизита);
	Если ПолеРеквизит = Неопределено Тогда
		Стр = "Поле с заголовком <" + ИмяРеквизита + "> не найдено!";
		Сообщить(Стр);
		ВызватьИсключение Стр;
	КонецЕсли;	 
	ПолеРеквизит.Активизировать();
	//тут нет активного контрола
	//СделатьДействияПриЗаписиВидео();
	ПредставлениеДанных = ПолеРеквизит.ПолучитьПредставлениеДанных();
	
	Если НРег(ПредставлениеДанных) =  НРег(Строка(Ложь)) Тогда
		ПолеРеквизит.УстановитьОтметку();
	ИначеЕсли НРег(ПредставлениеДанных) =  "0" Тогда
		ПолеРеквизит.УстановитьОтметку();
	КонецЕсли;
	
	//СделатьДействияПриЗаписиHTML();
КонецПроцедуры

//---------------------------------------

&НаКлиенте
//И     в ТЧ "ТабличнаяЧасть1" я снимаю флаг "Реквизит булево"
//@ВТЧЯСнимаюФлаг(Парам01,Парам02)
Процедура ВТЧЯСнимаюФлаг(Парам01,Парам02) Экспорт
	ВОткрытойФормеВТЧЯСнимаюФлаг(Парам01,Парам02);
КонецПроцедуры

&НаКлиенте
//В открытой форме в ТЧ "ТабличнаяЧасть1" я снимаю флаг "Реквизит булево"
//@ВОткрытойФормеВТЧЯСнимаюФлаг(Парам01,Парам02)
Процедура ВОткрытойФормеВТЧЯСнимаюФлаг(ИмяТЧ,ИмяРеквизита) Экспорт
	ВОткрытойФормеВТЧЯСнимаюФлагСЗаголовком(ИмяТЧ,ИмяРеквизита);
КонецПроцедуры

&НаКлиенте
//В открытой форме в ТЧ "ТабличнаяЧасть1" я снимаю флаг с заголовком "Реквизит булево"
//@ВОткрытойФормеВТЧЯСнимаюФлагСЗаголовком(Парам01,Парам02)
Процедура ВОткрытойФормеВТЧЯСнимаюФлагСЗаголовком(ИмяТЧ,ИмяРеквизита) Экспорт
	//ОкноПриложения         = ПолучитьАктивноеОкноИзКонтекста();
	//ТекущаяФорма           = ОкноПриложения.НайтиОбъект(Тип("ТестируемаяФорма"));
	//ТЧ                     = ТекущаяФорма.НайтиОбъект(Тип("ТестируемаяТаблицаФормы"),,ИмяТЧ);
	ТЧ                     =  НайтиТЧПоИмени(ИмяТЧ);
	ПолеРеквизит           = ТЧ.НайтиОбъект(Тип("ТестируемоеПолеФормы"), ИмяРеквизита);
	Если ПолеРеквизит = Неопределено Тогда
		Стр = "Поле с заголовком <" + ИмяРеквизита + "> не найдено!";
		Сообщить(Стр);
		ВызватьИсключение Стр;
	КонецЕсли;	 
	ПолеРеквизит.Активизировать();
	//тут нет активного контрола
	//СделатьДействияПриЗаписиВидео();
	
	ПредставлениеДанных = ПолеРеквизит.ПолучитьПредставлениеДанных();
	
	Если НРег(ПредставлениеДанных) =  НРег(Строка(Истина)) Тогда
		ПолеРеквизит.УстановитьОтметку();
	ИначеЕсли НРег(ПредставлениеДанных) =  "1" Тогда
		ПолеРеквизит.УстановитьОтметку();
	КонецЕсли;
	
	//СделатьДействияПриЗаписиHTML();
КонецПроцедуры

//---------------------------------------

&НаКлиенте
//В открытой форме я снимаю флаг с заголовком "Реквизит булево"
//@ВОткрытойФормеЯСнимаюФлагСЗаголовком(Парам01)
Процедура ВОткрытойФормеЯСнимаюФлагСЗаголовком(ИмяРеквизита,ИскатьПоИмени = Ложь) Экспорт
	//ОкноПриложения         = ПолучитьАктивноеОкноИзКонтекста();
	//ТекущаяФорма           = ОкноПриложения.НайтиОбъект(Тип("ТестируемаяФорма"));
	
	Нашли = Ложь;
	МассивФорм = НайтиФормыТекущегоОкна();
	Для каждого ТекущаяФорма Из МассивФорм Цикл
		
		Если ИскатьПоИмени Тогда
			ПолеРеквизит = ТекущаяФорма.НайтиОбъект(Тип("ТестируемоеПолеФормы"),, ИмяРеквизита);
		Иначе
			ПолеРеквизит = ТекущаяФорма.НайтиОбъект(Тип("ТестируемоеПолеФормы"), ИмяРеквизита);
		КонецЕсли;	 
		
		
		Если ПолеРеквизит = Неопределено Тогда
			Продолжить;
		КонецЕсли;	 
		
		ПолеРеквизит.Активизировать();
		СделатьДействияПриЗаписиВидео();
		
		Если Найти(ПолеРеквизит.ПолучитьПредставлениеДанных(), Строка(Истина)) = 1 Тогда
			ПолеРеквизит.УстановитьОтметку();
		КонецЕсли;
		СделатьДействияПриЗаписиHTML();
		
		Нашли = Истина;
		Прервать;
	КонецЦикла;
	
	Если НЕ Нашли Тогда
		Если ИскатьПоИмени Тогда
			Стр = "Флаг с именем <" + ИмяРеквизита + "> не найден!";
		Иначе	
			Стр = "Флаг с заголовком <" + ИмяРеквизита + "> не найден!";
		КонецЕсли;	 
		
		Сообщить(Стр);
		ВызватьИсключение Стр;
	КонецЕсли;	 

	
КонецПроцедуры

&НаКлиенте
//В открытой форме я снимаю флаг "Реквизит булево"
//@ВОткрытойФормеЯСнимаюФлаг(Парам01)
Процедура ВОткрытойФормеЯСнимаюФлаг(ИмяРеквизита,ИскатьПоИмени = Ложь) Экспорт
	ВОткрытойФормеЯСнимаюФлагСЗаголовком(ИмяРеквизита,ИскатьПоИмени);
КонецПроцедуры

&НаКлиенте
//В открытой форме я снимаю флаг с именем "Реквизит булево"
//@ВОткрытойФормеЯСнимаюФлагСИменем(Парам01)
Процедура ВОткрытойФормеЯСнимаюФлагСИменем(ИмяРеквизита) Экспорт
	ВОткрытойФормеЯСнимаюФлагСЗаголовком(ИмяРеквизита,Истина)
КонецПроцедуры

&НаКлиенте
//И     я снимаю флаг "Реквизит булево"
//@ЯСнимаюФлаг(Парам01)
Процедура ЯСнимаюФлаг(Парам01) Экспорт
	ВОткрытойФормеЯСнимаюФлаг(Парам01);
КонецПроцедуры

&НаКлиенте
//И     я снимаю флаг с именем "Реквизит булево"
//@ЯСнимаюФлагСИменем(Парам01)
Процедура ЯСнимаюФлагСИменем(Парам01) Экспорт
	ВОткрытойФормеЯСнимаюФлагСИменем(Парам01);
КонецПроцедуры

//---------------------------------------

&НаКлиенте
//И     я устанавливаю флаг "Реквизит булево"
//@ЯУстанавливаюФлаг(Парам01)
Процедура ЯУстанавливаюФлаг(Парам01) Экспорт
	ВОткрытойФормеЯУстанавливаюФлаг(Парам01);
КонецПроцедуры

&НаКлиенте
//И     я устанавливаю флаг с именем "Реквизит булево"
//@ЯУстанавливаюФлагСИменем(Парам01)
Процедура ЯУстанавливаюФлагСИменем(Парам01) Экспорт
	ВОткрытойФормеЯУстанавливаюФлагСИменем(Парам01);
КонецПроцедуры

&НаКлиенте
//В открытой форме я устанавливаю флаг с заголовком "Реквизит булево"
//@ВОткрытойФормеЯУстанавливаюФлагСЗаголовком(Парам01)
Процедура ВОткрытойФормеЯУстанавливаюФлагСЗаголовком(ИмяРеквизита,ИскатьПоИмени = Ложь) Экспорт
	//ОкноПриложения         = ПолучитьАктивноеОкноИзКонтекста();
	//ТекущаяФорма           = ОкноПриложения.НайтиОбъект(Тип("ТестируемаяФорма"));
	
	Нашли = Ложь;
	МассивФорм = НайтиФормыТекущегоОкна();
	Для каждого ТекущаяФорма Из МассивФорм Цикл
		
		Если ИскатьПоИмени Тогда
			ПолеРеквизит = ТекущаяФорма.НайтиОбъект(Тип("ТестируемоеПолеФормы"),, ИмяРеквизита);
		Иначе
			ПолеРеквизит = ТекущаяФорма.НайтиОбъект(Тип("ТестируемоеПолеФормы"), ИмяРеквизита);
		КонецЕсли;	 
		
		
		Если ПолеРеквизит = Неопределено Тогда
			Продолжить;
		КонецЕсли;	 
		
		ПолеРеквизит.Активизировать();
		СделатьДействияПриЗаписиВидео();
		
		Если Найти(ПолеРеквизит.ПолучитьПредставлениеДанных(), Строка(Истина)) = 0 Тогда
			ПолеРеквизит.УстановитьОтметку();
		КонецЕсли;
		СделатьДействияПриЗаписиHTML();
		
		Нашли = Истина;
		Прервать;
	КонецЦикла;
	
	Если НЕ Нашли Тогда
		Если ИскатьПоИмени Тогда
			Стр = "Флаг с именем <" + ИмяРеквизита + "> не найден!";
		Иначе	
			Стр = "Флаг с заголовком <" + ИмяРеквизита + "> не найден!";
		КонецЕсли;	 
		
		Сообщить(Стр);
		ВызватьИсключение Стр;
	КонецЕсли;	 

	
КонецПроцедуры

&НаКлиенте
//В открытой форме я устанавливаю флаг "Реквизит булево"
//@ВОткрытойФормеЯУстанавливаюФлаг(Парам01)
Процедура ВОткрытойФормеЯУстанавливаюФлагФлаг(ИмяРеквизита,ИскатьПоИмени = Ложь) Экспорт
	ВОткрытойФормеЯУстанавливаюФлагСЗаголовком(ИмяРеквизита,ИскатьПоИмени);
КонецПроцедуры

&НаКлиенте
//В открытой форме я устанавливаю флаг с именем "Реквизит булево"
//@ВОткрытойФормеЯУстанавливаюФлагСИменем(Парам01)
Процедура ВОткрытойФормеЯУстанавливаюФлагСИменем(ИмяРеквизита) Экспорт
	ВОткрытойФормеЯУстанавливаюФлагСЗаголовком(ИмяРеквизита,Истина)
КонецПроцедуры

&НаКлиенте
//В открытой форме я устанавливаю флаг "Реквизит булево"
//@ВОткрытойФормеЯУстанавливаюФлаг(Парам01)
Процедура ВОткрытойФормеЯУстанавливаюФлаг(ИмяРеквизита,ИскатьПоИмени = Ложь) Экспорт
	ВОткрытойФормеЯУстанавливаюФлагСЗаголовком(ИмяРеквизита,ИскатьПоИмени);
КонецПроцедуры

//---------------------------------------


&НаКлиенте
Процедура ПередНачаломСценария() Экспорт
	УдалитьВсеЭлементыСправочникаВида("Справочник1");
	УдалитьВсеЭлементыСправочникаВида("Справочник2");
	Макет = ПолучитьМакетСервер("Fixtures");
	Ванесса.СоздатьДанныеПоТабличномуДокументу(Макет);
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
Функция АктивизироватьКнопку(Кнопка,ТекущаяФорма = Неопределено,ТЧ = Неопределено)
	ПолучилосьАктивизировать = Ложь;
	Если Кнопка.Вид = ВидКнопкиФормы.КнопкаКоманднойПанели Тогда
		Попытка
			//в 8.3.7 эта строка вызывает проблему для кнопок диалогов
			Если ТЧ <> Неопределено Тогда
				КоманднаяПанельФормы = ТЧ.ПолучитьКоманднуюПанель();
			Иначе	
				КоманднаяПанельФормы = ТекущаяФорма.ПолучитьКоманднуюПанель();
			КонецЕсли;	 
			
			Если КоманднаяПанельФормы <> Неопределено Тогда
				КоманднаяПанельФормы.Активизировать();
				ПолучилосьАктивизировать = Истина;
			КонецЕсли;	 
		Исключение
		
		КонецПопытки;
	Иначе	
		Кнопка.Активизировать();
		ПолучилосьАктивизировать = Истина;
	КонецЕсли;	 
	
	Возврат ПолучилосьАктивизировать;
КонецФункции	

&НаКлиенте
Процедура СделатьДействияПриЗаписиВидео(ПарамСтр = "")
	Ванесса.СделатьДействияПриЗаписиВидео(ПарамСтр);
КонецПроцедуры

&НаКлиенте
Процедура СделатьДействияПриЗаписиHTML(ПарамСтр = "")
	Ванесса.СделатьДействияПриЗаписиHTML(ПарамСтр);
КонецПроцедуры

&НаКлиенте
Функция ПолучитьАктивноеОкноИзКонтекста()
	Возврат Контекст.АктивноеОкно;
КонецФункции	

&НаКлиенте
Функция ПолучитьАктивноеОкноИзТестовоеПриложение()
	Возврат КонтекстСохраняемый.ТестовоеПриложение.ПолучитьАктивноеОкно();
КонецФункции	

&НаКлиенте
Функция НайтиФормуПоЗаголовку(ИмяФормы)
	Возврат Ванесса.НайтиФормуПоЗаголовку(ИмяФормы);
КонецФункции	

&НаКлиенте
Функция НайтиТЧПоИмени(ИмяТЧ,НужнаяФорма = Неопределено)
	Возврат Ванесса.НайтиТЧПоИмени(ИмяТЧ,НужнаяФорма);
КонецФункции	

&НаКлиенте
Функция НайтиФормыТекущегоОкна()
	Возврат Ванесса.НайтиФормыТекущегоОкнаTestClient();
КонецФункции	

&НаКлиенте
Функция НайтиТекущуюФорму()
	Возврат Ванесса.НайтиТекущуюФормуTestClient();
КонецФункции	

&НаСервереБезконтекста
Процедура УдалитьВсеЭлементыСправочникаВида(ИмяСпр)
	
	Если Метаданные.Справочники[ИмяСпр].Иерархический Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Справочник1.Ссылка
		|ИЗ
		|	Справочник.Справочник1 КАК Справочник1
		|ГДЕ
		|	ИСТИНА
		|	И НЕ Справочник1.ЭтоГруппа";
		
		
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"Справочник1",ИмяСпр);	
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			ОбъектСпр = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
			ОбъектСпр.Удалить();
		КонецЦикла;
		
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Справочник1.Ссылка
		|ИЗ
		|	Справочник.Справочник1 КАК Справочник1
		|ГДЕ
		|	ИСТИНА
		|	И Справочник1.ЭтоГруппа";
		
		
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"Справочник1",ИмяСпр);	
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			ОбъектСпр = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
			ОбъектСпр.Удалить();
		КонецЦикла;
	Иначе
		
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Справочник1.Ссылка
		|ИЗ
		|	Справочник.Справочник1 КАК Справочник1";
		
		
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"Справочник1",ИмяСпр);	
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			ОбъектСпр = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
			ОбъектСпр.Удалить();
		КонецЦикла;
	КонецЕсли;	 
	
КонецПроцедуры

&НаСервере
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
	
КонецФункции


&НаКлиенте
Процедура ЕслиНаЭкранеДиалогМодальныйДиалогТоНадоЕгоЗакрыть()
	Нашли = Ложь;
	НужноеОкно = Неопределено;
	//ОкноПриложения = КонтекстСохраняемый.ТестовоеПриложение.НайтиОбъект(Тип("ТестируемоеОкноКлиентскогоПриложения"),"1С:Предприятие",,1);
	//Если ОкноПриложения = Неопределено Тогда
	//	Возврат;
	//КонецЕсли;
	
	ОкнаПриложения = КонтекстСохраняемый.ТестовоеПриложение.НайтиОбъекты(Тип("ТестируемоеОкноКлиентскогоПриложения"));
	Для Каждого ОкноПриложения Из ОкнаПриложения Цикл
		Если (ОкноПриложения.Заголовок = "1С:Предприятие") или (ОкноПриложения.Заголовок = "1C:Enterprise") Тогда
			НужноеОкно = ОкноПриложения;
			Прервать;
		КонецЕсли;	 
	КонецЦикла;	
	
	Если НужноеОкно = Неопределено Тогда
		Возврат;
	КонецЕсли;	 
	
	МассивКнопок = НужноеОкно.НайтиОбъекты(Тип("ТестируемаяКнопкаФормы"));
	Для Каждого Кнопка Из МассивКнопок Цикл
		Если НРег(Кнопка.ТекстЗаголовка) = "нет" Тогда
			Кнопка.Нажать();
			Возврат;
		ИначеЕсли НРег(Кнопка.ТекстЗаголовка) = "no" Тогда
			Кнопка.Нажать();
			Возврат;
		ИначеЕсли ВРег(Кнопка.ТекстЗаголовка) = "OK" Тогда
			Кнопка.Нажать();
			Возврат;
		КонецЕсли;	
		
		//Сообщить(НРег(Кнопка.ТекстЗаголовка));
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
//И Я закрыл все окна клиентского приложения
//@ЯЗакрылВсеОкнаКлиентскогоПриложения()
Процедура ЯЗакрылВсеОкнаКлиентскогоПриложения() Экспорт
	Если Не КонтекстСохраняемый.Свойство("ТестовоеПриложение") Тогда
		Возврат;
	КонецЕсли;	
	
	Если КонтекстСохраняемый.ТестовоеПриложение = Неопределено Тогда
		Возврат;
	КонецЕсли;	 
	
	ОкнаПриложения = КонтекстСохраняемый.ТестовоеПриложение.НайтиОбъекты(Тип("ТестируемоеОкноКлиентскогоПриложения"));
	
	ЕслиНаЭкранеДиалогМодальныйДиалогТоНадоЕгоЗакрыть();//диалог мог остаться от предыдущего сценария
	
	Для каждого ОкноПриложение Из ОкнаПриложения Цикл
		Если ОкноПриложение.Основное Тогда
			Продолжить;
		КонецЕсли;	 
		
		Если ОкноПриложение.НачальнаяСтраница Тогда
			Продолжить;
		КонецЕсли;	 
		
		Попытка
			ОкноПриложение.Закрыть();
		Исключение
			Сообщить("Не смог закрыть окно " + ОкноПриложение);
			Продолжить;
		КонецПопытки;
		
		ЕслиНаЭкранеДиалогМодальныйДиалогТоНадоЕгоЗакрыть();//диалог мог появиться при закрытии окна.
		
	КонецЦикла;
	
	
КонецПроцедуры

&НаКлиенте
//И Я закрыл все окна клиентского приложения кроме "Нужное окно"
//@ЯЗакрылВсеОкнаКлиентскогоПриложенияКроме(Парам01)
Процедура ЯЗакрылВсеОкнаКлиентскогоПриложенияКроме(ЗаголовокОкна) Экспорт
	Если Не КонтекстСохраняемый.Свойство("ТестовоеПриложение") Тогда
		Возврат;
	КонецЕсли;	
	
	Если КонтекстСохраняемый.ТестовоеПриложение = Неопределено Тогда
		Возврат;
	КонецЕсли;	 
	
	ОкнаПриложения = КонтекстСохраняемый.ТестовоеПриложение.НайтиОбъекты(Тип("ТестируемоеОкноКлиентскогоПриложения"));
	НужноеОкно     = КонтекстСохраняемый.ТестовоеПриложение.НайтиОбъект(Тип("ТестируемоеОкноКлиентскогоПриложения"),ЗаголовокОкна);
	
	ЕслиНаЭкранеДиалогМодальныйДиалогТоНадоЕгоЗакрыть();//диалог мог остаться от предыдущего сценария
	
	Для каждого ОкноПриложение Из ОкнаПриложения Цикл
		Если ОкноПриложение.Основное Тогда
			Продолжить;
		КонецЕсли;	 
		
		Если ОкноПриложение.НачальнаяСтраница Тогда
			Продолжить;
		КонецЕсли;	 
		
		Если НужноеОкно <> Неопределено Тогда
			Если НРег(ОкноПриложение.Заголовок) = НРег(НужноеОкно.Заголовок) Тогда
				Продолжить;
			КонецЕсли;	 
		КонецЕсли;	 
		
		Попытка
			ОкноПриложение.Закрыть();
		Исключение
			Сообщить("Не смог закрыть окно " + ОкноПриложение);
			Продолжить;
		КонецПопытки;
		
		ЕслиНаЭкранеДиалогМодальныйДиалогТоНадоЕгоЗакрыть();//диалог мог появиться при закрытии окна.
		
	КонецЦикла;
	
	
КонецПроцедуры


&НаКлиенте
//Я нажимаю кнопку командного интерфейса "Основная"
//@ЯНажимаюКнопкуКомандногоИнтерфейса(Парам01)
Процедура ЯНажимаюКнопкуКомандногоИнтерфейса(ИмяКнопки) Экспорт
	ОкноПриложенияОсновноеCommandInterface = КонтекстСохраняемый.ГлавноеОкноТестируемого.ПолучитьКомандныйИнтерфейс();
	//ОкноПриложенияОсновноеCommandInterface = КонтекстСохраняемый.ОкноПриложенияОсновноеCommandInterface;
	КнопкаКомандногоИнтерфейса = ОкноПриложенияОсновноеCommandInterface.НайтиОбъект(Тип("ТестируемаяКнопкаКомандногоИнтерфейса"), ИмяКнопки,,5);
	Если КнопкаКомандногоИнтерфейса = Неопределено Тогда
		Стр = "Кнопка/команда с заголовком <" + ИмяКнопки + "> не найдена";
		Сообщить(Стр);
		ВызватьИсключение Стр;
	КонецЕсли;	 
	
	
	КнопкаКомандногоИнтерфейса.Нажать();
КонецПроцедуры



&НаКлиенте
//открылось окно "Справочник1"
//@ОткрылосьОкно(Парам01)
Процедура ОткрылосьОкно(Знач ИмяОкна,ЧастьИмени2 = Неопределено
	                           ,ЧастьИмени3 = Неопределено
	                           ,ЧастьИмени4 = Неопределено
	                           ,ЧастьИмени5 = Неопределено
	                           ,ЧастьИмени6 = Неопределено
	                           ,ЧастьИмени7 = Неопределено) Экспорт
							   
							   
	СоеденитьСтрокиЕслиЭтоВозможно(ИмяОкна,ЧастьИмени2,
	                                       ЧастьИмени3,
	                                       ЧастьИмени4,
	                                       ЧастьИмени5,
	                                       ЧастьИмени6,
	                                       ЧастьИмени7);							   
							   
	АктивноеОкно = КонтекстСохраняемый.ТестовоеПриложение.НайтиОбъект(Тип("ТестируемоеОкноКлиентскогоПриложения"), ИмяОкна, , 15);
	Если АктивноеОкно = Неопределено Тогда
		ВызватьИсключение "Окно с заголовком " + ИмяОкна + " не найдено!";
	КонецЕсли;	 
	Контекст.Вставить("АктивноеОкно",АктивноеОкно);
КонецПроцедуры

&НаКлиенте
//И я активизирую окно "Справочник1"
//@ЯАктивизируюОкно(Парам01)
Процедура ЯАктивизируюОкно(Знач ИмяОкна,ЧастьИмени2 = Неопределено
	                           ,ЧастьИмени3 = Неопределено
	                           ,ЧастьИмени4 = Неопределено
	                           ,ЧастьИмени5 = Неопределено
	                           ,ЧастьИмени6 = Неопределено
	                           ,ЧастьИмени7 = Неопределено) Экспорт
							   
							   
	СоеденитьСтрокиЕслиЭтоВозможно(ИмяОкна,ЧастьИмени2,
	                                       ЧастьИмени3,
	                                       ЧастьИмени4,
	                                       ЧастьИмени5,
	                                       ЧастьИмени6,
	                                       ЧастьИмени7);							   
							   
	АктивноеОкно = КонтекстСохраняемый.ТестовоеПриложение.НайтиОбъект(Тип("ТестируемоеОкноКлиентскогоПриложения"), ИмяОкна, , 15);
	Если АктивноеОкно = Неопределено Тогда
		ВызватьИсключение "Окно с заголовком " + ИмяОкна + " не найдено!";
	КонецЕсли;	 
	Контекст.Вставить("АктивноеОкно",АктивноеОкно);
	
	АктивноеОкно.Активизировать();
КонецПроцедуры



&НаКлиенте
Процедура ЯЖдуЗакрытияОкнаВТеченииСекундОбработчикОжидания()
	НужноеОкно = Ванесса.НайтиОкноTestClientПоЗаголовку(ЗначениеОбрабткаОжидания);
	
	Если НужноеОкно = Неопределено Тогда
		ОтключитьОбработчикОжидания("ЯЖдуЗакрытияОкнаВТеченииСекундОбработчикОжидания");
		Ванесса.ПродолжитьВыполнениеШагов();
		Возврат;
	КонецЕсли;	 
	
	Если (ТекущаяДата() - ДатаНачалаОбработкиОжидания) > КоличествоСекундОбработкаОжидания Тогда
		ОтключитьОбработчикОжидания("ЯЖдуЗакрытияОкнаВТеченииСекундОбработчикОжидания");
		Ванесса.ПродолжитьВыполнениеШагов(Истина,"Ожидали в течении <" + КоличествоСекундОбработкаОжидания + "> секунд что закроется окно с заголовком <" + ЗначениеОбрабткаОжидания + ">");
		Возврат;
	КонецЕсли;	 
КонецПроцедуры

&НаКлиенте
//И я жду закрытия окна "Имя окна" в течении 60 секунд
//@ЯЖдуЗакрытияОкнаВТеченииСекунд(Парам01,Парам02)
Процедура ЯЖдуЗакрытияОкнаВТеченииСекунд(ИмяОкна,КоличествоСекунд) Экспорт
	Ванесса.ЗапретитьВыполнениеШагов();
	
	ДатаНачалаОбработкиОжидания       = ТекущаяДата();
	ЗначениеОбрабткаОжидания          = ИмяОкна;
	КоличествоСекундОбработкаОжидания = КоличествоСекунд;
	ПодключитьОбработчикОжидания("ЯЖдуЗакрытияОкнаВТеченииСекундОбработчикОжидания",1,Ложь);
КонецПроцедуры




&НаКлиенте
Функция СделатьПереход(ТаблицаСписок,ОписаниеСтроки,ОшибкаПереходВниз,ОшибкаПереходВверх)
	ПолучилосьПерейти = Ложь;
	Попытка
		ПолучилосьПерейти = ТаблицаСписок.ПерейтиКСтроке(ОписаниеСтроки, Вычислить("НаправлениеПереходаКСтроке.Вниз"));
	Исключение
		ОшибкаПереходВниз = ОписаниеОшибки();
		//Сообщить("" + ОписаниеОшибки());
	КонецПопытки;
	
	
	Если НЕ ПолучилосьПерейти Тогда
		Попытка
			ПолучилосьПерейти = ТаблицаСписок.ПерейтиКСтроке(ОписаниеСтроки, Вычислить("НаправлениеПереходаКСтроке.Вверх"));
		Исключение
			ОшибкаПереходВверх = ОписаниеОшибки();
			//Сообщить("" + ОписаниеОшибки());
		КонецПопытки;
	КонецЕсли;	
	
	Возврат ПолучилосьПерейти;
КонецФункции	


&НаКлиенте
Функция ПолучитьОшибкуПерехода(ИмяТЧ,ОшибкаПереходВниз,ОшибкаПереходВверх)
	Стр = "Не удалось перейти к нужной строке в таблице <" + ИмяТЧ + ">";
	Сообщить(Стр);
	Если ОшибкаПереходВниз <> "" Тогда
		Сообщить("" + ОшибкаПереходВниз);
	КонецЕсли;	 
	Если ОшибкаПереходВверх <> "" Тогда
		Сообщить("" + ОшибкаПереходВверх);
	КонецЕсли;	 
	
	Возврат Стр;
КонецФункции	

&НаКлиенте
Функция ПолучитьОписаниеСтрокиИзТаблицы(ТабПарам)
	ОписаниеСтроки = Новый Соответствие();
	
	
	Строка1    = ТабПарам[0];
	Строка2    = ТабПарам[1];
	КолКолонок = Строка1.Количество();
	
	Для Ккк = 1 По КолКолонок Цикл
		Ключ     = Строка1["Кол"+Ккк];
		Значение = Строка2["Кол"+Ккк];
		Если ТипЗнч(Значение) = Тип("Число") Тогда
			Значение = СтрЗаменить(Значение,Символы.НПП,"");
		КонецЕсли;	 
		
		//Сообщить("" + Ключ + ":" + Значение);
		
		ОписаниеСтроки.Вставить(Ключ,Значение);
	КонецЦикла;
	
	Возврат ОписаниеСтроки;
КонецФункции	



&НаКлиенте
//В форме "Справочник1" в таблице "Список" я перехожу к строке:
//@ВФормеВТаблицеЯПерехожуКСтроке(Парам01,Парам02,ТабПарам)
Процедура ВФормеВТаблицеЯПерехожуКСтроке(ИмяФормы,ИмяТЧ,ТабПарам) Экспорт
	Ванесса.ПроверитьРавенство(ТабПарам.Количество(),2,"Строка должна быть описана таблицей с двумя строками.");
	
	НужнаяФорма = НайтиФормуПоЗаголовку(ИмяФормы);
	
	Если НужнаяФорма = Неопределено Тогда
		Если НужнаяФорма = Неопределено Тогда
			Стр = "Форма с заголовком <" + ИмяФормы + "> не найдена!";
			Сообщить(Стр);
			ВызватьИсключение Стр;
		КонецЕсли;	 
		
	КонецЕсли;	 
	
	ТаблицаСписок = НайтиТЧПоИмени(ИмяТЧ,НужнаяФорма);
	
	ТаблицаСписок.Активизировать();
	
	СделатьДействияПриЗаписиВидео("толькофрейм");
	
	ОписаниеСтроки = ПолучитьОписаниеСтрокиИзТаблицы(ТабПарам);
	
	
	ОшибкаПереходВниз  = "";
	ОшибкаПереходВверх = "";
	
	
	ПолучилосьПерейти = СделатьПереход(ТаблицаСписок,ОписаниеСтроки,ОшибкаПереходВниз,ОшибкаПереходВверх);
	Если НЕ ПолучилосьПерейти Тогда
		Попытка
			//Возможно, это  ошибка платформы. Такое бывает с таблицами значений в УФ. Смотри https://github.com/silverbulleters/vanessa-behavior/issues/342
			//Делаем обход проблемы
			ТаблицаСписок.ПерейтиКПервойСтроке();
			ПолучилосьПерейти = СделатьПереход(ТаблицаСписок,ОписаниеСтроки,ОшибкаПереходВниз,ОшибкаПереходВверх);
		Исключение
			Стр = ПолучитьОшибкуПерехода(ИмяТЧ,ОшибкаПереходВниз,ОшибкаПереходВверх);
			ВызватьИсключение Стр;
		КонецПопытки;	
	КонецЕсли;	 
	
	
	Если НЕ ПолучилосьПерейти Тогда
		Стр = ПолучитьОшибкуПерехода(ИмяТЧ,ОшибкаПереходВниз,ОшибкаПереходВверх);
		ВызватьИсключение Стр;
	КонецЕсли;	
	
	СделатьДействияПриЗаписиHTML("толькофрейм");
	
КонецПроцедуры

&НаКлиенте
//В таблице "Список" я перехожу к строке:
//@ВТаблицеЯПерехожуКСтроке(Парам01,ТабПарам)
Процедура ВТаблицеЯПерехожуКСтроке(ИмяТЧ,ТабПарам) Экспорт
	Ванесса.ПроверитьРавенство(ТабПарам.Количество(),2,"Строка должна быть описана таблицей с двумя строками.");
	
	ТаблицаСписок = НайтиТЧПоИмени(ИмяТЧ);
	
	ТаблицаСписок.Активизировать();
	
	СделатьДействияПриЗаписиВидео("толькофрейм");
	
	ОписаниеСтроки = ПолучитьОписаниеСтрокиИзТаблицы(ТабПарам);
	
	
	ОшибкаПереходВниз  = "";
	ОшибкаПереходВверх = "";
	
	
	ПолучилосьПерейти = СделатьПереход(ТаблицаСписок,ОписаниеСтроки,ОшибкаПереходВниз,ОшибкаПереходВверх);
	Если НЕ ПолучилосьПерейти Тогда
		Попытка
			//Возможно, это  ошибка платформы. Такое бывает с таблицами значений в УФ. Смотри https://github.com/silverbulleters/vanessa-behavior/issues/342
			//Делаем обход проблемы
			ТаблицаСписок.ПерейтиКПервойСтроке();
			ПолучилосьПерейти = СделатьПереход(ТаблицаСписок,ОписаниеСтроки,ОшибкаПереходВниз,ОшибкаПереходВверх);
		Исключение
			Стр = ПолучитьОшибкуПерехода(ИмяТЧ,ОшибкаПереходВниз,ОшибкаПереходВверх);
			ВызватьИсключение Стр;
		КонецПопытки;	
	КонецЕсли;	 
	
	
	Если НЕ ПолучилосьПерейти Тогда
		Стр = ПолучитьОшибкуПерехода(ИмяТЧ,ОшибкаПереходВниз,ОшибкаПереходВверх);
		ВызватьИсключение Стр;
	КонецЕсли;	
	
	СделатьДействияПриЗаписиHTML("толькофрейм");
	
КонецПроцедуры

&НаКлиенте
//В таблице "Список" я перехожу к первой строке
//@ВТаблицеЯПерехожуКПервойСтроке(Парам01)
Процедура ВТаблицеЯПерехожуКПервойСтроке(ИмяТЧ) Экспорт
	Таблица = НайтиТЧПоИмени(ИмяТЧ);
	
	Таблица.Активизировать();
	СделатьДействияПриЗаписиВидео("толькофрейм");
	
	Таблица.ПерейтиКПервойСтроке();
КонецПроцедуры


&НаКлиенте
//В таблице "Список" я перехожу к последней строке
//@ВТаблицеЯПерехожуКПоследнейСтроке(Парам01)
Процедура ВТаблицеЯПерехожуКПоследнейСтроке(ИмяТЧ) Экспорт
	Таблица = НайтиТЧПоИмени(ИмяТЧ);
	
	Таблица.Активизировать();
	СделатьДействияПриЗаписиВидео("толькофрейм");
	
	Таблица.ПерейтиКПоследнейСтроке();
КонецПроцедуры

&НаКлиенте
//В таблице "Список" я перехожу к предыдущей строке
//@ВТаблицеЯПерехожуКПредыдущейСтроке(Парам01)
Процедура ВТаблицеЯПерехожуКПредыдущейСтроке(ИмяТЧ) Экспорт
	Таблица = НайтиТЧПоИмени(ИмяТЧ);
	
	Таблица.Активизировать();
	СделатьДействияПриЗаписиВидео("толькофрейм");
	
	Таблица.ПерейтиКПредыдущейСтроке();
КонецПроцедуры

&НаКлиенте
//В таблице "Список" я перехожу к следующей строке
//@ВТаблицеЯПерехожуКСледующейСтроке(Парам01)
Процедура ВТаблицеЯПерехожуКСледующейСтроке(ИмяТЧ) Экспорт
	Таблица = НайтиТЧПоИмени(ИмяТЧ);
	
	Таблица.Активизировать();
	СделатьДействияПриЗаписиВидео("толькофрейм");
	
	Таблица.ПерейтиКСледующейСтроке();
КонецПроцедуры



&НаКлиенте
//В таблице "Список" я добавляю строку
//@ВТаблицеЯДобавляюСтроку(Парам01)
Процедура ВТаблицеЯДобавляюСтроку(ИмяТЧ) Экспорт
	Таблица = НайтиТЧПоИмени(ИмяТЧ);
	
	Таблица.Активизировать();
	СделатьДействияПриЗаписиВидео("толькофрейм");
	
	Таблица.ДобавитьСтроку();
КонецПроцедуры

&НаКлиенте
//В таблице "Список" я удаляю строку
//@ВТаблицеЯУдаляюСтроку(Парам01)
Процедура ВТаблицеЯУдаляюСтроку(ИмяТЧ) Экспорт
	Таблица = НайтиТЧПоИмени(ИмяТЧ);
	
	Таблица.Активизировать();
	СделатьДействияПриЗаписиВидео("толькофрейм");
	
	Таблица.УдалитьСтроку();
КонецПроцедуры









&НаКлиенте
//В форме "Справочник1" в таблице "Список" я разворачиваю строку:
//@ВФормеВТаблицеЯРазворачиваюСтроку(Парам01,Парам02,ТабПарам)
Процедура ВФормеВТаблицеЯРазворачиваюСтроку(ИмяФормы,ИмяТЧ,ТабПарам) Экспорт
	Ванесса.ПроверитьРавенство(ТабПарам.Количество(),2,"Строка должна быть описана таблицей с двумя строками.");
	
	
	ВФормеВТаблицеЯПерехожуКСтроке(ИмяФормы,ИмяТЧ,ТабПарам);
	
	НужнаяФорма = НайтиФормуПоЗаголовку(ИмяФормы);
	
	Если НужнаяФорма = Неопределено Тогда
		Если НужнаяФорма = Неопределено Тогда
			Стр = "Форма с заголовком <" + ИмяФормы + "> не найдена!";
			Сообщить(Стр);
			ВызватьИсключение Стр;
		КонецЕсли;	 
		
	КонецЕсли;	 
	
	ТаблицаСписок = НайтиТЧПоИмени(ИмяТЧ,НужнаяФорма);
	
	ТаблицаСписок.Активизировать();
	
	СделатьДействияПриЗаписиВидео("толькофрейм");
	
	ОписаниеСтроки = ПолучитьОписаниеСтрокиИзТаблицы(ТабПарам);
	
	Если Не ТаблицаСписок.Развернут() Тогда
		ТаблицаСписок.Развернуть(ОписаниеСтроки);
	КонецЕсли;	 
	
	СделатьДействияПриЗаписиHTML("толькофрейм");
КонецПроцедуры



&НаКлиенте
//В таблице "Список" я разворачиваю строку:
//@ВТаблицеЯРазворачиваюСтроку(Парам01,Парам02,ТабПарам)
Процедура ВТаблицеЯРазворачиваюСтроку(ИмяТЧ,ТабПарам) Экспорт
	Ванесса.ПроверитьРавенство(ТабПарам.Количество(),2,"Строка должна быть описана таблицей с двумя строками.");
	
	
	ВТаблицеЯПерехожуКСтроке(ИмяТЧ,ТабПарам);
	
	ТаблицаСписок = НайтиТЧПоИмени(ИмяТЧ);
	
	ТаблицаСписок.Активизировать();
	
	СделатьДействияПриЗаписиВидео("толькофрейм");
	
	ОписаниеСтроки = ПолучитьОписаниеСтрокиИзТаблицы(ТабПарам);
	
	Если Не ТаблицаСписок.Развернут() Тогда
		ТаблицаСписок.Развернуть(ОписаниеСтроки);
	КонецЕсли;	 
	
	СделатьДействияПриЗаписиHTML("толькофрейм");
КонецПроцедуры

&НаКлиенте
//В таблице "Список" я разворачиваю текущую строку:
//@ВТаблицеЯРазворачиваюТекущуюСтроку(Парам01)
Процедура ВТаблицеЯРазворачиваюТекущуюСтроку(ИмяТЧ) Экспорт
	ТаблицаСписок = НайтиТЧПоИмени(ИмяТЧ);
	ТаблицаСписок.Активизировать();
	СделатьДействияПриЗаписиВидео("толькофрейм");
	
	Если Не ТаблицаСписок.Развернут() Тогда
		ТаблицаСписок.Развернуть();
	КонецЕсли;	 
	
	СделатьДействияПриЗаписиHTML("толькофрейм");
КонецПроцедуры




&НаКлиенте
//В форме "Справочник1" в таблице "Список" я сворачиваю строку:
//@ВФормеВТаблицеЯСворачиваюСтроку(Парам01,Парам02,ТабПарам)
Процедура ВФормеВТаблицеЯСворачиваюСтроку(ИмяФормы,ИмяТЧ,ТабПарам) Экспорт
	Ванесса.ПроверитьРавенство(ТабПарам.Количество(),2,"Строка должна быть описана таблицей с двумя строками.");
	
	ВФормеВТаблицеЯПерехожуКСтроке(ИмяФормы,ИмяТЧ,ТабПарам);
	
	
	НужнаяФорма = НайтиФормуПоЗаголовку(ИмяФормы);
	
	Если НужнаяФорма = Неопределено Тогда
		Если НужнаяФорма = Неопределено Тогда
			Стр = "Форма с заголовком <" + ИмяФормы + "> не найдена!";
			Сообщить(Стр);
			ВызватьИсключение Стр;
		КонецЕсли;	 
		
	КонецЕсли;	 
	
	ТаблицаСписок = НайтиТЧПоИмени(ИмяТЧ,НужнаяФорма);
	
	ТаблицаСписок.Активизировать();
	
	СделатьДействияПриЗаписиВидео("толькофрейм");
	
	ОписаниеСтроки = ПолучитьОписаниеСтрокиИзТаблицы(ТабПарам);
	
	Если ТаблицаСписок.Развернут() Тогда
		ТаблицаСписок.Свернуть(ОписаниеСтроки);
	КонецЕсли;	 
	
	СделатьДействияПриЗаписиHTML("толькофрейм");
	
КонецПроцедуры

&НаКлиенте
//В таблице "Список" я сворачиваю строку:
//@ВТаблицеЯСворачиваюСтроку(Парам01,Парам02,ТабПарам)
Процедура ВТаблицеЯСворачиваюСтроку(ИмяТЧ,ТабПарам) Экспорт
	Ванесса.ПроверитьРавенство(ТабПарам.Количество(),2,"Строка должна быть описана таблицей с двумя строками.");
	
	ВТаблицеЯПерехожуКСтроке(ИмяТЧ,ТабПарам);
	
	ТаблицаСписок = НайтиТЧПоИмени(ИмяТЧ);
	
	ТаблицаСписок.Активизировать();
	
	СделатьДействияПриЗаписиВидео("толькофрейм");
	
	ОписаниеСтроки = ПолучитьОписаниеСтрокиИзТаблицы(ТабПарам);
	
	Если ТаблицаСписок.Развернут() Тогда
		ТаблицаСписок.Свернуть(ОписаниеСтроки);
	КонецЕсли;	 
	
	СделатьДействияПриЗаписиHTML("толькофрейм");
	
КонецПроцедуры

&НаКлиенте
//В таблице "Список" я сворачиваю теукщую строку:
//@ВТаблицеЯСворачиваюТекущуюСтроку(Парам01)
Процедура ВТаблицеЯСворачиваюТекущуюСтроку(ИмяТЧ) Экспорт
	ТаблицаСписок = НайтиТЧПоИмени(ИмяТЧ);
	ТаблицаСписок.Активизировать();
	СделатьДействияПриЗаписиВидео("толькофрейм");
	
	Если ТаблицаСписок.Развернут() Тогда
		ТаблицаСписок.Свернуть();
	КонецЕсли;	 
	
	СделатьДействияПриЗаписиHTML("толькофрейм");
КонецПроцедуры




&НаКлиенте
//"В форме "Справочник1" в ТЧ "Список" я выбираю текущую строку"
//@ВФормеВТЧЯВыбираюТекущуюСтроку(Парам01,Парам02)
Процедура ВФормеВТЧЯВыбираюТекущуюСтроку(ИмяФормы,ИмяТЧ) Экспорт
	НужнаяФорма            = НайтиФормуПоЗаголовку(ИмяФормы);
	ТЧ                     =  НайтиТЧПоИмени(ИмяТЧ,НужнаяФорма);
	ТЧ.Выбрать();
КонецПроцедуры

&НаКлиенте
//"В таблице "Список" я выбираю текущую строку"
//@ВТаблицеЯВыбираюТекущуюСтроку(Парам01,Парам02)
Процедура ВТаблицеЯВыбираюТекущуюСтроку(ИмяТЧ) Экспорт
	ТЧ =  НайтиТЧПоИмени(ИмяТЧ);
	ТЧ.Выбрать();
КонецПроцедуры






&НаКлиенте
//В открытой форме я открываю выпадающий список с заголовком "Реквизит1"
//@ВОткрытойФормеЯОткрываюВыпадающийСписокСЗаголовком(Парам01)
Процедура ВОткрытойФормеЯОткрываюВыпадающийСписокСЗаголовком(ИмяРеквизита,ИскатьПоИмени = Ложь) Экспорт
	//ОкноПриложения = ПолучитьАктивноеОкноИзКонтекста();
	//Сообщить("ОкноПриложения.Заголовок = " + ОкноПриложения.Заголовок);
	
	//ОкноПриложенияТестовыйЭлементСправочник1ФормаТестовыйЭлементСправочник1 = ОкноПриложенияТестовыйЭлементСправочник1.НайтиОбъект(Тип("ТестируемаяФорма"), "Тестовый Элемент * (Справочник1)");
	//ТекущаяФорма            = ОкноПриложения.НайтиОбъект(Тип("ТестируемаяФорма"));
	
	
	Нашли = Ложь;
	МассивФорм = НайтиФормыТекущегоОкна();
	Для каждого ТекущаяФорма Из МассивФорм Цикл
		Если ИскатьПоИмени Тогда
			ТекущийВыпадающийСписок = ТекущаяФорма.НайтиОбъект(Тип("ТестируемоеПолеФормы"),,ИмяРеквизита);
		Иначе	
			ТекущийВыпадающийСписок = ТекущаяФорма.НайтиОбъект(Тип("ТестируемоеПолеФормы"),ИмяРеквизита);
		КонецЕсли;	 
		
		Если ТекущийВыпадающийСписок = Неопределено Тогда
			Продолжить;
		КонецЕсли;	 
		
		
		ТекущийВыпадающийСписок.Активизировать();
		СделатьДействияПриЗаписиВидео();
		СделатьДействияПриЗаписиHTML();
		
		ТекущийВыпадающийСписок.ОткрытьВыпадающийСписок();
		Контекст.Вставить("ТекущийВыпадающийСписок",ТекущийВыпадающийСписок);
		
		Нашли = Истина;
		Прервать;
	КонецЦикла;
	
	Если НЕ Нашли Тогда
		Если ИскатьПоИмени Тогда
			Стр = "Выпадающий список с именем <" + ИмяРеквизита + "> не найден!";
		Иначе	
			Стр = "Выпадающий список с заголовком <" + ИмяРеквизита + "> не найден!";
		КонецЕсли;	 
		
		Сообщить(Стр);
		ВызватьИсключение Стр;
	КонецЕсли;	 
	

КонецПроцедуры

&НаКлиенте
//В открытой форме я открываю выпадающий список "Реквизит1"
//@ВОткрытойФормеЯОткрываюВыпадающийСписок(Парам01)
Процедура ВОткрытойФормеЯОткрываюВыпадающийСписок(ИмяРеквизита,ИскатьПоИмени = Ложь) Экспорт
	ВОткрытойФормеЯОткрываюВыпадающийСписокСЗаголовком(ИмяРеквизита,ИскатьПоИмени);
КонецПроцедуры






&НаКлиенте
//В открытой форме я открываю выпадающий список с именем "Реквизит1"
//@ВОткрытойФормеЯОткрываюВыпадающийСписокСИменем(Парам01)
Процедура ВОткрытойФормеЯОткрываюВыпадающийСписокСИменем(ИмяРеквизита) Экспорт
	ВОткрытойФормеЯОткрываюВыпадающийСписокСЗаголовком(ИмяРеквизита,Истина);
КонецПроцедуры


&НаКлиенте
//В открытой форме я выбираю значение реквизита с заголовком "Реквизит2" из формы списка
//@ВОткрытойФормеЯВыбираюЗначениеРеквизитаСЗаголовкомИзФормыСписка(Парам01)
Процедура ВОткрытойФормеЯВыбираюЗначениеРеквизитаСЗаголовкомИзФормыСписка(ИмяРеквизита,ИскатьПоИмени = Ложь) Экспорт

	//ОкноПриложения = ПолучитьАктивноеОкноИзКонтекста();
	////Сообщить("ОкноПриложения.Заголовок = " + ОкноПриложения.Заголовок);
	//
	//ТекущаяФорма            = ОкноПриложения.НайтиОбъект(Тип("ТестируемаяФорма"));
	
	
	Нашли = Ложь;
	МассивФорм = НайтиФормыТекущегоОкна();
	Для каждого ТекущаяФорма Из МассивФорм Цикл
		Если ИскатьПоИмени Тогда
			ТекущийВыпадающийСписок = ТекущаяФорма.НайтиОбъект(Тип("ТестируемоеПолеФормы"),,ИмяРеквизита);
		Иначе	
			ТекущийВыпадающийСписок = ТекущаяФорма.НайтиОбъект(Тип("ТестируемоеПолеФормы"),ИмяРеквизита);
		КонецЕсли;	 
		
		Если ТекущийВыпадающийСписок = Неопределено Тогда
			Продолжить;
		КонецЕсли;	 
		
		
		ТекущийВыпадающийСписок.Активизировать();
		СделатьДействияПриЗаписиВидео();
		СделатьДействияПриЗаписиHTML();
		
		ТекущийВыпадающийСписок.Выбрать();
		
		Нашли = Истина;
		Прервать;
	КонецЦикла;
	
	Если НЕ Нашли Тогда
		Если ИскатьПоИмени Тогда
			Стр = "Выпадающий список с именем <" + ИмяРеквизита + "> не найден!";
		Иначе	
			Стр = "Выпадающий список с заголовком <" + ИмяРеквизита + "> не найден!";
		КонецЕсли;	 
		
		Сообщить(Стр);
		ВызватьИсключение Стр;
	КонецЕсли;	 
	
	
	
	
	
КонецПроцедуры

&НаКлиенте
//В открытой форме я выбираю значение реквизита "Реквизит2" из формы списка
//@ВОткрытойФормеЯВыбираюЗначениеРеквизитаИзФормыСписка(Парам01)
Процедура ВОткрытойФормеЯВыбираюЗначениеРеквизитаИзФормыСписка(ИмяРеквизита,ИскатьПоИмени = Ложь) Экспорт
	ВОткрытойФормеЯВыбираюЗначениеРеквизитаСЗаголовкомИзФормыСписка(ИмяРеквизита,ИскатьПоИмени);
КонецПроцедуры




&НаКлиенте
//В открытой форме я выбираю значение реквизита с именем "Реквизит2" из формы списка
//@ВОткрытойФормеЯВыбираюЗначениеРеквизитаСИменемИзФормыСписка(Парам01)
Процедура ВОткрытойФормеЯВыбираюЗначениеРеквизитаСИменемИзФормыСписка(ИмяРеквизита) Экспорт

	ВОткрытойФормеЯВыбираюЗначениеРеквизитаСЗаголовкомИзФормыСписка(ИмяРеквизита,Истина);
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьКорректныйТекстДляВставкиВПоле(Текст)
	Если ТипЗнч(Текст) = Тип("Массив") Тогда
		НовыйТекст = "";
		Для Каждого Элем Из Текст Цикл
			НовыйТекст = НовыйТекст + Элем.Кол1 + Символы.ПС;
		КонецЦикла;	
		
		Возврат НовыйТекст;
	Иначе
		Возврат Текст;
	КонецЕсли;	 
КонецФункции	

&НаКлиенте
//В открытой форме в поле с заголовком "Реквизит строка" я ввожу текст "тест"
//@ВОткрытойФормеВПолеСЗаголовкомЯВвожуТекст(Парам01,Парам02)
Процедура ВОткрытойФормеВПолеСЗаголовкомЯВвожуТекст(ИмяРеквизита,Текст,ИскатьПоИмени = Ложь) Экспорт
	
	Текст = ПолучитьКорректныйТекстДляВставкиВПоле(Текст);
	
	
	ПолеРеквизит = Ванесса.НайтиРеквизитОткрытойФормыПоЗаголовку(ИмяРеквизита,ИскатьПоИмени);
	ПолеРеквизит.Активизировать();
	
	
	СделатьДействияПриЗаписиВидео();
	ПолеРеквизит.ВвестиТекст(Текст);
	СделатьДействияПриЗаписиHTML();
	
КонецПроцедуры

&НаКлиенте
//В открытой форме в поле "Реквизит строка" я ввожу текст "тест"
//@ВОткрытойФормеВПолеЯВвожуТекст(Парам01,Парам02)
Процедура ВОткрытойФормеВПолеЯВвожуТекст(ИмяРеквизита,Текст,ИскатьПоИмени = Ложь) Экспорт
	ВОткрытойФормеВПолеСЗаголовкомЯВвожуТекст(ИмяРеквизита,Текст,ИскатьПоИмени);
КонецПроцедуры




&НаКлиенте
//В открытой форме в поле с именем "Реквизит строка" я ввожу текст "тест"
//@ВОткрытойФормеВПолеСИменемЯВвожуТекст(Парам01,Парам02)
Процедура ВОткрытойФормеВПолеСИменемЯВвожуТекст(ИмяРеквизита,Текст) Экспорт
	ВОткрытойФормеВПолеСЗаголовкомЯВвожуТекст(ИмяРеквизита,Текст,Истина);
КонецПроцедуры


&НаКлиенте
//В открытой форме я нажимаю на кнопку с заголовком "Записать и закрыть"
//@ВОткрытойФормеЯНажимаюНаКнопкуСЗаголовком(Парам01)
Процедура ВОткрытойФормеЯНажимаюНаКнопкуСЗаголовком(ИмяКнопки,ИскатьПоИмени = Ложь) Экспорт

	//ОкноПриложения         = Контекст.АктивноеОкно;
	//ОкноПриложения         = ПолучитьАктивноеОкноИзКонтекста();
	//Сообщить("ОкноПриложения.Заголовок="+ОкноПриложения.Заголовок);
	//ТекущаяФорма           = ОкноПриложения.НайтиОбъект(Тип("ТестируемаяФорма"));
	//Сообщить("ТекущаяФорма.ТекстЗаголовка="+ТекущаяФорма.ТекстЗаголовка);
	
	Нашли = Ложь;
	МассивФорм = НайтиФормыТекущегоОкна();
	Для каждого ТекущаяФорма Из МассивФорм Цикл
		//Сообщить("" + ТекущаяФорма.ТекстЗаголовка);
		
		Если ИскатьПоИмени Тогда
			Кнопка       = ТекущаяФорма.НайтиОбъект(Тип("ТестируемаяКнопкаФормы"),,ИмяКнопки);
		Иначе	
			Кнопка       = ТекущаяФорма.НайтиОбъект(Тип("ТестируемаяКнопкаФормы"),ИмяКнопки);
		КонецЕсли;	 
		
		Если Кнопка = Неопределено Тогда
			Продолжить;
		КонецЕсли;	 
		
		Нашли = Истина;
		
		//Если Ванесса.Объект.ИдетЗаписьВидео Тогда
		//	Кнопка.Активизировать();
		//	Ванесса.ПереместитьКурсорМышиКАктивномуОбъекту();
		//	Ванесса.ПодсветитьАктивныйЭлементФормы();
		//КонецЕсли;	 
		
		
		Прервать;
	КонецЦикла;
	
	
	Если НЕ Нашли Тогда //для модальных диалогов
		ТекущаяФорма = НайтиТекущуюФорму();
		
		Если ИскатьПоИмени Тогда
			Кнопка       = ТекущаяФорма.НайтиОбъект(Тип("ТестируемаяКнопкаФормы"),,ИмяКнопки);
		Иначе	
			Кнопка       = ТекущаяФорма.НайтиОбъект(Тип("ТестируемаяКнопкаФормы"),ИмяКнопки);
		КонецЕсли;	 
		
		Если Кнопка <> Неопределено Тогда
			Нашли = Истина;
		КонецЕсли;	 
		
	КонецЕсли;	 
	
	
	Если НЕ Нашли Тогда
		Если ИскатьПоИмени Тогда
			Стр = "Кнопка с именем <" + ИмяКнопки + "> не найдена!";
		Иначе	
			Стр = "Кнопка/команда с заголовком <" + ИмяКнопки + "> не найдена!";
		КонецЕсли;	 
		
		Сообщить(Стр);
		ВызватьИсключение Стр;
	КонецЕсли;	 
	
	
	ПолучилосьАктивизировать = АктивизироватьКнопку(Кнопка,ТекущаяФорма);
	
	Если ПолучилосьАктивизировать Тогда
		СделатьДействияПриЗаписиВидео();
		СделатьДействияПриЗаписиHTML();
	КонецЕсли;	 
	
	
	Кнопка.Нажать();
	//Кнопка       = ТекущаяФорма.НайтиОбъект(Тип("ТестируемаяКнопкаФормы"),ИмяКнопки);
	//
	//Если Кнопка = Неопределено Тогда
	//	Стр = "Кнопка/команда с заголовком <" + ИмяКнопки + "> не найдена!";
	//	Сообщить(Стр);
	//	ВызватьИсключение Стр;
	//КонецЕсли;	 
	//
	//Кнопка.Нажать();
	
	//Ванесса.ПосмотретьЗначение(ТекущаяФорма,Истина);
	
	//ПолеТабДок = ТекущаяФорма.ПолучитьПодчиненныеОбъекты()[4];
	//Адрес = ПолеТабДок.ПолучитьАдресТекущейОбласти();
	//Сообщить("Адрес="+Адрес);
	//
	//
	////ПолеТабДок.УстановитьТекущуюОбласть("R1C1:R10000C10000");
	////Адрес = ПолеТабДок.ПолучитьАдресТекущейОбласти();
	////Сообщить("Адрес="+Адрес);
	//
	//ПолеТабДок.УстановитьТекущуюОбласть("R4C2:R4C3");
	//ТекстОбласти = ПолеТабДок.ПолучитьТекстОбласти("R4C2:R4C3");
	//Ванесса.ПосмотретьЗначение(ПолеТабДок,Истина);
	
КонецПроцедуры

&НаКлиенте
//В открытой форме я нажимаю на кнопку "Записать и закрыть"
//@ВОткрытойФормеЯНажимаюНаКнопку(Парам01)
Процедура ВОткрытойФормеЯНажимаюНаКнопку(ИмяКнопки,ИскатьПоИмени = Ложь) Экспорт
	ВОткрытойФормеЯНажимаюНаКнопкуСЗаголовком(ИмяКнопки,ИскатьПоИмени);
КонецПроцедуры







&НаКлиенте
Процедура НажтиеНаКнопку()
	Ванесса.ПереместитьКурсорМышиКАктивномуОбъекту();
	Ванесса.ПодсветитьАктивныйЭлементФормы();
	ТекущийЭлементДляРаботы.Нажать();
	Ванесса.ПродолжитьВыполнениеШагов();
КонецПроцедуры

&НаСервере
Функция ЭлементСправочника1СИменемЗаписалсяКорректноСервер(Наименование)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Справочник1.Ссылка
		|ИЗ
		|	Справочник.Справочник1 КАК Справочник1
		|ГДЕ
		|	Справочник1.Наименование = &Наименование";
	
	Запрос.УстановитьПараметр("Наименование", Наименование);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Если ВыборкаДетальныеЗаписи.Количество() = 0 Тогда
		Возврат Ложь;
	КонецЕсли;	 
	
	
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Ссылка = ВыборкаДетальныеЗаписи.Ссылка;
		Если Ссылка.Реквизит1 <> Перечисления.Перечисление1.ЗначениеПеречисления1 Тогда
			Сообщить("Реквизит1: Значение не верное!");
			Возврат Ложь;
		КонецЕсли;	 
		Если Ссылка.Реквизит2 <> Справочники.Справочник2.НайтиПоНаименованию("ТестовыйЭлемент21") Тогда
			Сообщить("Реквизит2: Значение не верное!");
			Возврат Ложь;
		КонецЕсли;	 
		Если Ссылка.РеквизитЧисло <> 12.34 Тогда
			Сообщить("РеквизитЧисло: Значение не верное!");
			Возврат Ложь;
		КонецЕсли;	 
		Если Ссылка.РеквизитДата <> '19810408' Тогда
			Сообщить("РеквизитДата: Значение не верное!");
			Возврат Ложь;
		КонецЕсли;	 
		Если СокрЛП(Ссылка.РеквизитСтрока) <> "тест" Тогда
			Сообщить("РеквизитСтрока: Значение не верное!");
			Возврат Ложь;
		КонецЕсли;	 
		Если НЕ Ссылка.РеквизитБулево Тогда
			Сообщить("РеквизитБулево: Значение не верное!");
			Возврат Ложь;
		КонецЕсли;	 
		Если Ссылка.РеквизитПереключатель <> 1 Тогда
			Сообщить("РеквизитПереключатель: Значение не верное!");
			Возврат Ложь;
		КонецЕсли;	
		
		СтрокаТЧ = Ссылка.ТабличнаяЧасть1[0];
		
		Если СтрокаТЧ.РеквизитЧисло <> 56.78 Тогда
			Сообщить("ТЧ Реквизит1: Значение не верное!");
			Возврат Ложь;
		КонецЕсли;	 
		Если СокрЛП(СтрокаТЧ.РеквизитСтрока) <> "ТестСтрока" Тогда
			Сообщить("ТЧ РеквизитСтрока: Значение не верное!");
			Возврат Ложь;
		КонецЕсли;	 
		Если СтрокаТЧ.РеквизитДата <> '19830911' Тогда
			Сообщить("ТЧ РеквизитДата: Значение не верное!");
			Возврат Ложь;
		КонецЕсли;	 
		Если СтрокаТЧ.РеквизитСправочник <> Справочники.Справочник2.НайтиПоНаименованию("ТестовыйЭлемент21") Тогда
			Сообщить("ТЧ РеквизитСправочник: Значение не верное!");
			Возврат Ложь;
		КонецЕсли;	 
		Если НЕ СтрокаТЧ.РеквизитБулево Тогда
			Сообщить("ТЧ РеквизитБулево: Значение не верное!");
			Возврат Ложь;
		КонецЕсли;	 
		Если СтрокаТЧ.РеквизитСправочникВыборИзФормыСписка <> Справочники.Справочник2.НайтиПоНаименованию("ТестовыйЭлемент21") Тогда
			Сообщить("ТЧ РеквизитСправочникВыборИзФормыСписка: Значение не верное!");
			Возврат Ложь;
		КонецЕсли;	 
	КонецЦикла;
	
	Возврат Истина;
КонецФункции	

&НаКлиенте
//Элемент Справочника1 с именем "Тестовый Элемент 1" записался корректно
//@ЭлементСправочника1СИменемЗаписалсяКорректно(Парам01)
Процедура ЭлементСправочника1СИменемЗаписалсяКорректно(Наименование) Экспорт
	Ванесса.ПроверитьРавенство(ЭлементСправочника1СИменемЗаписалсяКорректноСервер(Наименование),Истина,"Записался корректный элемент.");
КонецПроцедуры





&НаКлиенте
//В открытой форме я изменяю флаг с заголовком "Реквизит булево"
//@ВОткрытойФормеЯИзменяюФлагСЗаголовком(Парам01)
Процедура ВОткрытойФормеЯИзменяюФлагСЗаголовком(ИмяРеквизита,ИскатьПоИмени = Ложь) Экспорт
	//ОкноПриложения         = ПолучитьАктивноеОкноИзКонтекста();
	//ТекущаяФорма           = ОкноПриложения.НайтиОбъект(Тип("ТестируемаяФорма"));
	
	Нашли = Ложь;
	МассивФорм = НайтиФормыТекущегоОкна();
	Для каждого ТекущаяФорма Из МассивФорм Цикл
		
		Если ИскатьПоИмени Тогда
			ПолеРеквизит = ТекущаяФорма.НайтиОбъект(Тип("ТестируемоеПолеФормы"),, ИмяРеквизита);
		Иначе
			ПолеРеквизит = ТекущаяФорма.НайтиОбъект(Тип("ТестируемоеПолеФормы"), ИмяРеквизита);
		КонецЕсли;	 
		
		
		Если ПолеРеквизит = Неопределено Тогда
			Продолжить;
		КонецЕсли;	 
		
		ПолеРеквизит.Активизировать();
		СделатьДействияПриЗаписиВидео();
		ПолеРеквизит.УстановитьОтметку();
		СделатьДействияПриЗаписиHTML();
		
		
		Нашли = Истина;
		Прервать;
	КонецЦикла;
	
	Если НЕ Нашли Тогда
		Если ИскатьПоИмени Тогда
			Стр = "Флаг с именем <" + ИмяРеквизита + "> не найден!";
		Иначе	
			Стр = "Флаг с заголовком <" + ИмяРеквизита + "> не найден!";
		КонецЕсли;	 
		
		Сообщить(Стр);
		ВызватьИсключение Стр;
	КонецЕсли;	 

	
КонецПроцедуры

&НаКлиенте
//В открытой форме я изменяю флаг "Реквизит булево"
//@ВОткрытойФормеЯИзменяюФлаг(Парам01)
Процедура ВОткрытойФормеЯИзменяюФлаг(ИмяРеквизита,ИскатьПоИмени = Ложь) Экспорт
	ВОткрытойФормеЯИзменяюФлагСЗаголовком(ИмяРеквизита,ИскатьПоИмени);
КонецПроцедуры






&НаКлиенте
//В открытой форме я изменяю флаг с именем "Реквизит булево"
//@ВОткрытойФормеЯИзменяюФлагСИменем(Парам01)
Процедура ВОткрытойФормеЯИзменяюФлагСИменем(ИмяРеквизита) Экспорт
	ВОткрытойФормеЯИзменяюФлагСЗаголовком(ИмяРеквизита,Истина)
КонецПроцедуры



&НаКлиенте
//В открытой форме я меняю значение переключателя с заголовком "Реквизит переключатель" на "Первое значение"
//@ВОткрытойФормеЯМеняюЗначениеПереключателяСЗаголовкомНа(Парам01,Парам02)
Процедура ВОткрытойФормеЯМеняюЗначениеПереключателяСЗаголовкомНа(ИмяРеквизита,Значение,ИскатьПоИмени = Ложь) Экспорт
	//ОкноПриложения         = ПолучитьАктивноеОкноИзКонтекста();
	//ТекущаяФорма           = ОкноПриложения.НайтиОбъект(Тип("ТестируемаяФорма"));
	
	Нашли = Ложь;
	МассивФорм = НайтиФормыТекущегоОкна();
	Для каждого ТекущаяФорма Из МассивФорм Цикл
		
		Если ИскатьПоИмени Тогда
			ПолеРеквизит           = ТекущаяФорма.НайтиОбъект(Тип("ТестируемоеПолеФормы"),, ИмяРеквизита);
		Иначе
			ПолеРеквизит           = ТекущаяФорма.НайтиОбъект(Тип("ТестируемоеПолеФормы"), ИмяРеквизита);
		КонецЕсли;	 
		
		Если ПолеРеквизит = Неопределено Тогда
			Продолжить;
		КонецЕсли;	 
		
		
		ПолеРеквизит.Активизировать();
		СделатьДействияПриЗаписиВидео();
		ПолеРеквизит.ВыбратьВариант(Значение);
		СделатьДействияПриЗаписиHTML();
		
		
		
		Нашли = Истина;
		Прервать;
	КонецЦикла;
	
	Если НЕ Нашли Тогда
		Если ИскатьПоИмени Тогда
			Стр = "Переключатель с именем <" + ИмяРеквизита + "> не найден!";
		Иначе	
			Стр = "Переключатель с заголовком <" + ИмяРеквизита + "> не найден!";
		КонецЕсли;	 
		
		Сообщить(Стр);
		ВызватьИсключение Стр;
	КонецЕсли;	 
		
	
	
КонецПроцедуры

&НаКлиенте
//В открытой форме я меняю значение переключателя "Реквизит переключатель" на "Первое значение"
//@ВОткрытойФормеЯМеняюЗначениеПереключателяНа(Парам01,Парам02)
Процедура ВОткрытойФормеЯМеняюЗначениеПереключателяНа(ИмяРеквизита,Значение,ИскатьПоИмени = Ложь) Экспорт
	ВОткрытойФормеЯМеняюЗначениеПереключателяСЗаголовкомНа(ИмяРеквизита,Значение,ИскатьПоИмени);
КонецПроцедуры


&НаКлиенте
//В открытой форме я меняю значение переключателя с именем "Реквизит переключатель" на "Первое значение"
//@ВОткрытойФормеЯМеняюЗначениеПереключателяСИменемНа(Парам01,Парам02)
Процедура ВОткрытойФормеЯМеняюЗначениеПереключателяСИменемНа(ИмяРеквизита,Значение) Экспорт
	ВОткрытойФормеЯМеняюЗначениеПереключателяСЗаголовкомНа(ИмяРеквизита,Значение,Истина);	
КонецПроцедуры



&НаКлиенте
//В открытой форме в ТЧ "ТабличнаяЧасть1" я нажимаю на кнопку с заголовком "Добавить"
//@ВОткрытойФормеВТЧЯНажимаюНаКнопкуСЗаголовком(Парам01,Парам02)
Процедура ВОткрытойФормеВТЧЯНажимаюНаКнопкуСЗаголовком(ИмяТЧ,ИмяКнопки,ИскатьПоИмени = Ложь) Экспорт
	//ОкноПриложения         = ПолучитьАктивноеОкноИзКонтекста();
	//ТекущаяФорма           = ОкноПриложения.НайтиОбъект(Тип("ТестируемаяФорма"));
	
	Нашли = Ложь;
	НашлиТЧ = Ложь;
	МассивФорм = НайтиФормыТекущегоОкна();
	Для каждого ТекущаяФорма Из МассивФорм Цикл
		ТЧ                     = ТекущаяФорма.НайтиОбъект(Тип("ТестируемаяТаблицаФормы"),,ИмяТЧ);
		Если ТЧ = Неопределено Тогда
			Продолжить;
		КонецЕсли;	 
		
		НашлиТЧ = Истина;
		Контекст.Вставить("ТекущаяТЧ",ТЧ);
		
		Если ИскатьПоИмени Тогда
			Кнопка                 = ТЧ.НайтиОбъект(Тип("ТестируемаяКнопкаФормы"),, ИмяКнопки);
		Иначе	
			Кнопка                 = ТЧ.НайтиОбъект(Тип("ТестируемаяКнопкаФормы"), ИмяКнопки);

			Попытка
				Если Не ТЧ = Неопределено Тогда
					КоманднаяПанельФормы = ТЧ.ПолучитьКоманднуюПанель();

					Кнопка = КоманднаяПанельФормы.НайтиОбъект(Тип("ТестируемаяКнопкаФормы"), ИмяКнопки);
				КонецЕсли;	 
			Исключение
			
			КонецПопытки;
		КонецЕсли;	 
		
		Если Кнопка = Неопределено Тогда
			Продолжить;
		КонецЕсли;	 
		
		ПолучилосьАктивизировать = АктивизироватьКнопку(Кнопка,ТекущаяФорма,ТЧ);
		Если ПолучилосьАктивизировать Тогда
			СделатьДействияПриЗаписиВидео();
			СделатьДействияПриЗаписиHTML();
		КонецЕсли;	 
		
		Кнопка.Нажать();
	
		Нашли = Истина;
		Прервать;
	КонецЦикла;
	
	
	Если Не НашлиТЧ Тогда
		Стр = "ТЧ с именем <" + ИмяТЧ + "> не найдена!";
		
		Сообщить(Стр);
		ВызватьИсключение Стр;
	КонецЕсли;	 
	
	
	Если НЕ Нашли Тогда
		Если ИскатьПоИмени Тогда
			Стр = "Кнопка с именем <" + ИмяКнопки + "> не найдена!";
		Иначе	
			Стр = "Кнопка/команда с заголовком <" + ИмяКнопки + "> не найдена!";
		КонецЕсли;	 
		
		Сообщить(Стр);
		ВызватьИсключение Стр;
	КонецЕсли;	 
	
	
	
КонецПроцедуры

&НаКлиенте
//В открытой форме в ТЧ "ТабличнаяЧасть1" я нажимаю на кнопку "Добавить"
//@ВОткрытойФормеВТЧЯНажимаюНаКнопку(Парам01,Парам02)
Процедура ВОткрытойФормеВТЧЯНажимаюНаКнопку(ИмяТЧ,ИмяКнопки,ИскатьПоИмени = Ложь) Экспорт
	ВОткрытойФормеВТЧЯНажимаюНаКнопкуСЗаголовком(ИмяТЧ,ИмяКнопки,ИскатьПоИмени);
КонецПроцедуры






&НаКлиенте
//В открытой форме в ТЧ "ТабличнаяЧасть1" я нажимаю на кнопку с именем "Добавить"
//@ВОткрытойФормеВТЧЯНажимаюНаКнопкуСИменем(Парам01,Парам02)
Процедура ВОткрытойФормеВТЧЯНажимаюНаКнопкуСИменем(ИмяТЧ,ИмяКнопки) Экспорт
	ВОткрытойФормеВТЧЯНажимаюНаКнопкуСЗаголовком(ИмяТЧ,ИмяКнопки,Истина);
КонецПроцедуры



&НаКлиенте
//В открытой форме в ТЧ "ТабличнаяЧасть1" в поле с заголовком "Реквизит число" я ввожу текст "54,00"
//@ВОткрытойФормеВТЧВПолеСЗаголовкомЯВвожуТекст(Парам01,Парам02,Парам03)
Процедура ВОткрытойФормеВТЧВПолеСЗаголовкомЯВвожуТекст(ИмяТЧ,ИмяРеквизита,Текст,ИскатьПоИмени = Ложь) Экспорт
	//ОкноПриложения         = ПолучитьАктивноеОкноИзКонтекста();
	//ТекущаяФорма           = ОкноПриложения.НайтиОбъект(Тип("ТестируемаяФорма"));
	//ТЧ                     = ТекущаяФорма.НайтиОбъект(Тип("ТестируемаяТаблицаФормы"),,ИмяТЧ);
	ТЧ                     =  НайтиТЧПоИмени(ИмяТЧ);
	Если ИскатьПоИмени Тогда
		ПолеРеквизит           = ТЧ.НайтиОбъект(Тип("ТестируемоеПолеФормы"),, ИмяРеквизита);
	Иначе	
		ПолеРеквизит           = ТЧ.НайтиОбъект(Тип("ТестируемоеПолеФормы"), ИмяРеквизита);
	КонецЕсли;	 
	
	Если ПолеРеквизит = Неопределено Тогда
		Если ИскатьПоИмени Тогда
			Стр = "Поле с именем <" + ИмяРеквизита + "> не найдено!";
		Иначе	
			Стр = "Поле с заголовком <" + ИмяРеквизита + "> не найдено!";
		КонецЕсли;	 
		Сообщить(Стр);
		ВызватьИсключение Стр;
	КонецЕсли;	 
	
	ПолеРеквизит.Активизировать();
	
	ТаблицаВРежимеРедактирования = ТЧ.ТекущийРежимРедактирование();
	Если Не ТаблицаВРежимеРедактирования Тогда
		ТЧ.Выбрать();
	КонецЕсли;	 
	
	СделатьДействияПриЗаписиВидео();
	ПолеРеквизит.ВвестиТекст(Текст);
	СделатьДействияПриЗаписиHTML();
	
	Ванесса.УстановитьТекстИнструкции("И в поле """ + ИмяРеквизита + """ я ввожу """ + Текст + """");
КонецПроцедуры

&НаКлиенте
//В открытой форме в ТЧ "ТабличнаяЧасть1" в поле "Реквизит число" я ввожу текст "54,00"
//@ВОткрытойФормеВТЧВПолеЯВвожуТекст(Парам01,Парам02,Парам03)
Процедура ВОткрытойФормеВТЧВПолеЯВвожуТекст(ИмяТЧ,ИмяРеквизита,Текст) Экспорт
	ВОткрытойФормеВТЧВПолеСЗаголовкомЯВвожуТекст(ИмяТЧ,ИмяРеквизита,Текст);
КонецПроцедуры

&НаКлиенте
//В открытой форме в ТЧ "ТабличнаяЧасть1" в поле с именем "Реквизит число" я ввожу текст "54,00"
//@ВОткрытойФормеВТЧВПолеСИменемЯВвожуТекст(Парам01,Парам02,Парам03)
Процедура ВОткрытойФормеВТЧВПолеСИменемЯВвожуТекст(ИмяТЧ,ИмяРеквизита,Текст) Экспорт
	ВОткрытойФормеВТЧВПолеСЗаголовкомЯВвожуТекст(ИмяТЧ,ИмяРеквизита,Текст,Истина);
КонецПроцедуры






&НаКлиенте
//В открытой форме в ТЧ "ТабличнаяЧасть1" из выпадающего списка с заголовком "Реквизит справочник" я выбираю "ТестовыйЭлемент21"
//@ВОткрытойФормеВТЧИзВыпадающегоСпискаСЗаголовкомЯВыбираю(Парам01,Парам02,Парам03)
Процедура ВОткрытойФормеВТЧИзВыпадающегоСпискаСЗаголовкомЯВыбираю(ИмяТЧ,ИмяРеквизита,ВыбираемоеЗначение,ИскатьПоИмени = Ложь) Экспорт
	//ОкноПриложения         = ПолучитьАктивноеОкноИзКонтекста();
	//ТекущаяФорма           = ОкноПриложения.НайтиОбъект(Тип("ТестируемаяФорма"));
	//ТЧ                     = ТекущаяФорма.НайтиОбъект(Тип("ТестируемаяТаблицаФормы"),,ИмяТЧ);
	ТЧ                     =  НайтиТЧПоИмени(ИмяТЧ);
	
	Если ИскатьПоИмени Тогда
		ПолеРеквизит           = ТЧ.НайтиОбъект(Тип("ТестируемоеПолеФормы"), , ИмяРеквизита);
	Иначе	
		ПолеРеквизит           = ТЧ.НайтиОбъект(Тип("ТестируемоеПолеФормы"), ИмяРеквизита);
	КонецЕсли;	 
	
	Если ПолеРеквизит = Неопределено Тогда
		Стр = "Поле с заголовком <" + ИмяРеквизита + "> не найдено!";
		Сообщить(Стр);
		ВызватьИсключение Стр;
	КонецЕсли;	 
	ПолеРеквизит.Активизировать();
	СделатьДействияПриЗаписиВидео("толькомышь");
	СделатьДействияПриЗаписиHTML("толькомышь");
	
	ВыпадающийСписокОткрыт = Истина;
	Попытка
		ВыпадающийСписокОткрыт = ПолеРеквизит.ВыпадающийСписокОткрыт();
	Исключение
		
	КонецПопытки;
		
	Если НЕ ВыпадающийСписокОткрыт Тогда
		ПолеРеквизит.ОткрытьВыпадающийСписок();
	КонецЕсли;	 
	
	Попытка
		ПолеРеквизит.ВвестиТекст(ВыбираемоеЗначение);
		ПолеРеквизит.ОжидатьФормированияВыпадающегоСписка(10);
		ПолеРеквизит.ВыполнитьВыборИзСпискаВыбора(0);
	Исключение
		//обработка для поля, где снят флаг редактирования текста
		ПолеРеквизит.Активизировать();
		Попытка
			ПолеРеквизит.ОткрытьВыпадающийСписок();//на 8.3.6 этот метод не работает для ТЧ
		Исключение
		КонецПопытки;
		
		ПолеРеквизит.ОжидатьФормированияВыпадающегоСписка(10);
		ПолеРеквизит.ВыполнитьВыборИзСпискаВыбора(ВыбираемоеЗначение);
	КонецПопытки;
	
	Ванесса.УстановитьТекстИнструкции("И из списка """ + ИмяРеквизита + """ я выбираю """ + ВыбираемоеЗначение + """");
КонецПроцедуры

&НаКлиенте
//В открытой форме в ТЧ "ТабличнаяЧасть1" из выпадающего списка "Реквизит справочник" я выбираю "ТестовыйЭлемент21"
//@ВОткрытойФормеВТЧИзВыпадающегоСпискаЯВыбираю(Парам01,Парам02,Парам03)
Процедура ВОткрытойФормеВТЧИзВыпадающегоСпискаЯВыбираю(ИмяТЧ,ИмяРеквизита,ВыбираемоеЗначение,ИскатьПоИмени = Ложь) Экспорт
	ВОткрытойФормеВТЧИзВыпадающегоСпискаСЗаголовкомЯВыбираю(ИмяТЧ,ИмяРеквизита,ВыбираемоеЗначение,ИскатьПоИмени);
КонецПроцедуры






&НаКлиенте
//В открытой форме в ТЧ "ТабличнаяЧасть1" из выпадающего списка с заголовком "Реквизит справочник" я выбираю "ТестовыйЭлемент21" с выбором
//@ВОткрытойФормеВТЧИзВыпадающегоСпискаСЗаголовкомЯВыбираюСВыбором(Парам01,Парам02,Парам03)
Процедура ВОткрытойФормеВТЧИзВыпадающегоСпискаСЗаголовкомЯВыбираюСВыбором(ИмяТЧ,ИмяРеквизита,ВыбираемоеЗначение) Экспорт
	//ОкноПриложения         = ПолучитьАктивноеОкноИзКонтекста();
	//ТекущаяФорма           = ОкноПриложения.НайтиОбъект(Тип("ТестируемаяФорма"));
	//ТЧ                     = ТекущаяФорма.НайтиОбъект(Тип("ТестируемаяТаблицаФормы"),,ИмяТЧ);
	ТЧ                     =  НайтиТЧПоИмени(ИмяТЧ);
	ПолеРеквизит           = ТЧ.НайтиОбъект(Тип("ТестируемоеПолеФормы"), ИмяРеквизита);
	Если ПолеРеквизит = Неопределено Тогда
		Стр = "Поле с заголовком <" + ИмяРеквизита + "> не найдено!";
		Сообщить(Стр);
		ВызватьИсключение Стр;
	КонецЕсли;	 
	ПолеРеквизит.Активизировать();
	СделатьДействияПриЗаписиВидео("толькомышь");
	СделатьДействияПриЗаписиHTML("толькомышь");
	
	
	ПолеРеквизит.Выбрать();
	ПолеРеквизит.ОжидатьФормированияВыпадающегоСписка(10);
	ПолеРеквизит.ВыполнитьВыборИзСпискаВыбора(ВыбираемоеЗначение);
КонецПроцедуры

&НаКлиенте
//В открытой форме в ТЧ "ТабличнаяЧасть1" из выпадающего списка "Реквизит справочник" я выбираю "ТестовыйЭлемент21" с выбором
//@ВОткрытойФормеВТЧИзВыпадающегоСпискаЯВыбираюСВыбором(Парам01,Парам02,Парам03)
Процедура ВОткрытойФормеВТЧИзВыпадающегоСпискаЯВыбираюСВыбором(ИмяТЧ,ИмяРеквизита,ВыбираемоеЗначение) Экспорт
	ВОткрытойФормеВТЧИзВыпадающегоСпискаСЗаголовкомЯВыбираюСВыбором(ИмяТЧ,ИмяРеквизита,ВыбираемоеЗначение);
КонецПроцедуры




&НаКлиенте
//В открытой форме в ТЧ "ТабличнаяЧасть1" я изменяю флаг с заголовком "Реквизит булево"
//@ВОткрытойФормеВТЧЯИзменяюФлагСЗаголовком(Парам01,Парам02)
Процедура ВОткрытойФормеВТЧЯИзменяюФлагСЗаголовком(ИмяТЧ,ИмяРеквизита,ИскатьПоИмени = Ложь) Экспорт
	//ОкноПриложения         = ПолучитьАктивноеОкноИзКонтекста();
	//ТекущаяФорма           = ОкноПриложения.НайтиОбъект(Тип("ТестируемаяФорма"));
	//ТЧ                     = ТекущаяФорма.НайтиОбъект(Тип("ТестируемаяТаблицаФормы"),,ИмяТЧ);
	ТЧ                     =  НайтиТЧПоИмени(ИмяТЧ);
	
	Если ИскатьПоИмени Тогда
		ПолеРеквизит = ТЧ.НайтиОбъект(Тип("ТестируемоеПолеФормы"), , ИмяРеквизита);
	Иначе	
		ПолеРеквизит = ТЧ.НайтиОбъект(Тип("ТестируемоеПолеФормы"), ИмяРеквизита);
	КонецЕсли;	 
	
	Если ПолеРеквизит = Неопределено Тогда
		Стр = "Поле с заголовком <" + ИмяРеквизита + "> не найдено!";
		Сообщить(Стр);
		ВызватьИсключение Стр;
	КонецЕсли;	 
	ПолеРеквизит.Активизировать();
	//тут нет активного контрола
	//СделатьДействияПриЗаписиВидео();
	ПолеРеквизит.УстановитьОтметку();
	//СделатьДействияПриЗаписиHTML();
КонецПроцедуры

&НаКлиенте
//В открытой форме в ТЧ "ТабличнаяЧасть1" я изменяю флаг "Реквизит булево"
//@ВОткрытойФормеВТЧЯИзменяюФлаг(Парам01,Парам02)
Процедура ВОткрытойФормеВТЧЯИзменяюФлаг(ИмяТЧ,ИмяРеквизита,ИскатьПоИмени = Ложь) Экспорт
	ВОткрытойФормеВТЧЯИзменяюФлагСЗаголовком(ИмяТЧ,ИмяРеквизита,ИскатьПоИмени);
КонецПроцедуры






&НаКлиенте
//В открытой форме в ТЧ "ТабличнаяЧасть1" я выбираю значение реквизита с заголовком "Реквизит справочник выбор из формы списка" из формы списка
//@ВОткрытойФормеВТЧЯВыбираюЗначениеРеквизитаСЗаголовкомИзФормыСписка(Парам01,Парам02)
Процедура ВОткрытойФормеВТЧЯВыбираюЗначениеРеквизитаСЗаголовкомИзФормыСписка(ИмяТЧ,ИмяРеквизита,ИскатьПоИмени = Ложь) Экспорт
	//ОкноПриложения         = ПолучитьАктивноеОкноИзКонтекста();
	//ТекущаяФорма           = ОкноПриложения.НайтиОбъект(Тип("ТестируемаяФорма"));
	//ТЧ                     = ТекущаяФорма.НайтиОбъект(Тип("ТестируемаяТаблицаФормы"),,ИмяТЧ);
	ТЧ                     =  НайтиТЧПоИмени(ИмяТЧ);
	Если ИскатьПоИмени Тогда
		ПолеРеквизит           = ТЧ.НайтиОбъект(Тип("ТестируемоеПолеФормы"),, ИмяРеквизита);
	Иначе	
		ПолеРеквизит           = ТЧ.НайтиОбъект(Тип("ТестируемоеПолеФормы"), ИмяРеквизита);
	КонецЕсли;	 
	
	Если ПолеРеквизит = Неопределено Тогда
		Стр = "Поле с заголовком <" + ИмяРеквизита + "> не найдено!";
		Сообщить(Стр);
		ВызватьИсключение Стр;
	КонецЕсли;	 
	ПолеРеквизит.Активизировать();
	СделатьДействияПриЗаписиВидео();
	СделатьДействияПриЗаписиHTML();
	
	ТаблицаВРежимеРедактирования = ТЧ.ТекущийРежимРедактирование();
	Если Не ТаблицаВРежимеРедактирования Тогда
		ТЧ.Выбрать();
	КонецЕсли;	 
	
	ПолеРеквизит.Выбрать();
КонецПроцедуры

&НаКлиенте
//В открытой форме в ТЧ "ТабличнаяЧасть1" я выбираю значение реквизита "Реквизит справочник выбор из формы списка" из формы списка
//@ВОткрытойФормеВТЧЯВыбираюЗначениеРеквизитаИзФормыСписка(Парам01,Парам02)
Процедура ВОткрытойФормеВТЧЯВыбираюЗначениеРеквизитаИзФормыСписка(ИмяТЧ,ИмяРеквизита,ИскатьПоИмени = Ложь) Экспорт
	ВОткрытойФормеВТЧЯВыбираюЗначениеРеквизитаСЗаголовкомИзФормыСписка(ИмяТЧ,ИмяРеквизита,ИскатьПоИмени);
КонецПроцедуры







&НаКлиенте
//В открытой форме в ТЧ "ТабличнаяЧасть1" я выбираю значение реквизита с именем "Реквизит справочник выбор из формы списка" из формы списка
//@ВОткрытойФормеВТЧЯВыбираюЗначениеРеквизитаСИменемИзФормыСписка(Парам01,Парам02)
Процедура ВОткрытойФормеВТЧЯВыбираюЗначениеРеквизитаСИменемИзФормыСписка(ИмяТЧ,ИмяРеквизита) Экспорт
	ВОткрытойФормеВТЧЯВыбираюЗначениеРеквизитаСЗаголовкомИзФормыСписка(ИмяТЧ,ИмяРеквизита,Истина);
КонецПроцедуры


&НаКлиенте
//В форме "Справочник1" в ТЧ "ТабличнаяЧасть1" я завершаю редактирование строки
//@ВФормеВТЧЯЗавершаюРедактированиеСтроки(Парам01,Парам02)
Процедура ВФормеВТЧЯЗавершаюРедактированиеСтроки(ИмяФормы,ИмяТЧ) Экспорт
	//ОкноПриложения         = ПолучитьАктивноеОкноИзКонтекста();
	//ТекущаяФорма           = ОкноПриложения.НайтиОбъект(Тип("ТестируемаяФорма"));
	//ТЧ                     = ТекущаяФорма.НайтиОбъект(Тип("ТестируемаяТаблицаФормы"),,ИмяТЧ);
	ТЧ                     =  НайтиТЧПоИмени(ИмяТЧ);
	ТЧ.ЗакончитьРедактированиеСтроки(Ложь);
КонецПроцедуры

&НаКлиенте
//В ТЧ "ТабличнаяЧасть1" я завершаю редактирование строки
//@ВТЧЯЗавершаюРедактированиеСтроки(Парам01)
Процедура ВТЧЯЗавершаюРедактированиеСтроки(ИмяТЧ) Экспорт
	ТЧ =  НайтиТЧПоИмени(ИмяТЧ);
	ТЧ.ЗакончитьРедактированиеСтроки(Ложь);
КонецПроцедуры

&НаКлиенте
//В таблице "ТабличнаяЧасть1" я завершаю редактирование строки
//@ВТаблицеЯЗавершаюРедактированиеСтроки(Парам01)
Процедура ВТаблицеЯЗавершаюРедактированиеСтроки(ИмяТЧ) Экспорт
	ВТЧЯЗавершаюРедактированиеСтроки(ИмяТЧ);
КонецПроцедуры

&НаКлиенте
//Я завершаю редактирование строки
//@ЯЗавершаюРедактированиеСтроки()
Процедура ЯЗавершаюРедактированиеСтроки() Экспорт
	//ОкноПриложения         = ПолучитьАктивноеОкноИзКонтекста();
	//ТекущаяФорма           = ОкноПриложения.НайтиОбъект(Тип("ТестируемаяФорма"));
	//ТЧ                     = ТекущаяФорма.НайтиОбъект(Тип("ТестируемаяТаблицаФормы"),,ИмяТЧ);
	ТЧ                     =  Контекст.ТекущаяТЧ;
	ТЧ.ЗакончитьРедактированиеСтроки(Ложь);
КонецПроцедуры




&НаКлиенте
//В открытой форме в ТЧ "ТабличнаяЧасть1" я нажимаю кнопку выбора у реквизита с заголовком "Реквизит1"
//@ВОткрытойФормеВТЧЯНажимаюКнопкуВыбораУРеквизитаСЗаголовком(Парам01,Парам02)
Процедура ВОткрытойФормеВТЧЯНажимаюКнопкуВыбораУРеквизитаСЗаголовком(ИмяТЧ,ИмяРеквизита,ИскатьПоИмени = Ложь) Экспорт
	ТЧ = НайтиТЧПоИмени(ИмяТЧ);
	
	Если ИскатьПоИмени Тогда
		ПолеРеквизит = ТЧ.НайтиОбъект(Тип("ТестируемоеПолеФормы"), , ИмяРеквизита);
	Иначе	
		ПолеРеквизит = ТЧ.НайтиОбъект(Тип("ТестируемоеПолеФормы"), ИмяРеквизита);
	КонецЕсли;	            
	
	Если ПолеРеквизит = Неопределено Тогда
		Стр = "Поле с заголовком <" + ИмяРеквизита + "> не найдено!";
		Сообщить(Стр);
		ВызватьИсключение Стр;
	КонецЕсли;	 
	
	ПолеРеквизит.Активизировать();
	СделатьДействияПриЗаписиВидео();
	СделатьДействияПриЗаписиHTML();
	ПолеРеквизит.Выбрать();
КонецПроцедуры

&НаКлиенте
//В открытой форме в ТЧ "ТабличнаяЧасть1" я нажимаю кнопку выбора у реквизита "Реквизит1"
//@ВОткрытойФормеВТЧЯНажимаюКнопкуВыбораУРеквизита(Парам01,Парам02)
Процедура ВОткрытойФормеВТЧЯНажимаюКнопкуВыбораУРеквизита(ИмяТЧ,ИмяРеквизита,ИскатьПоИмени = Ложь) Экспорт
	ВОткрытойФормеВТЧЯНажимаюКнопкуВыбораУРеквизитаСЗаголовком(ИмяТЧ,ИмяРеквизита,ИскатьПоИмени);
КонецПроцедуры



&НаКлиенте
//И     В открытой форме в ТЧ  "Список" я перехожу на первую строку
//@ВОткрытойФормеВТЧЯПерехожуНаПервуюСтроку(Парам01)
Процедура ВОткрытойФормеВТЧЯПерехожуНаПервуюСтроку(ИмяТЧ) Экспорт
	ТЧ                     =  НайтиТЧПоИмени(ИмяТЧ);
	ТЧ.ПерейтиКПервойСтроке();
КонецПроцедуры

&НаКлиенте
//И     В ТЧ  "Список" я перехожу на первую строку
//@ВТЧЯПерехожуНаПервуюСтроку(Парам01)
Процедура ВТЧЯПерехожуНаПервуюСтроку(ИмяТЧ) Экспорт
	ВОткрытойФормеВТЧЯПерехожуНаПервуюСтроку(ИмяТЧ);
КонецПроцедуры

&НаКлиенте
//И     В открытой форме в ТЧ  "Список" я перехожу на последнюю строку
//@ВОткрытойФормеВТЧЯПерехожуНаПоследнююСтроку(Парам01)
Процедура ВОткрытойФормеВТЧЯПерехожуНаПоследнююСтроку(ИмяТЧ) Экспорт
	ТЧ                     =  НайтиТЧПоИмени(ИмяТЧ);
	ТЧ.ПерейтиКПоследнейСтроке();
КонецПроцедуры

&НаКлиенте
//И     В ТЧ  "Список" я перехожу на последнюю строку
//@ВТЧЯПерехожуНаПоследнююСтроку(Парам01)
Процедура ВТЧЯПерехожуНаПоследнююСтроку(ИмяТЧ) Экспорт
	ВОткрытойФормеВТЧЯПерехожуНаПоследнююСтроку(ИмяТЧ);
КонецПроцедуры

&НаКлиенте
//И     В открытой форме в ТЧ  "Список" я перехожу на одну строку вверх
//@ВОткрытойФормеВТЧЯПерехожуНаОднуСтрокуВверх(Парам01)
Процедура ВОткрытойФормеВТЧЯПерехожуНаОднуСтрокуВверх(ИмяТЧ) Экспорт
	ТЧ                     =  НайтиТЧПоИмени(ИмяТЧ);
	ТЧ.ПерейтиКПредыдущейСтроке();
КонецПроцедуры




&НаКлиенте
//И     в таблице  "Список" я перехожу на один уровень вниз
//@ВТаблицеЯПерехожуНаОдинУровеньВниз(Парам01)
Процедура ВТаблицеЯПерехожуНаОдинУровеньВниз(ИмяТЧ) Экспорт
	ТЧ =  НайтиТЧПоИмени(ИмяТЧ);
	ТЧ.ПерейтиНаУровеньВниз();
КонецПроцедуры

&НаКлиенте
//И     в таблице  "Список" я перехожу на один уровень вверх
//@ВТаблицеЯПерехожуНаОдинУровеньВверх(Парам01)
Процедура ВТаблицеЯПерехожуНаОдинУровеньВверх(ИмяТЧ) Экспорт
	ТЧ =  НайтиТЧПоИмени(ИмяТЧ);
	ТЧ.ПерейтиНаУровеньВверх();
КонецПроцедуры

&НаКлиенте
//И     в таблице  ""Список"" я начинаю редактирование строки
//@ВТаблицеЯНачинаюРедактированиеСтроки(Парам01)
Процедура ВТаблицеЯНачинаюРедактированиеСтроки(ИмяТЧ) Экспорт
	ТЧ =  НайтиТЧПоИмени(ИмяТЧ);
	
	Если ТЧ.ТекущийРежимРедактирование() Тогда
		ТЧ.ИзменитьСтроку();
	КонецЕсли;	 
КонецПроцедуры






&НаКлиенте
//И     В открытой форме в ТЧ  "Список" я перехожу на одну строку вниз
//@ВОткрытойФормеВТЧЯПерехожуНаОднуСтрокуВниз(Парам01)
Процедура ВОткрытойФормеВТЧЯПерехожуНаОднуСтрокуВниз(ИмяТЧ) Экспорт
	ТЧ                     =  НайтиТЧПоИмени(ИмяТЧ);
	ТЧ.ПерейтиКСледующейСтроке();
КонецПроцедуры

&НаКлиенте
//И     В открытой форме в ТЧ  "Список" я перехожу на одну строку вверх
//@ВТЧЯПерехожуНаОднуСтрокуВверх(Парам01)
Процедура ВОткрытойФормеВТЧЯПерехожуНаОднуСтрокуВверхСВыделением(ИмяТЧ) Экспорт
	ТЧ                     =  НайтиТЧПоИмени(ИмяТЧ);
	ТЧ.ПерейтиКПредыдущейСтроке(Истина);
КонецПроцедуры

&НаКлиенте
//И     В ТЧ  "Список" я перехожу на одну строку вверх
//@ВТЧЯПерехожуНаОднуСтрокуВверхСВыделением(Парам01)
Процедура ВТЧЯПерехожуНаОднуСтрокуВверхСВыделением(ИмяТЧ) Экспорт
	ВОткрытойФормеВТЧЯПерехожуНаОднуСтрокуВверхСВыделением(ИмяТЧ);
КонецПроцедуры

&НаКлиенте
//И     В таблице  "Список" я перехожу на одну строку вверх
//@ВТаблицеЯПерехожуНаОднуСтрокуВверхСВыделением(Парам01)
Процедура ВТаблицеЯПерехожуНаОднуСтрокуВверхСВыделением(ИмяТЧ) Экспорт
	ВТЧЯПерехожуНаОднуСтрокуВверхСВыделением(ИмяТЧ);
КонецПроцедуры

&НаКлиенте
//И     В открытой форме в ТЧ  "Список" я перехожу на одну строку вниз
//@ВОткрытойФормеВТЧЯПерехожуНаОднуСтрокуВниз(Парам01)
Процедура ВОткрытойФормеВТЧЯПерехожуНаОднуСтрокуВнизСВыделением(ИмяТЧ) Экспорт
	ТЧ                     =  НайтиТЧПоИмени(ИмяТЧ);
	ТЧ.ПерейтиКСледующейСтроке(Истина);
КонецПроцедуры

&НаКлиенте
//И     В ТЧ  "Список" я перехожу на одну строку вниз
//ВТЧЯПерехожуНаОднуСтрокуВнизСВыделением(Парам01)
Процедура ВТЧЯПерехожуНаОднуСтрокуВнизСВыделением(ИмяТЧ) Экспорт
	ВОткрытойФормеВТЧЯПерехожуНаОднуСтрокуВнизСВыделением(ИмяТЧ);
КонецПроцедуры

&НаКлиенте
//И     В таблице  "Список" я перехожу на одну строку вниз
//ВТаблицеЯПерехожуНаОднуСтрокуВнизСВыделением(Парам01)
Процедура ВТаблицеЯПерехожуНаОднуСтрокуВнизСВыделением(ИмяТЧ) Экспорт
	ВТЧЯПерехожуНаОднуСтрокуВнизСВыделением(ИмяТЧ);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПроверитьЗначениеРеквизитаСправочника(ИмяСпр,Наименование,ИмяРек,СтроковокПредставление)
	Элем = Справочники[ИмяСпр].НайтиПоНаименованию(Наименование,Истина);
	Если Не ЗначениеЗаполнено(Элем) Тогда
		Возврат Ложь;
	КонецЕсли;	 
	
	Если СокрЛП(Элем[ИмяРек]) <> СтроковокПредставление Тогда
		Возврат Ложь;
	КонецЕсли;	 
	
	Возврат Истина;
КонецФункции	

&НаКлиенте
//И     Есть элемент справочника "Справочник1" с наименованием "Тест" и  реквизитом "Реквизит2" равным "Группа2Элем2"
//@ЕстьЭлементСправочникаСНаименованиемИРеквизитомРавным(Парам01,Парам02,Парам03,Парам04)
Процедура ЕстьЭлементСправочникаСНаименованиемИРеквизитомРавным(ИмяСпр,Наименование,ИмяРек,СтроковокПредставление) Экспорт
	Ванесса.ПроверитьРавенство(ПроверитьЗначениеРеквизитаСправочника(ИмяСпр,Наименование,ИмяРек,СтроковокПредставление),Истина,"Не нашел значение реквизита у спр: ИмяСпр=" + ИмяСпр + ", Наименование=" + Наименование + ", ИмяРек=" + ИмяРек + ", СтроковокПредставление=" + СтроковокПредставление);
КонецПроцедуры





&НаКлиенте
//И     В открытой форме я перехожу к закладке с заголовком "Вспомогательная"
//@ВОткрытойФормеЯПерехожуКЗакладкеСЗаголовком(Парам01)
Процедура ВОткрытойФормеЯПерехожуКЗакладкеСЗаголовком(ИмяЗакладки,ИскатьПоИмени = Ложь) Экспорт
	Нашли = Ложь;
	МассивФорм = НайтиФормыТекущегоОкна();
	Для каждого ТекущаяФорма Из МассивФорм Цикл
		
		Если ИскатьПоИмени Тогда
			ПолеЗакладка           = ТекущаяФорма.НайтиОбъект(Тип("ТестируемаяГруппаФормы"),, ИмяЗакладки);
		Иначе
			ПолеЗакладка           = ТекущаяФорма.НайтиОбъект(Тип("ТестируемаяГруппаФормы"), ИмяЗакладки);
		КонецЕсли;	 
		
		Если ПолеЗакладка = Неопределено Тогда
			Продолжить;
		КонецЕсли;	 
		
		//Ванесса.ПосмотретьЗначение(ТекущаяФорма,Истина);
		
		ПолеЗакладка.Активизировать();
		//СделатьДействияПриЗаписиВидео();
		//СделатьДействияПриЗаписиHTML();
		
		
		Нашли = Истина;
		Прервать;
	КонецЦикла;
	
	Если НЕ Нашли Тогда
		Если ИскатьПоИмени Тогда
			Стр = "Закладка с именем <" + ИмяЗакладки + "> не найдена!";
		Иначе	
			Стр = "Закладка с заголовком <" + ИмяЗакладки + "> не найдена!";
		КонецЕсли;	 
		
		Сообщить(Стр);
		ВызватьИсключение Стр;
	КонецЕсли;	 
	
	
КонецПроцедуры

&НаКлиенте
//И     В открытой форме я перехожу к закладке "Вспомогательная"
//@ВОткрытойФормеЯПерехожуКЗакладке(Парам01)
Процедура ВОткрытойФормеЯПерехожуКЗакладке(ИмяЗакладки,ИскатьПоИмени = Ложь) Экспорт
	ВОткрытойФормеЯПерехожуКЗакладкеСЗаголовком(ИмяЗакладки,ИскатьПоИмени);
КонецПроцедуры







&НаКлиенте
//И     В открытой форме я перехожу к закладке с именем "Вспомогательная"
//@ВОткрытойФормеЯПерехожуКЗакладкеСИменем(Парам01)
Процедура ВОткрытойФормеЯПерехожуКЗакладкеСИменем(ИмяЗакладки) Экспорт
	ВОткрытойФормеЯПерехожуКЗакладкеСЗаголовком(ИмяЗакладки,Истина);
КонецПроцедуры






&НаКлиенте
//И     В открытой форме я сворачиваю группу с заголовком "СворачиваемаяГруппа"
//@ВОткрытойФормеЯСворачиваюГруппуСЗаголовком(Парам01)
Процедура ВОткрытойФормеЯСворачиваюГруппуСЗаголовком(ИмяГруппы,ИскатьПоИмени = Ложь) Экспорт
	Нашли = Ложь;
	МассивФорм = НайтиФормыТекущегоОкна();
	Для каждого ТекущаяФорма Из МассивФорм Цикл
		Если ИскатьПоИмени Тогда
			Группа        = ТекущаяФорма.НайтиОбъект(Тип("ТестируемаяГруппаФормы"),, ИмяГруппы);
		Иначе	
			Группа        = ТекущаяФорма.НайтиОбъект(Тип("ТестируемаяГруппаФормы"), ИмяГруппы);
		КонецЕсли;	 
		
		Если Группа = Неопределено Тогда
			Продолжить;
		КонецЕсли;	 
		
		Группа.Активизировать();
		СделатьДействияПриЗаписиВидео();
		СделатьДействияПриЗаписиHTML();
		Попытка
			Группа.Свернуть();
		Исключение
		КонецПопытки;
		
		
		Нашли = Истина;
		Прервать;
	КонецЦикла;
	
	Если НЕ Нашли Тогда
		Если ИскатьПоИмени Тогда
			Стр = "Группа с именем <" + ИмяГруппы + "> не найдена!";
		Иначе	
			Стр = "Группа с заголовком <" + ИмяГруппы + "> не найдена!";
		КонецЕсли;	 
		
		Сообщить(Стр);
		ВызватьИсключение Стр;
	КонецЕсли;	 
	
КонецПроцедуры

&НаКлиенте
//И     В открытой форме я сворачиваю группу "СворачиваемаяГруппа"
//@ВОткрытойФормеЯСворачиваюГруппу(Парам01)
Процедура ВОткрытойФормеЯСворачиваюГруппу(ИмяГруппы,ИскатьПоИмени = Ложь) Экспорт
	ВОткрытойФормеЯСворачиваюГруппуСЗаголовком(ИмяГруппы,ИскатьПоИмени);
КонецПроцедуры






&НаКлиенте
//И     В открытой форме я сворачиваю группу с именем "СворачиваемаяГруппа"
//@ВОткрытойФормеЯСворачиваюГруппуСИменем(Парам01)
Процедура ВОткрытойФормеЯСворачиваюГруппуСИменем(ИмяГруппы) Экспорт
	ВОткрытойФормеЯСворачиваюГруппуСЗаголовком(ИмяГруппы,Истина);	
КонецПроцедуры



&НаКлиенте
//И     В открытой форме я разворачиваю группу с заголовком "СворачиваемаяГруппа"
//@ВОткрытойФормеЯРазворачиваюГруппуСЗаголовком(Парам01)
Процедура ВОткрытойФормеЯРазворачиваюГруппуСЗаголовком(ИмяГруппы,ИскатьПоИмени = Ложь) Экспорт
	
	Нашли = Ложь;
	МассивФорм = НайтиФормыТекущегоОкна();
	Для каждого ТекущаяФорма Из МассивФорм Цикл
		Если ИскатьПоИмени Тогда
			Группа        = ТекущаяФорма.НайтиОбъект(Тип("ТестируемаяГруппаФормы"),, ИмяГруппы);
		Иначе
			Группа        = ТекущаяФорма.НайтиОбъект(Тип("ТестируемаяГруппаФормы"), ИмяГруппы);
		КонецЕсли;	 
		
		Если Группа = Неопределено Тогда
			Продолжить;
		КонецЕсли;	 
		
		Группа.Активизировать();
		СделатьДействияПриЗаписиВидео();
		СделатьДействияПриЗаписиHTML();
		Попытка
			Группа.Развернуть();
		Исключение
		КонецПопытки;
		
		
		Нашли = Истина;
		Прервать;
	КонецЦикла;
	
	Если НЕ Нашли Тогда
		Если ИскатьПоИмени Тогда
			Стр = "Группа с именем <" + ИмяГруппы + "> не найдена!";
		Иначе	
			Стр = "Группа с заголовком <" + ИмяГруппы + "> не найдена!";
		КонецЕсли;	 
		
		Сообщить(Стр);
		ВызватьИсключение Стр;
	КонецЕсли;	 
	
	
КонецПроцедуры

&НаКлиенте
//И     В открытой форме я разворачиваю группу "СворачиваемаяГруппа"
//@ВОткрытойФормеЯРазворачиваюГруппу(Парам01)
Процедура ВОткрытойФормеЯРазворачиваюГруппу(ИмяГруппы,ИскатьПоИмени = Ложь) Экспорт
	ВОткрытойФормеЯРазворачиваюГруппуСЗаголовком(ИмяГруппы,ИскатьПоИмени);
КонецПроцедуры







&НаКлиенте
//И     В открытой форме я разворачиваю группу с именем "СворачиваемаяГруппа"
//@ВОткрытойФормеЯРазворачиваюГруппуСИменем(Парам01)
Процедура ВОткрытойФормеЯРазворачиваюГруппуСИменем(ИмяГруппы) Экспорт
	ВОткрытойФормеЯРазворачиваюГруппуСЗаголовком(ИмяГруппы,Истина);
КонецПроцедуры



&НаКлиенте
//И     В открытой форме я нажимаю на гиперссылку с заголовком "Гиперссылка"
//@ВОткрытойФормеЯНажимаюНаГиперссылкуСЗаголовком(Парам01)
Процедура ВОткрытойФормеЯНажимаюНаГиперссылкуСЗаголовком(ИмяРеквизита,ИскатьПоИмени = Ложь) Экспорт
	
	Нашли = Ложь;
	МассивФорм = НайтиФормыТекущегоОкна();
	Для каждого ТекущаяФорма Из МассивФорм Цикл
		
		Если ИскатьПоИмени  Тогда
			ПолеГиперссылка = ТекущаяФорма.НайтиОбъект(Тип("ТестируемоеПолеФормы"),,ИмяРеквизита);
			Если ПолеГиперссылка = Неопределено Тогда
				ПолеГиперссылка = ТекущаяФорма.НайтиОбъект(Тип("ТестируемаяДекорацияФормы"),,ИмяРеквизита);
			КонецЕсли;	 
		Иначе
			ПолеГиперссылка = ТекущаяФорма.НайтиОбъект(Тип("ТестируемоеПолеФормы"),ИмяРеквизита);
			Если ПолеГиперссылка = Неопределено Тогда
				ПолеГиперссылка = ТекущаяФорма.НайтиОбъект(Тип("ТестируемаяДекорацияФормы"),ИмяРеквизита);
			КонецЕсли;	 
		КонецЕсли;	 
		
		Если ПолеГиперссылка = Неопределено Тогда
			Продолжить;
		КонецЕсли;	 
		
		ПолеГиперссылка.Активизировать();
		СделатьДействияПриЗаписиВидео();
		СделатьДействияПриЗаписиHTML();
		ПолеГиперссылка.Нажать();
		
		Нашли = Истина;
		Прервать;
	КонецЦикла;
	
	Если НЕ Нашли Тогда
		Если ИскатьПоИмени Тогда
			Стр = "Гиперссылка с именем <" + ИмяРеквизита + "> не найдена!";
		Иначе	
			Стр = "Гиперссылка с заголовком <" + ИмяРеквизита + "> не найдена!";
		КонецЕсли;	 
		
		Сообщить(Стр);
		ВызватьИсключение Стр;
	КонецЕсли;	 

		
КонецПроцедуры

&НаКлиенте
//И     В открытой форме я нажимаю на гиперссылку "Гиперссылка"
//@ВОткрытойФормеЯНажимаюНаГиперссылку(Парам01)
Процедура ВОткрытойФормеЯНажимаюНаГиперссылку(ИмяРеквизита,ИскатьПоИмени = Ложь) Экспорт
	ВОткрытойФормеЯНажимаюНаГиперссылкуСЗаголовком(ИмяРеквизита,ИскатьПоИмени);
КонецПроцедуры






&НаКлиенте
//И     В открытой форме я нажимаю на гиперссылку с именем "Гиперссылка"
//@ВОткрытойФормеЯНажимаюНаГиперссылкуСИменем(Парам01)
Процедура ВОткрытойФормеЯНажимаюНаГиперссылкуСИменем(ИмяРеквизита) Экспорт
	ВОткрытойФормеЯНажимаюНаГиперссылкуСЗаголовком(ИмяРеквизита,Истина);
КонецПроцедуры



&НаКлиенте
//Тогда элемент формы "Наименование" стал равен "111"
//@ЭлементФормыСталРавен(Парам01,Парам02)
Процедура ЭлементФормыСталРавен(ИмяЭлемента,СтроковоеПредставление,ИскатьПоИмени = Ложь) Экспорт
	ЭлементФормы        = Ванесса.НайтиРеквизитОткрытойФормыПоЗаголовку(ИмяЭлемента,ИскатьПоИмени);
	ПредставлениеДанных = Ванесса.ПолучитьПредставлениеДанныхЭлементаФормы(ЭлементФормы);
	
	Если ПредставлениеДанных <> СтроковоеПредставление Тогда
		ВызватьИсключение "Для элемента формы " + ИмяЭлемента + " текущее значение равно <" + ПредставлениеДанных + ">, а ожидали <" + СтроковоеПредставление + ">";
	КонецЕсли;	 
КонецПроцедуры

&НаКлиенте
//Тогда элемент формы с именем "Наименование" стал равен "111"
//@ЭлементФормыСИменемСталРавен(Парам01,Парам02)
Процедура ЭлементФормыСИменемСталРавен(ИмяЭлемента,СтроковоеПредставление) Экспорт
	ЭлементФормыСталРавен(ИмяЭлемента,СтроковоеПредставление,Истина);
КонецПроцедуры



&НаКлиенте
//И я активизирую поле "Имя поля"
//@ЯАктивизируюПоле(Парам01)
Процедура ЯАктивизируюПоле(ИмяЭлемента,ИскатьПоИмени = Ложь) Экспорт
	ЭлементФормы = Ванесса.НайтиРеквизитОткрытойФормыПоЗаголовку(ИмяЭлемента,ИскатьПоИмени);
	ЭлементФормы.Активизировать();        
КонецПроцедуры

&НаКлиенте
//И я активизирую поле с именем "Имя поля"
//@ЯАктивизируюПолеСИменем(Парам01,Парам02)
Процедура ЯАктивизируюПолеСИменем(ИмяЭлемента,ИскатьПоИмени = Ложь) Экспорт
	ЯАктивизируюПоле(ИмяЭлемента,Истина);
КонецПроцедуры



//&НаКлиенте
////Тогда элемент формы "Наименование" стал равен "111"
////@ЭлементТаблицыСталРавен(Парам01,Парам02,Парам03)
//Процедура ЭлементТаблицыСталРавен(ИмяТЧ,ИмяЭлемента,СтроковоеПредставление,ИскатьПоИмени = Ложь) Экспорт
//	ТЧ                  = Ванесса.НайтиТЧПоИмени(ИмяТЧ);
//	ПредставлениеДанных = ТЧ.ПолучитьТекстЯчейки(ИмяЭлемента);
//	
//	
//	Если ПредставлениеДанных <> СтроковоеПредставление Тогда
//		ВызватьИсключение "Для элемента формы " + ИмяЭлемента + " текущее значение равно " + ПредставлениеДанных + ", а ожидали " + СтроковоеПредставление;
//	КонецЕсли;	 
//КонецПроцедуры

&НаКлиенте
//Тогда текст ячейки таблицы "Таблица" "Наименование" стал равен "111"
//@ТекстЯчейкиТаблицыСталРавен(Парам01,Парам02,Парам03)
Процедура ТекстЯчейкиТаблицыСталРавен(ИмяТЧ,ИмяЭлемента,СтроковоеПредставление) Экспорт
	ТЧ                  = Ванесса.НайтиТЧПоИмени(ИмяТЧ);
	ПредставлениеДанных = ТЧ.ПолучитьТекстЯчейки(ИмяЭлемента);
	
	Если ПредставлениеДанных <> СтроковоеПредставление Тогда
		ВызватьИсключение "Для ячейки <" + ИмяЭлемента + "> таблицы <" + ИмяТЧ + "> текущее значение равно <" + ПредставлениеДанных + ">, а ожидали <" + СтроковоеПредставление + ">";
	КонецЕсли;	 
КонецПроцедуры


&НаКлиенте
//Тогда текст ячейки таблицы "Таблица" "Наименование" стал равен "111"
//@ТекстТекущейЯчейкиТаблицыСталРавен(Парам01,Парам02)
Процедура ТекстТекущейЯчейкиТаблицыСталРавен(ИмяТЧ,СтроковоеПредставление) Экспорт
	ТЧ                  = Ванесса.НайтиТЧПоИмени(ИмяТЧ);
	ПредставлениеДанных = ТЧ.ПолучитьТекстЯчейки();
	
	Если ПредставлениеДанных <> СтроковоеПредставление Тогда
		ВызватьИсключение "Для текущей ячейки таблицы <" + ИмяТЧ + "> текущее значение равно <" + ПредставлениеДанных + ">, а ожидали <" + СтроковоеПредставление + ">";
	КонецЕсли;	 
КонецПроцедуры





&НаКлиенте
//И поле "Имя поля" заполнено
//@ПолеЗаполнено(Парам01)
Процедура ПолеЗаполнено(ИмяЭлемента,ИскатьПоИмени = Ложь) Экспорт
	Значение = Ванесса.ПолучитьЗначениеРеквизитаОткрытойФормыПоЗаголовку(ИмяЭлемента,ИскатьПоИмени);
	Если Не ЗначениеЗаполнено(Значение) Тогда
		ВызватьИсключение "Ожидали, что поле с заголовком <" + ИмяЭлемента + "> будет заполнено, но оно пустое.";
	КонецЕсли;	 
КонецПроцедуры

&НаКлиенте
Функция ПолучитьСтрокиИзТаблицыTestClient(ТЧ)
	ТЧ.ПерейтиКПервойСтроке();//чтобы проверить, что строки вообще есть
	ТекЭлемент = ТЧ.ПолучитьТекстЯчейки();//чтобы проверить, что строки вообще есть
	
	ТЧ.ВыделитьВсеСтроки();
	ЗначениеТЧ = ТЧ.ПолучитьВыделенныеСтроки();
	Возврат ЗначениеТЧ;
КонецФункции	

&НаКлиенте
//И     таблица формы с именем ""ТабличнаяЧасть1"" стала равной:
//@ТаблицаФормыСИменемСталаРавной(Парам01,ТабПарам)
Процедура ТаблицаФормыСИменемСталаРавной(ИмяТЧ,ТабПарам) Экспорт
	ТЧ =  НайтиТЧПоИмени(ИмяТЧ);
	//ТЧ.Активизировать();
	
	
	ЗначениеТЧ = Ванесса.ПолучитьЗначениеТестируемаяТаблицаФормы(ТЧ);
	
	//ПромСтрук = Новый Структура;
	//ПромСтрук.Вставить("ТабПарам",ТабПарам);
	//ПромСтрук.Вставить("ЗначениеТЧ",ЗначениеТЧ);
	//Ванесса.ПосмотретьЗначение(ПромСтрук,Истина);
	
	КолСтрок = ТабПарам.Количество()-1;//без шапки
	Если ЗначениеТЧ.Количество() <> КолСтрок Тогда
		ВызватьИсключение "ТЧ " + ИмяТЧ + " не соответствует эталону. Ожидали " + КолСтрок + " строк, а в ней " + ЗначениеТЧ.Количество() + " строк.";
	КонецЕсли;	 
	
	
	СтрокаШапки = ТабПарам[0];
	
	Для Ккк = 1 По ТабПарам.Количество()-1 Цикл //в первой строке шапка
		СтрСтарое  = ТабПарам[Ккк];
		СтрНовое   = ЗначениеТЧ[Ккк-1];
		
		Для каждого Колонка Из СтрокаШапки Цикл
			ИмяКолонкиСтарое = СтрокаШапки[Колонка.Ключ];
			
			
			ЗначСтарое = СтрСтарое[Колонка.Ключ];
			Если ЗначСтарое = "*" Тогда
				Продолжить;
			КонецЕсли;	 
			
			ЗначНовое  = СтрНовое[ИмяКолонкиСтарое];
			
			Если ЗначНовое <> ЗначСтарое Тогда
				ВызватьИсключение "ТЧ " + ИмяТЧ + ". Строка № " + (Ккк) + ". Колонка " + ИмяКолонкиСтарое + ". Ожидали <" + ЗначСтарое + ">, а получили <" + ЗначНовое + ">";
			КонецЕсли;	 
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
//Тогда таблица формы с именем "ТабличнаяЧасть1" содержит изменения:
//@ТаблицаФормыСИменемСталаРавной(Парам01,ТабПарам)
Процедура ТаблицаФормыСИменемСодержитИзменения(ИмяТЧ,ТабПарам) Экспорт
	ТЧ =  НайтиТЧПоИмени(ИмяТЧ);
	//ТЧ.Активизировать();
	
	ЗначениеТЧ = ПолучитьСтрокиИзТаблицыTestClient(ТЧ);
	
	КолСтрок = ТабПарам.Количество()-1;//без шапки
	Если ЗначениеТЧ.Количество() <> КолСтрок Тогда
		ВызватьИсключение "ТЧ " + ИмяТЧ + " не соответствует эталону. Ожидали " + КолСтрок + " строк, а в ней " + ЗначениеТЧ.Количество() + " строк.";
	КонецЕсли;	 
	
	
	СтрокаШапки = ТабПарам[0];
	
	Для Ккк = 1 По ТабПарам.Количество()-1 Цикл //в первой строке шапка
		СтрСтарое  = ТабПарам[Ккк];
		СтрНовое   = ЗначениеТЧ[Ккк-1];
		
		Для каждого Колонка Из СтрокаШапки Цикл
			ИмяКолонкиСтарое = СтрокаШапки[Колонка.Ключ];
			
			
			ЗначСтарое = СтрСтарое[Колонка.Ключ];
			Если ЗначСтарое = "*" Тогда
				Продолжить;
			КонецЕсли;	 
			
			ЗначНовое  = СтрНовое[ИмяКолонкиСтарое];
			
			Если ЗначНовое <> ЗначСтарое Тогда
				ВызватьИсключение "ТЧ " + ИмяТЧ + ". Строка № " + (Ккк) + ". Колонка " + ИмяКолонкиСтарое + ". Ожидали " + ЗначСтарое + ", а получили " + ЗначНовое;
			КонецЕсли;	 
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция УбратьВсеЗапрещенныеСимволы(Знач Стр)
	
	Стр = СтрЗаменить(Стр,"""","");
	ЗапрещенныеСимволы = " <>.,\/|':;!№%?*()@#$%^&*+-`~";
	
	Для НомерСимвола = 1 По СтрДлина(ЗапрещенныеСимволы) Цикл
		ЗапрещенныйСимвол = Сред(ЗапрещенныеСимволы, НомерСимвола, 1);
		Стр = СтрЗаменить(Стр, ЗапрещенныйСимвол, "_");
	КонецЦикла;
		
	Возврат Стр;
	
КонецФункции

&НаСервере
Функция ПолучитьТЗПроверяемыхДанных(ТабПарам)

	СтрокаШапки = ТабПарам[0];
	
	ТЗБыло = Новый ТаблицаЗначений;
	Для каждого Колонка Из СтрокаШапки Цикл
		ИмяКолонкиСтарое = УбратьВсеЗапрещенныеСимволы(СтрокаШапки[Колонка.Ключ]);
		Попытка
			ТЗБыло.Колонки.Добавить(ИмяКолонкиСтарое, Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(1000)));
		Исключение
			ВызватьИсключение "В эталонной таблице существуют две колонки с одинаковым заголовком: " + СтрокаШапки[Колонка.Ключ];
		КонецПопытки;
	КонецЦикла;
	
	Для СтрокаБыло = 1 По ТабПарам.Количество()-1 Цикл //в первой строке шапка
		СтрокаТЗБыло = ТЗБыло.Добавить();
		Для каждого Колонка Из СтрокаШапки Цикл
			ИмяКолонкиСтарое = УбратьВсеЗапрещенныеСимволы(СтрокаШапки[Колонка.Ключ]);
			ЗначениеБыло = Неопределено;
			ТабПарам[СтрокаБыло].Свойство(Колонка.Ключ, ЗначениеБыло);
			СтрокаТЗБыло[ИмяКолонкиСтарое] = ЗначениеБыло;
		КонецЦикла;
	КонецЦикла;
	
	Возврат ТЗБыло;

КонецФункции // ПолучитьТЗПроверяемыхДанных(ТЗБыло)()

&НаСервере
Функция ПолучитьТЗТекущихДанных(ЗначениеТЧ)

	ТЗСтало = Новый ТаблицаЗначений;
	
	// создаем колонки
	Для каждого Колонка Из ЗначениеТЧ[0] Цикл
		Попытка
			ТЗСтало.Колонки.Добавить(УбратьВсеЗапрещенныеСимволы(Колонка.Ключ), Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(1000)));
		Исключение
			ВызватьИсключение "В результирующей таблице существуют две колонки с одинаковым заголовком: " + Колонка.Ключ;
		КонецПопытки;
	КонецЦикла;
	
	// создаем строки
	Для каждого СтрокаКолонки Из ЗначениеТЧ Цикл
		СтрокаТЗСтало = ТЗСтало.Добавить();
		Для каждого Колонка Из СтрокаКолонки Цикл
			СтрокаТЗСтало[УбратьВсеЗапрещенныеСимволы(Колонка.Ключ)] = Колонка.Значение;
		КонецЦикла;
	КонецЦикла;
	
	Возврат ТЗСтало;

КонецФункции // ПолучитьТЗТекущихДанных(ЗначениеТЧ)

&НаСервере
Функция ПроизвестиСравнениеТаблицНаСервере(ИмяТЧ, ТабПарам, ЗначениеТЧ)
	Отказ = Ложь;
	
	// преобразовать в Таблицу Значений
	ТЗБыло  = ПолучитьТЗПроверяемыхДанных(ТабПарам);
	ТЗСтало = ПолучитьТЗТекущихДанных(ЗначениеТЧ);
	
	// начинаем сравнение
	Для НомерСтроки = 0 По ТЗБыло.Количество()-1 Цикл
		СтрокаТЗБыло = ТЗБыло[НомерСтроки];
		Построитель = Новый ПостроительЗапроса;
		Построитель.ИсточникДанных = Новый ОписаниеИсточникаДанных(ТЗСтало);
		Для каждого Колонка Из ТЗБыло.Колонки Цикл
			ЗначениеПоиска = СтрокаТЗБыло[Колонка.Имя];
			Если Не ЗначениеЗаполнено(ЗначениеПоиска) Или СокрЛП(ЗначениеПоиска) = "*" Тогда
				Продолжить;
			КонецЕсли;
			
			тОтбор = Построитель.Отбор.Добавить(Колонка.Имя);
			тОтбор.Использование = Истина;
			Если Сред(ЗначениеПоиска, СтрДлина(ЗначениеПоиска), 1) = "*" Тогда
				тОтбор.Значение     = Сред(ЗначениеПоиска, 1, СтрДлина(ЗначениеПоиска) - 1);
				тОтбор.ВидСравнения = ВидСравнения.Содержит;
			Иначе
				тОтбор.Значение     = ЗначениеПоиска;
				тОтбор.ВидСравнения = ВидСравнения.Равно;
			КонецЕсли;
		КонецЦикла;
		
		Построитель.Выполнить();
		ТабРезультат = Построитель.Результат.Выгрузить();		
		
		Если ТабРезультат.Количество() = 0 Тогда
			Сообщить("ТЧ " + ИмяТЧ + ". Строка № " + (НомерСтроки + 1) + " не найдена в табличной части формы");
			Отказ = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Отказ;

КонецФункции

&НаКлиенте
//Тогда таблица формы с именем "ТабличнаяЧасть1" содержит строки:
//@ТаблицаФормыСИменемСодержитСтроки(ИмяТЧ,ТабПарам)
Процедура ТаблицаФормыСИменемСодержитСтроки(ИмяТЧ,ТабПарам) Экспорт
	ТЧ =  НайтиТЧПоИмени(ИмяТЧ);
	
	ЗначениеТЧ = ПолучитьСтрокиИзТаблицыTestClient(ТЧ);
	
	Если ТабПарам.Количество() < 2 Тогда	// шапка + строка данных
		ВызватьИсключение "Должны быть переданы минимум 2 строки. Первая строка с именами колонок, вторая и следующие - данные для проверки.";		
	КонецЕсли;
	
	Отказ = ПроизвестиСравнениеТаблицНаСервере(ИмяТЧ, ТабПарам, ЗначениеТЧ);
	
	Если Отказ Тогда
		ВызватьИсключение "Одна или несколько строк эталонной таблицы не найдена в табличной части формы";
	КонецЕсли;
	
КонецПроцедуры

//окончание текста модуля


&НаКлиенте
//Когда В панели разделов я выбираю "Склады"
//@ВПанелиРазделовЯВыбираю(Парам01)
Процедура ВПанелиРазделовЯВыбираю(ИмяКнопки) Экспорт
	ОкноПриложенияОсновноеCommandInterface = КонтекстСохраняемый.ГлавноеОкноТестируемого.ПолучитьКомандныйИнтерфейс();
	//ОкноПриложенияОсновноеCommandInterface = КонтекстСохраняемый.ОкноПриложенияОсновноеCommandInterface;
	ПодчиненныеОбъекты = ОкноПриложенияОсновноеCommandInterface.ПолучитьПодчиненныеОбъекты();
	ПанельРазделов = Неопределено;
	Для каждого Элем Из ПодчиненныеОбъекты Цикл
		Если НРег(Элем.ТекстЗаголовка) = НРег("Панель разделов") Тогда
			ПанельРазделов = Элем;
		КонецЕсли;	 
	КонецЦикла;
	
	Если ПанельРазделов = Неопределено Тогда
		ВызватьИсключение "Не нашли панель разделов!";
	КонецЕсли;	 
	
	
	КнопкаКомандногоИнтерфейса = ПанельРазделов.НайтиОбъект(Тип("ТестируемаяКнопкаКомандногоИнтерфейса"), ИмяКнопки,,10);
	Если КнопкаКомандногоИнтерфейса = Неопределено Тогда
		Стр = "Кнопка панели разделов <" + ИмяКнопки + "> не найдена!";
		Сообщить(Стр);
		ВызватьИсключение Стр;
	КонецЕсли;	 
	КнопкаКомандногоИнтерфейса.Нажать();
	
	//Ванесса.ПосмотретьЗначение(ПодчиненныеОбъекты,Истина);
	//КнопкаКомандногоИнтерфейса.Нажать();
КонецПроцедуры

&НаКлиенте
//И     В панели функций я выбираю "Склады"
//@ВПанелиФункцийЯВыбираю(Парам01)
Процедура ВПанелиФункцийЯВыбираю(ИмяКнопки) Экспорт
	ОкноПриложенияОсновноеCommandInterface = КонтекстСохраняемый.ГлавноеОкноТестируемого.ПолучитьКомандныйИнтерфейс();
	//ОкноПриложенияОсновноеCommandInterface = КонтекстСохраняемый.ОкноПриложенияОсновноеCommandInterface;
	ПодчиненныеОбъекты = ОкноПриложенияОсновноеCommandInterface.ПолучитьПодчиненныеОбъекты();
	//Ванесса.ПосмотретьЗначение(ПодчиненныеОбъекты,Истина);
	МенюФункций                = Неопределено;
	МенюФункцийТекущегоРаздела = Неопределено;
	Для каждого Элем Из ПодчиненныеОбъекты Цикл
		Если НРег(Элем.ТекстЗаголовка) = НРег("Меню функций") Тогда
			МенюФункций = Элем;
		КонецЕсли;	 
		Если НРег(Элем.ТекстЗаголовка) = НРег("Панель функций текущего раздела") Тогда
			МенюФункцийТекущегоРаздела = Элем;
			Прервать;
		КонецЕсли;	 
	КонецЦикла;
	
	Если (МенюФункций = Неопределено) и (МенюФункцийТекущегоРаздела = Неопределено) Тогда
		ВызватьИсключение "Не нашли меню функций раздела!";
	КонецЕсли;	 
	
	
	Если МенюФункций <> Неопределено Тогда
		КнопкаКомандногоИнтерфейса = МенюФункций.НайтиОбъект(Тип("ТестируемаяКнопкаКомандногоИнтерфейса"), ИмяКнопки,,10);
	КонецЕсли;	 
	
	Если КнопкаКомандногоИнтерфейса = Неопределено Тогда
		Если МенюФункцийТекущегоРаздела <> Неопределено Тогда
			КнопкаКомандногоИнтерфейса = МенюФункцийТекущегоРаздела.НайтиОбъект(Тип("ТестируемаяКнопкаКомандногоИнтерфейса"), ИмяКнопки,,10);
		КонецЕсли;	 
	КонецЕсли;	 
	
	Если КнопкаКомандногоИнтерфейса = Неопределено Тогда
		Стр = "Команда меню <" + ИмяКнопки + "> не найдена в панели функций!";
		Сообщить(Стр);
		ВызватьИсключение Стр;
	КонецЕсли;	 
	
	КнопкаКомандногоИнтерфейса.Нажать();
	
	//Ванесса.ПосмотретьЗначение(ПодчиненныеОбъекты,Истина);
	//КнопкаКомандногоИнтерфейса.Нажать();
КонецПроцедуры

&НаКлиенте
//Когда В панели открытых я выбираю "Склады"
//@ВПанелиОткрытыхЯВыбираю(Парам01)
Процедура ВПанелиОткрытыхЯВыбираю(ИмяКнопки) Экспорт
	ОкноПриложенияОсновноеCommandInterface = КонтекстСохраняемый.ГлавноеОкноТестируемого.ПолучитьКомандныйИнтерфейс();
	//ОкноПриложенияОсновноеCommandInterface = КонтекстСохраняемый.ОкноПриложенияОсновноеCommandInterface;
	ПодчиненныеОбъекты = ОкноПриложенияОсновноеCommandInterface.ПолучитьПодчиненныеОбъекты();
	ПанельРазделов = Неопределено;
	Для каждого Элем Из ПодчиненныеОбъекты Цикл
		Если НРег(Элем.ТекстЗаголовка) = НРег("Панель открытых") Тогда
			ПанельРазделов = Элем;
		КонецЕсли;	 
	КонецЦикла;
	
	Если ПанельРазделов = Неопределено Тогда
		ВызватьИсключение "Не нашли панель открытых окон!";
	КонецЕсли;	 
	
	
	КнопкаКомандногоИнтерфейса = ПанельРазделов.НайтиОбъект(Тип("ТестируемаяКнопкаКомандногоИнтерфейса"), ИмяКнопки,,10);
	Если КнопкаКомандногоИнтерфейса = Неопределено Тогда
		Стр = "Кнопка панели открытых окон <" + ИмяКнопки + "> не найдена!";
		Сообщить(Стр);
		ВызватьИсключение Стр;
	КонецЕсли;	 
	КнопкаКомандногоИнтерфейса.Нажать();
	
	//Ванесса.ПосмотретьЗначение(ПодчиненныеОбъекты,Истина);
	//КнопкаКомандногоИнтерфейса.Нажать();
КонецПроцедуры






&НаКлиенте
//И     В открытой форме я нажимаю кнопку выбора у поля с заголовком "Реквизит2"
//@ВОткрытойФормеЯНажимаюКнопкуВыбораУПоляСЗаголовком(Парам01)
Процедура ВОткрытойФормеЯНажимаюКнопкуВыбораУПоляСЗаголовком(ИмяРеквизита,ИскатьПоИмени = Ложь) Экспорт
	Нашли = Ложь;
	МассивФорм = НайтиФормыТекущегоОкна();
	Для каждого ТекущаяФорма Из МассивФорм Цикл
		Если ИскатьПоИмени Тогда
			Поле         = ТекущаяФорма.НайтиОбъект(Тип("ТестируемоеПолеФормы"),,ИмяРеквизита);
		Иначе
			Поле         = ТекущаяФорма.НайтиОбъект(Тип("ТестируемоеПолеФормы"),ИмяРеквизита);
		КонецЕсли;	 
		Если Поле = Неопределено Тогда
			Продолжить;
		КонецЕсли;	 
		
		Поле.Активизировать();
		СделатьДействияПриЗаписиВидео();
		СделатьДействияПриЗаписиHTML();
		Поле.Выбрать();
	
		Нашли = Истина;
		Прервать;
	КонецЦикла;
	
	Если НЕ Нашли Тогда
		Если ИскатьПоИмени Тогда
			Стр = "Поле с именем <" + ИмяРеквизита + "> не найдено!";
		Иначе	
			Стр = "Поле с заголовком <" + ИмяРеквизита + "> не найдено!";
		КонецЕсли;	 
		
		Сообщить(Стр);
		ВызватьИсключение Стр;
	КонецЕсли;	 
	
КонецПроцедуры

&НаКлиенте
//И     В открытой форме я нажимаю кнопку выбора у поля "Реквизит2"
//@ВОткрытойФормеЯНажимаюКнопкуВыбораУПоля(Парам01)
Процедура ВОткрытойФормеЯНажимаюКнопкуВыбораУПоля(ИмяРеквизита,ИскатьПоИмени = Ложь) Экспорт
	ВОткрытойФормеЯНажимаюКнопкуВыбораУПоляСЗаголовком(ИмяРеквизита,ИскатьПоИмени);
КонецПроцедуры







&НаКлиенте
//И     В открытой форме я нажимаю кнопку выбора у поля с именем "Реквизит4"
//@ВОткрытойФормеЯНажимаюКнопкуВыбораУПоляСИменем(Парам01)
Процедура ВОткрытойФормеЯНажимаюКнопкуВыбораУПоляСИменем(ИмяРеквизита) Экспорт
	ВОткрытойФормеЯНажимаюКнопкуВыбораУПоляСЗаголовком(ИмяРеквизита,Истина);
КонецПроцедуры

&НаКлиенте
//И     табличный документ формы с именем "РеквизитТабличныйДокумент" стал равен:
//@ТабличныйДокументФормыСИменемСталРавен(Парам01,ТабПарам)
Процедура ТабличныйДокументФормыСИменемСталРавен(ИмяРеквизита,ТабПарамБыло,СталПустым = Ложь) Экспорт
	Нашли = Ложь;
	МассивФорм = НайтиФормыТекущегоОкна();
	Для каждого ТекущаяФорма Из МассивФорм Цикл
		
		ПолеТабДок   = ТекущаяФорма.НайтиОбъект(Тип("ТестируемоеПолеФормы"),,ИмяРеквизита);
		Если ПолеТабДок = Неопределено Тогда
			Продолжить;
		КонецЕсли;	 
		
		Если ПолеТабДок = Неопределено Тогда
			Продолжить;
		КонецЕсли;	 
		
		ТабДокСтало = Ванесса.ПолучитьТабДокИзTestClient(ПолеТабДок);
		Если СталПустым Тогда
			Если ТабДокСтало.Количество() = 0 Тогда
				Возврат;
			Иначе
				Стр = "В табличном документе " + ТабДокСтало.Количество() + " строк, а ожидалось, что он пустой.";
				Сообщить(Стр);
				ВызватьИсключение Стр;
			КонецЕсли;	 
		КонецЕсли;	 
		
		//Ванесса.ПосмотретьЗначение(ТабПарамБыло,Истина);
		Если ТабДокСтало.Количество() <> ТабПарамБыло.Количество() Тогда
			Стр = "В табличном документе " + ТабДокСтало.Количество() + " строк, а ожидалось " + ТабПарамБыло.Количество() + " строк.";
			Сообщить(Стр);
			ВызватьИсключение Стр;
		КонецЕсли;	 
		
		Ном = -1;
		Для каждого СтрСтало Из ТабДокСтало Цикл
			Ном     = Ном + 1;
			СтрБыло = ТабПарамБыло[Ном];
			
			Если СтрСтало.Количество() <> СтрБыло.Количество() Тогда
				Стр = "В табличном документе " + СтрСтало.Количество() + " колонок, а ожидалось " + СтрБыло.Количество() + " колонок.";
				Сообщить(Стр);
				ВызватьИсключение Стр;
			КонецЕсли;	 
			
			
			НомКол = 0;
			Для каждого ЗнСтало Из СтрСтало Цикл
				НомКол = НомКол + 1;
				ЗнБыло = СтрБыло["Кол" + НомКол];
				
				Если ЗнСтало <> ЗнБыло Тогда
					Если ЗнБыло <> "*" Тогда
						Стр = "В табличном документе в колонке №" + НомКол + " значение= <" + ЗнСтало + "> , а ожидалось <" + ЗнБыло + ">";
						Сообщить(Стр);
						ВызватьИсключение Стр;
					КонецЕсли;	 
				КонецЕсли;	 
				
			КонецЦикла;
		КонецЦикла;
		
		
		Нашли = Истина;
		Прервать;
	КонецЦикла;
	
	Если НЕ Нашли Тогда
		Стр = "Элемент формы с именем <" + ИмяРеквизита + "> не найден!";
		Сообщить(Стр);
		ВызватьИсключение Стр;
	КонецЕсли;	 
	
	
КонецПроцедуры

&НаКлиенте
//И     В открытой форме я нажимаю на кнопку с именем "ЗаполнитьРекСтрока1"
//@ВОткрытойФормеЯНажимаюНаКнопкуСИменем(Парам01)
Процедура ВОткрытойФормеЯНажимаюНаКнопкуСИменем(ИмяКнопки) Экспорт
	ВОткрытойФормеЯНажимаюНаКнопкуСЗаголовком(ИмяКнопки,Истина);
КонецПроцедуры




&НаКлиенте
//И     Я закрываю окно с заголовком "Справочник1"
//@ЯЗакрываюОкноСЗаголовком(Парам01)
Процедура ЯЗакрываюОкноСЗаголовком(ЗаголовокОкна) Экспорт
	ОкноПриложения = КонтекстСохраняемый.ТестовоеПриложение.НайтиОбъект(Тип("ТестируемоеОкноКлиентскогоПриложения"),ЗаголовокОкна);
	Если ОкноПриложения = Неопределено Тогда
		Стр = "Окно с заголовком <" + ЗаголовокОкна + "> не найдено!";
		Сообщить(Стр);
		ВызватьИсключение Стр;
	КонецЕсли;	 
	
	ОкноПриложения.Закрыть();
КонецПроцедуры

&НаКлиенте
//И     Я закрываю окно "Справочник1"
//@ЯЗакрываюОкно(Парам01)
Процедура ЯЗакрываюОкно(ЗаголовокОкна) Экспорт
	ЯЗакрываюОкноСЗаголовком(ЗаголовокОкна);
КонецПроцедуры

&НаКлиенте
//И     Я закрываю текущее окно
//@ЯЗакрываюТекущееОкно()
Процедура ЯЗакрываюТекущееОкно() Экспорт
	АктивноеОкно = Ванесса.ПолучитьАктивноеОкноИзТестовоеПриложение();
	Если АктивноеОкно = Неопределено Тогда
		ВызватьИсключение "Активное окно не найдено.";
	КонецЕсли;	 
	
	АктивноеОкно.Закрыть();	
КонецПроцедуры






&НаКлиенте
//И     В текущем окне я нажимаю кнопку командного интерфейса "Общая команда для справочника1"
//@ВТекущемОкнеЯНажимаюКнопкуКомандногоИнтерфейса(Парам01)
Процедура ВТекущемОкнеЯНажимаюКнопкуКомандногоИнтерфейса(ИмяКнопки) Экспорт
	АктивноеОкно       = КонтекстСохраняемый.ТестовоеПриложение.ПолучитьАктивноеОкно();
	КомандныйИнтерфейс = АктивноеОкно.ПолучитьКомандныйИнтерфейс();
	//ОкноПриложенияОсновноеCommandInterface = КонтекстСохраняемый.ОкноПриложенияОсновноеCommandInterface;
	КнопкаКомандногоИнтерфейса = КомандныйИнтерфейс.НайтиОбъект(Тип("ТестируемаяКнопкаКомандногоИнтерфейса"), ИмяКнопки,,5);
	Если КнопкаКомандногоИнтерфейса = Неопределено Тогда
		Стр = "Кнопка/команда с заголовком <" + ИмяКнопки + "> не найдена";
		Сообщить(Стр);
		ВызватьИсключение Стр;
	КонецЕсли;	 
	
	
	КнопкаКомандногоИнтерфейса.Нажать();
КонецПроцедуры

&НаКлиенте
//И     В открытой форме в ТЧ ""Товары"" я добавляю новую строку
//@ВОткрытойФормеВТЧЯДобавляюНовуюСтроку(Парам01)
Процедура ВОткрытойФормеВТЧЯДобавляюНовуюСтроку(ИмяТЧ) Экспорт
	МассивФорм = НайтиФормыТекущегоОкна();
	Для каждого ТекущаяФорма Из МассивФорм Цикл
		Таблица = ТекущаяФорма.НайтиОбъект(Тип("ТестируемаяТаблицаФормы"),, ИмяТЧ);
		
		Если Таблица = Неопределено Тогда
			Продолжить;
		КонецЕсли; 
		
		Таблица.ДобавитьСтроку();
		
		
		Нашли = Истина;
		Прервать;
	КонецЦикла;
	
	Если НЕ Нашли Тогда
		Стр = "ТЧ с именем <" + ИмяТЧ + "> не найдена!";
		Сообщить(Стр);
		ВызватьИсключение Стр;
	КонецЕсли;	 
	
	
	
КонецПроцедуры





&НаКлиенте
//И     В открытой форме я нажимаю на кнопку открытия поля с заголовком "Реквизит2"
//@ВОткрытойФормеЯНажимаюНаКнопкуОткрытияПоляСЗаголовком(Парам01)
Процедура ВОткрытойФормеЯНажимаюНаКнопкуОткрытияПоляСЗаголовком(ИмяРеквизита,ИскатьПоИмени = Ложь) Экспорт
	
	ПолеРеквизит = Ванесса.НайтиРеквизитОткрытойФормыПоЗаголовку(ИмяРеквизита,ИскатьПоИмени);
	ПолеРеквизит.Активизировать();
	СделатьДействияПриЗаписиВидео();
	СделатьДействияПриЗаписиHTML();
	ПолеРеквизит.Открыть();
	
	
КонецПроцедуры

&НаКлиенте
//И     В открытой форме я нажимаю на кнопку открытия поля "Реквизит2"
//@ВОткрытойФормеЯНажимаюНаКнопкуОткрытияПоля(Парам01)
Процедура ВОткрытойФормеЯНажимаюНаКнопкуОткрытияПоля(ИмяРеквизита,ИскатьПоИмени = Ложь) Экспорт
	ВОткрытойФормеЯНажимаюНаКнопкуОткрытияПоляСЗаголовком(ИмяРеквизита,ИскатьПоИмени);
КонецПроцедуры






&НаКлиенте
//И     В открытой форме я нажимаю на кнопку открытия поля с именем "Реквизит2"
//@ВОткрытойФормеЯНажимаюНаКнопкуОткрытияПоляСИменем(Парам01)
Процедура ВОткрытойФормеЯНажимаюНаКнопкуОткрытияПоляСИменем(ИмяРеквизита,ИскатьПоИмени = Ложь) Экспорт
	ВОткрытойФормеЯНажимаюНаКнопкуОткрытияПоляСЗаголовком(ИмяРеквизита,Истина);
КонецПроцедуры



&НаКлиенте
//И     В открытой форме из выпадающего списка с заголовком "Реквизит2" я выбираю "ТестовыйЭлемент21"
//@ВОткрытойФормеИзВыпадающегоСпискаСЗаголовкомЯВыбираю(Парам01)
Процедура ВОткрытойФормеИзВыпадающегоСпискаСЗаголовкомЯВыбираю(ИмяРеквизита,ВыбираемоеЗначение,ИскатьПоИмени = Ложь) Экспорт
	
	ПолеРеквизит = Ванесса.НайтиРеквизитОткрытойФормыПоЗаголовку(ИмяРеквизита,ИскатьПоИмени);
	
	ПолеРеквизит.Активизировать();
	СделатьДействияПриЗаписиВидео("толькомышь");
	СделатьДействияПриЗаписиHTML("толькомышь");
	Если НЕ ПолеРеквизит.ВыпадающийСписокОткрыт() Тогда
		ПолеРеквизит.ОткрытьВыпадающийСписок();
	КонецЕсли;	 
	
	Попытка
		ПолеРеквизит.ВвестиТекст(ВыбираемоеЗначение);
		ПолеРеквизит.ОжидатьФормированияВыпадающегоСписка(10);
		ПолеРеквизит.ВыполнитьВыборИзСпискаВыбора(0);
	Исключение
		//обработка для поля, где снят флаг редактирования текста
		ПолеРеквизит.ВыполнитьВыборИзСпискаВыбора(ВыбираемоеЗначение);
	КонецПопытки;
	
	
КонецПроцедуры

&НаКлиенте
//И     В открытой форме из выпадающего списка "Реквизит2" я выбираю "ТестовыйЭлемент21"
//@ВОткрытойФормеИзВыпадающегоСпискаЯВыбираю(Парам01)
Процедура ВОткрытойФормеИзВыпадающегоСпискаЯВыбираю(ИмяРеквизита,ВыбираемоеЗначение,ИскатьПоИмени = Ложь) Экспорт
	ВОткрытойФормеИзВыпадающегоСпискаСЗаголовкомЯВыбираю(ИмяРеквизита,ВыбираемоеЗначение,ИскатьПоИмени);
КонецПроцедуры







&НаКлиенте
//И     В открытой форме из выпадающего списка с именем "Реквизит2" я выбираю "ТестовыйЭлемент21"
//@ВОткрытойФормеИзВыпадающегоСпискаСИменемЯВыбираю(Парам01)
Процедура ВОткрытойФормеИзВыпадающегоСпискаСИменемЯВыбираю(ИмяРеквизита,ВыбираемоеЗначение) Экспорт
	ВОткрытойФормеИзВыпадающегоСпискаСЗаголовкомЯВыбираю(ИмяРеквизита,ВыбираемоеЗначение,Истина);
КонецПроцедуры




&НаКлиенте
//И     В открытой форме я нажимаю кнопку очистить у поля с заголовком "Отбор"
//@ВОткрытойФормеЯНажимаюКнопкуОчиститьУПоляСЗаголовком(Парам01)
Процедура ВОткрытойФормеЯНажимаюКнопкуОчиститьУПоляСЗаголовком(ИмяРеквизита,ИскатьПоИмени = Ложь) Экспорт
	ПолеРеквизит = Ванесса.НайтиРеквизитОткрытойФормыПоЗаголовку(ИмяРеквизита,ИскатьПоИмени);
	ПолеРеквизит.Активизировать();
	СделатьДействияПриЗаписиВидео();
	СделатьДействияПриЗаписиHTML();
	ПолеРеквизит.Очистить();
КонецПроцедуры

&НаКлиенте
//И     В открытой форме я нажимаю кнопку очистить у поля "Отбор"
//@ВОткрытойФормеЯНажимаюКнопкуОчиститьУПоля(Парам01)
Процедура ВОткрытойФормеЯНажимаюКнопкуОчиститьУПоля(ИмяРеквизита,ИскатьПоИмени = Ложь) Экспорт
	ВОткрытойФормеЯНажимаюКнопкуОчиститьУПоляСЗаголовком(ИмяРеквизита,ИскатьПоИмени);
КонецПроцедуры






&НаКлиенте
//И     В открытой форме я нажимаю кнопку очистить у поля с именем "Отбор"
//@ВОткрытойФормеЯНажимаюКнопкуОчиститьУПоляСИменем(Парам01)
Процедура ВОткрытойФормеЯНажимаюКнопкуОчиститьУПоляСИменем(ИмяРеквизита,ИскатьПоИмени = Ложь) Экспорт
	ВОткрытойФормеЯНажимаюКнопкуОчиститьУПоляСЗаголовком(ИмяРеквизита,Истина);
КонецПроцедуры


&НаКлиенте
//И     табличный документ формы с именем "РеквизитТабличныйДокумент" стал пустым
//@ТабличныйДокументФормыСИменемСталПустым(Парам01)
Процедура ТабличныйДокументФормыСИменемСталПустым(ИмяРеквизита) Экспорт
	ТабличныйДокументФормыСИменемСталРавен(ИмяРеквизита,Неопределено,Истина);
КонецПроцедуры



&НаКлиенте
//И В открытой форме в таблице с именем "ДеревоТестов" в колонке "Имя" нет значения "Temp1"
//@ВОткрытойФормеВТаблицеСИменемВКолонкеНетЗначения(Парам01,Парам02,Парам03)
Процедура ВОткрытойФормеВТаблицеСИменемВКолонкеНетЗначения(ИмяТЧ,ИмяКолонки,ПроверяемоеЗначение) Экспорт
	ТЧ         = НайтиТЧПоИмени(ИмяТЧ);
	ЗначениеТЧ = ПолучитьСтрокиИзТаблицыTestClient(ТЧ);
	
	НомСтр = 0;
	Для каждого СтрокаТЧ Из ЗначениеТЧ Цикл
		НомСтр = НомСтр + 1;
		
		Значение = СтрокаТЧ[ИмяКолонки];
		Если Значение = Неопределено Тогда
			Стр = "В таблице <" + ИмяТЧ + ">  нет колонки <" + ИмяКолонки + ">";
			Сообщить(Стр);
			ВызватьИсключение Стр;
		КонецЕсли;	 
		
		Если Значение = ПроверяемоеЗначение Тогда
			Стр = "В таблице <" + ИмяТЧ + "> в строке №" + НомСтр + " найдено значение " + ПроверяемоеЗначение + ", а его не должно было быть.";
			Сообщить(Стр);
			ВызватьИсключение Стр;
		КонецЕсли;	 
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
//И В открытой форме в таблице с именем "ДеревоТестов" в колонке "Имя" есть значение "ОткрытиеФормы"
//@ВОткрытойФормеВТаблицеСИменемВКолонкеЕстьЗначение(Парам01,Парам02,Парам03)
Процедура ВОткрытойФормеВТаблицеСИменемВКолонкеЕстьЗначение(ИмяТЧ,ИмяКолонки,ПроверяемоеЗначение) Экспорт
	ТЧ         = НайтиТЧПоИмени(ИмяТЧ);
	ЗначениеТЧ = ПолучитьСтрокиИзТаблицыTestClient(ТЧ);
	
	Нашли = Ложь;
	
	НомСтр = 0;
	Для каждого СтрокаТЧ Из ЗначениеТЧ Цикл
		НомСтр = НомСтр + 1;
		
		Значение = СтрокаТЧ[ИмяКолонки];
		Если Значение = Неопределено Тогда
			Стр = "В таблице <" + ИмяТЧ + ">  нет колонки <" + ИмяКолонки + ">";
			Сообщить(Стр);
			ВызватьИсключение Стр;
		КонецЕсли;	 
		Если Значение = ПроверяемоеЗначение Тогда
			Нашли = Истина;
			Прервать;
		КонецЕсли;	 
	КонецЦикла;
	
	Если Не Нашли Тогда
		Стр = "В таблице <" + ИмяТЧ + ">  НЕ найдено значение " + ПроверяемоеЗначение + ", а оно должно было быть.";
		Сообщить(Стр);
		ВызватьИсключение Стр;
	КонецЕсли;	 	
	
КонецПроцедуры


&НаКлиенте
//И     В открытой форме в ТЧ "Отборы" я активизирую поле "ИмяПоля"
//@ВОткрытойФормеВТЧЯАктивизируюПоле(Парам01,Парам02)
Процедура ВОткрытойФормеВТЧЯАктивизируюПоле(ИмяТЧ,ИмяРеквизита,ИскатьПоИмени = Ложь) Экспорт
	ТЧ                     =  НайтиТЧПоИмени(ИмяТЧ);
	
	Если ИскатьПоИмени Тогда
		ПолеРеквизит           = ТЧ.НайтиОбъект(Тип("ТестируемоеПолеФормы"),, ИмяРеквизита);
	Иначе	
		ПолеРеквизит           = ТЧ.НайтиОбъект(Тип("ТестируемоеПолеФормы"), ИмяРеквизита);
	КонецЕсли;	 
	
	Если ПолеРеквизит = Неопределено Тогда
		Если ИскатьПоИмени Тогда
			Стр = "В ТЧ <" +ИмяТЧ  + "> поле с именем <" + ИмяРеквизита + "> не найдено!";
		Иначе	
			Стр = "В ТЧ <" +ИмяТЧ  + "> поле с заголовком <" + ИмяРеквизита + "> не найдено!";
		КонецЕсли;	 
		Сообщить(Стр);
		ВызватьИсключение Стр;
	КонецЕсли;	 
	
	ПолеРеквизит.Активизировать();
	СделатьДействияПриЗаписиВидео();
	СделатьДействияПриЗаписиHTML();
КонецПроцедуры


&НаКлиенте
//И     В открытой форме в ТЧ "Отборы" я активизирую поле с именем "ИмяПоля"
//@ВОткрытойФормеВТЧЯАктивизируюПолеСИменем(Парам01,Парам02)
Процедура ВОткрытойФормеВТЧЯАктивизируюПолеСИменем(ИмяТЧ,ИмяРеквизита) Экспорт
	ВОткрытойФормеВТЧЯАктивизируюПоле(ИмяТЧ,ИмяРеквизита,Истина);
КонецПроцедуры



&НаКлиенте
//И     я буду выбирать внешний файл "c:\temp\333.epf"
//@ЯБудуВыбиратьВнешнийФайл(Парам01)
Процедура ЯБудуВыбиратьВнешнийФайл(ИмяФайла) Экспорт
	КонтекстСохраняемый.ТестовоеПриложение.УстановитьРезультатДиалогаВыбораФайла(Истина,ИмяФайла);
КонецПроцедуры


&НаКлиенте
//И     Я очищаю окно сообщений пользователю
//@ЯОчищаюОкноСообщенийПользователю
Процедура ЯОчищаюОкноСообщенийПользователю() Экспорт
	АктивноеОкно = ПолучитьАктивноеОкноИзТестовоеПриложение();
	Если АктивноеОкно <> Неопределено Тогда
		АктивноеОкно.ЗакрытьПанельСообщенийПользователю();
	КонецЕсли;	 
КонецПроцедуры

&НаКлиенте
//Когда я перехожу по навигационной ссылке "НавигационнаяСсылка"
//@ЯПерехожуПоНавигационнойСсылке(Парам01)
Процедура ЯПерехожуПоНавигационнойСсылке(НавигационнаяСсылка) Экспорт
	
	ГлавноеОкноТестируемого = КонтекстСохраняемый.ТестовоеПриложение.НайтиОбъект(Тип("ТестируемоеОкноКлиентскогоПриложения"));
    ГлавноеОкноТестируемого.Активизировать();
    ГлавноеОкноТестируемого.ВыполнитьКоманду(НавигационнаяСсылка);
	
КонецПроцедуры


&НаКлиенте
//В ТЧ "ТабличнаяЧасть1" из выпадающего списка "Реквизит справочник" я выбираю "ТестовыйЭлемент21" с выбором"
//@ВТЧИзВыпадающегоСпискаЯВыбираюСВыбором(Парам01,Парам02,Парам03)
Процедура ВТЧИзВыпадающегоСпискаЯВыбираюСВыбором(Парам01,Парам02,Парам03) Экспорт
	ВОткрытойФормеВТЧИзВыпадающегоСпискаЯВыбираюСВыбором(Парам01,Парам02,Парам03);
КонецПроцедуры

&НаКлиенте
//В ТЧ "ДокументыПоВидам" я нажимаю кнопку выбора у реквизита "Скан"
//@ВТЧЯНажимаюКнопкуВыбораУРеквизита(Парам01,Парам02)
Процедура ВТЧЯНажимаюКнопкуВыбораУРеквизита(Парам01,Парам02) Экспорт
	ВОткрытойФормеВТЧЯНажимаюКнопкуВыбораУРеквизита(Парам01,Парам02);
КонецПроцедуры

&НаКлиенте
//В таблице "ДокументыПоВидам" я нажимаю кнопку выбора у реквизита "Скан"
//@ВТаблицеЯНажимаюКнопкуВыбораУРеквизита(Парам01,Парам02)
Процедура ВТаблицеЯНажимаюКнопкуВыбораУРеквизита(Парам01,Парам02) Экспорт
	ВОткрытойФормеВТЧЯНажимаюКнопкуВыбораУРеквизита(Парам01,Парам02);
КонецПроцедуры

&НаКлиенте
//В таблице "ДокументыПоВидам" я нажимаю кнопку выбора у реквизита с именем "Скан"
//@ВТаблицеЯНажимаюКнопкуВыбораУРеквизитаСИменем(Парам01,Парам02)
Процедура ВТаблицеЯНажимаюКнопкуВыбораУРеквизитаСИменем(Парам01,Парам02) Экспорт
	ВОткрытойФормеВТЧЯНажимаюКнопкуВыбораУРеквизита(Парам01,Парам02,Истина);
КонецПроцедуры

&НаКлиенте
//И     в ТЧ  "Список" я перехожу на одну строку вверх"
//@ВТЧЯПерехожуНаОднуСтрокуВверх(Парам01)
Процедура ВТЧЯПерехожуНаОднуСтрокуВверх(Парам01) Экспорт
	ВОткрытойФормеВТЧЯПерехожуНаОднуСтрокуВверх(Парам01);
КонецПроцедуры

&НаКлиенте
//И     в таблице  "Список" я перехожу на одну строку вверх"
//@ВТаблицеЯПерехожуНаОднуСтрокуВверх(Парам01)
Процедура ВТаблицеЯПерехожуНаОднуСтрокуВверх(Парам01) Экспорт
	ВТЧЯПерехожуНаОднуСтрокуВверх(Парам01);
КонецПроцедуры


&НаКлиенте
//И     в ТЧ  "Список" я перехожу на одну строку вниз"
//@ВТЧЯПерехожуНаОднуСтрокуВниз(Парам01)
Процедура ВТЧЯПерехожуНаОднуСтрокуВниз(Парам01) Экспорт
	ВОткрытойФормеВТЧЯПерехожуНаОднуСтрокуВниз(Парам01);
КонецПроцедуры

&НаКлиенте
//И     в таблице  "Список" я перехожу на одну строку вниз"
//@ВТаблицеЯПерехожуНаОднуСтрокуВниз(Парам01)
Процедура ВТаблицеЯПерехожуНаОднуСтрокуВниз(Парам01) Экспорт
	ВТЧЯПерехожуНаОднуСтрокуВниз(Парам01);
КонецПроцедуры

&НаКлиенте
//И     в поле "Наименование" я ввожу текст "111"
//@ВПолеЯВвожуТекст(Парам01,Парам02)
Процедура ВПолеЯВвожуТекст(Парам01,Парам02) Экспорт
	ВОткрытойФормеВПолеЯВвожуТекст(Парам01,Парам02);
КонецПроцедуры

&НаКлиенте
//И     я нажимаю кнопку выбора у поля "Реквизит2"
//@ЯНажимаюКнопкуВыбораУПоля(Парам01)
Процедура ЯНажимаюКнопкуВыбораУПоля(Парам01) Экспорт
	ВОткрытойФормеЯНажимаюКнопкуВыбораУПоля(Парам01);
КонецПроцедуры

&НаКлиенте
//И     я нажимаю кнопку выбора у поля с именем "Реквизит4"
//@ЯНажимаюКнопкуВыбораУПоляСИменем(Парам01)
Процедура ЯНажимаюКнопкуВыбораУПоляСИменем(Парам01) Экспорт
	ВОткрытойФормеЯНажимаюКнопкуВыбораУПоляСИменем(Парам01);
КонецПроцедуры

&НаКлиенте
//И     я нажимаю на кнопку "Создать"
//@ЯНажимаюНаКнопку(Парам01)
Процедура ЯНажимаюНаКнопку(Парам01) Экспорт
	ВОткрытойФормеЯНажимаюНаКнопку(Парам01);
КонецПроцедуры

&НаКлиенте
//И     в поле с именем "Наименование" я ввожу текст "111"
//@ВПолеСИменемЯВвожуТекст(Парам01,Парам02)
Процедура ВПолеСИменемЯВвожуТекст(Парам01,Парам02) Экспорт
	ВОткрытойФормеВПолеСИменемЯВвожуТекст(Парам01,Парам02);
КонецПроцедуры

&НаКлиенте
//И     я перехожу к закладке "Вспомогательная"
//@ЯПерехожуКЗакладке(Парам01)
Процедура ЯПерехожуКЗакладке(Парам01) Экспорт
	ВОткрытойФормеЯПерехожуКЗакладке(Парам01);
КонецПроцедуры

&НаКлиенте
//И     я перехожу к закладке с именем "Вспомогательная"
//@ЯПерехожуКЗакладкеСИменем(Парам01)
Процедура ЯПерехожуКЗакладкеСИменем(Парам01) Экспорт
	ВОткрытойФормеЯПерехожуКЗакладкеСИменем(Парам01);
КонецПроцедуры

&НаКлиенте
//И     я нажимаю на гиперссылку "Гиперссылка"
//@ЯНажимаюНаГиперссылку(Парам01)
Процедура ЯНажимаюНаГиперссылку(Парам01) Экспорт
	ВОткрытойФормеЯНажимаюНаГиперссылку(Парам01);
КонецПроцедуры

&НаКлиенте
//И     я нажимаю на гиперссылку с именем "Гиперссылка"
//@ЯНажимаюНаГиперссылкуСИменем(Парам01)
Процедура ЯНажимаюНаГиперссылкуСИменем(Парам01) Экспорт
	ВОткрытойФормеЯНажимаюНаГиперссылкуСИменем(Парам01);
КонецПроцедуры

&НаКлиенте
//И     я нажимаю на кнопку с именем "ЗаполнитьРекСтрока1"
//@ЯНажимаюНаКнопкуСИменем(Парам01)
Процедура ЯНажимаюНаКнопкуСИменем(Парам01) Экспорт
	ВОткрытойФормеЯНажимаюНаКнопкуСИменем(Парам01);
КонецПроцедуры

&НаКлиенте
//И     я сворачиваю группу "СворачиваемаяГруппа"
//@ЯСворачиваюГруппу(Парам01)
Процедура ЯСворачиваюГруппу(Парам01) Экспорт
	ВОткрытойФормеЯСворачиваюГруппу(Парам01);
КонецПроцедуры

&НаКлиенте
//И     я сворачиваю группу с именем "СворачиваемаяГруппа"
//@ЯСворачиваюГруппуСИменем(Парам01)
Процедура ЯСворачиваюГруппуСИменем(Парам01) Экспорт
	ВОткрытойФормеЯСворачиваюГруппуСИменем(Парам01);
КонецПроцедуры

&НаКлиенте
//И     я разворачиваю группу "СворачиваемаяГруппа"
//@ЯРазворачиваюГруппу(Парам01)
Процедура ЯРазворачиваюГруппу(Парам01) Экспорт
	ВОткрытойФормеЯРазворачиваюГруппу(Парам01);
КонецПроцедуры

&НаКлиенте
//И     я разворачиваю группу с именем "СворачиваемаяГруппа"
//@ЯРазворачиваюГруппуСИменем(Парам01)
Процедура ЯРазворачиваюГруппуСИменем(Парам01) Экспорт
	ВОткрытойФормеЯРазворачиваюГруппуСИменем(Парам01);
КонецПроцедуры

&НаКлиенте
//И     я открываю выпадающий список "Реквизит2"
//@ЯОткрываюВыпадающийСписок(Парам01)
Процедура ЯОткрываюВыпадающийСписок(Парам01) Экспорт
	ВОткрытойФормеЯОткрываюВыпадающийСписок(Парам01);
КонецПроцедуры

&НаКлиенте
//И     я открываю выпадающий список с именем "Реквизит2"
//@ЯОткрываюВыпадающийСписокСИменем(Парам01)
Процедура ЯОткрываюВыпадающийСписокСИменем(Парам01) Экспорт
	ВОткрытойФормеЯОткрываюВыпадающийСписокСИменем(Парам01);
КонецПроцедуры

&НаКлиенте
//И     я выбираю значение реквизита "Реквизит2" из формы списка"
//@ЯВыбираюЗначениеРеквизитаИзФормыСписка(Парам01)
Процедура ЯВыбираюЗначениеРеквизитаИзФормыСписка(Парам01) Экспорт
	ВОткрытойФормеЯВыбираюЗначениеРеквизитаИзФормыСписка(Парам01);
КонецПроцедуры

&НаКлиенте
//И     я выбираю значение реквизита с именем "Реквизит2" из формы списка"
//@ЯВыбираюЗначениеРеквизитаСИменемИзФормыСписка(Парам01)
Процедура ЯВыбираюЗначениеРеквизитаСИменемИзФормыСписка(Парам01) Экспорт
	ВОткрытойФормеЯВыбираюЗначениеРеквизитаСИменемИзФормыСписка(Парам01);
КонецПроцедуры

&НаКлиенте
//И     я изменяю флаг "Реквизит булево"
//@ЯИзменяюФлаг(Парам01)
Процедура ЯИзменяюФлаг(Парам01) Экспорт
	ВОткрытойФормеЯИзменяюФлаг(Парам01);
КонецПроцедуры

&НаКлиенте
//И     я изменяю флаг с именем "Реквизит булево"
//@ЯИзменяюФлагСИменем(Парам01)
Процедура ЯИзменяюФлагСИменем(Парам01) Экспорт
	ВОткрытойФормеЯИзменяюФлагСИменем(Парам01);
КонецПроцедуры

&НаКлиенте
//И     я меняю значение переключателя "Реквизит переключатель" на "Первое значение"
//@ЯМеняюЗначениеПереключателяНа(Парам01,Парам02)
Процедура ЯМеняюЗначениеПереключателяНа(Парам01,Парам02) Экспорт
	ВОткрытойФормеЯМеняюЗначениеПереключателяНа(Парам01,Парам02);
КонецПроцедуры

&НаКлиенте
//И     я меняю значение переключателя с именем "Реквизит переключатель" на "Первое значение"
//@ЯМеняюЗначениеПереключателяСИменемНа(Парам01,Парам02)
Процедура ЯМеняюЗначениеПереключателяСИменемНа(Парам01,Парам02) Экспорт
	ВОткрытойФормеЯМеняюЗначениеПереключателяСИменемНа(Парам01,Парам02);
КонецПроцедуры

&НаКлиенте
//И     в ТЧ "ТабличнаяЧасть1" я нажимаю на кнопку "Добавить"
//@ВТЧЯНажимаюНаКнопку(Парам01,Парам02)
Процедура ВТЧЯНажимаюНаКнопку(Парам01,Парам02) Экспорт
	ВОткрытойФормеВТЧЯНажимаюНаКнопку(Парам01,Парам02);
КонецПроцедуры

&НаКлиенте
//И     в таблице "ТабличнаяЧасть1" я нажимаю на кнопку "Добавить"
//@ВТаблицеЯНажимаюНаКнопку(Парам01,Парам02)
Процедура ВТаблицеЯНажимаюНаКнопку(Парам01,Парам02) Экспорт
	ВОткрытойФормеВТЧЯНажимаюНаКнопку(Парам01,Парам02);
КонецПроцедуры

&НаКлиенте
//И     в ТЧ "ТабличнаяЧасть1" я нажимаю на кнопку с именем "Добавить"
//@ВТЧЯНажимаюНаКнопкуСИменем(Парам01,Парам02)
Процедура ВТЧЯНажимаюНаКнопкуСИменем(Парам01,Парам02) Экспорт
	ВОткрытойФормеВТЧЯНажимаюНаКнопкуСИменем(Парам01,Парам02);
КонецПроцедуры

&НаКлиенте
//И     в таблице "ТабличнаяЧасть1" я нажимаю на кнопку с именем "Добавить"
//@ВТаблицеЯНажимаюНаКнопкуСИменем(Парам01,Парам02)
Процедура ВТаблицеЯНажимаюНаКнопкуСИменем(Парам01,Парам02) Экспорт
	ВОткрытойФормеВТЧЯНажимаюНаКнопкуСИменем(Парам01,Парам02);
КонецПроцедуры

&НаКлиенте
//И     в ТЧ "ТабличнаяЧасть1" в поле "Реквизит число" я ввожу текст "56,78"
//@ВТЧВПолеЯВвожуТекст(Парам01,Парам02,Парам03)
Процедура ВТЧВПолеЯВвожуТекст(Парам01,Парам02,Парам03) Экспорт
	ВОткрытойФормеВТЧВПолеЯВвожуТекст(Парам01,Парам02,Парам03);
КонецПроцедуры

&НаКлиенте
//И     в табилце "ТабличнаяЧасть1" в поле "Реквизит число" я ввожу текст "56,78"
//@ВТаблицеВПолеЯВвожуТекст(Парам01,Парам02,Парам03)
Процедура ВТаблицеВПолеЯВвожуТекст(Парам01,Парам02,Парам03) Экспорт
	ВТЧВПолеЯВвожуТекст(Парам01,Парам02,Парам03);
КонецПроцедуры




&НаКлиенте
//И     в ТЧ "ТабличнаяЧасть1" в поле с именем "Реквизит число" я ввожу текст "56,78"
//@ВТЧВПолеСИменемЯВвожуТекст(Парам01,Парам02,Парам03)
Процедура ВТЧВПолеСИменемЯВвожуТекст(Парам01,Парам02,Парам03) Экспорт
	ВОткрытойФормеВТЧВПолеСИменемЯВвожуТекст(Парам01,Парам02,Парам03);
КонецПроцедуры

&НаКлиенте
//И     в таблице "ТабличнаяЧасть1" в поле с именем "Реквизит число" я ввожу текст "56,78"
//@ВТаблицеВПолеСИменемЯВвожуТекст(Парам01,Парам02,Парам03)
Процедура ВТаблицеВПолеСИменемЯВвожуТекст(Парам01,Парам02,Парам03) Экспорт
	ВТЧВПолеСИменемЯВвожуТекст(Парам01,Парам02,Парам03);
КонецПроцедуры


&НаКлиенте
//И     в ТЧ "ТабличнаяЧасть1" из выпадающего списка "Реквизит справочник" я выбираю "ТестовыйЭлемент21"
//@ВТЧИзВыпадающегоСпискаЯВыбираю(Парам01,Парам02,Парам03)
Процедура ВТЧИзВыпадающегоСпискаЯВыбираю(Парам01,Парам02,Парам03,ИскатьПоИмени = Ложь) Экспорт
	ВОткрытойФормеВТЧИзВыпадающегоСпискаЯВыбираю(Парам01,Парам02,Парам03,ИскатьПоИмени);
КонецПроцедуры

&НаКлиенте
//И     в таблице "ТабличнаяЧасть1" из выпадающего списка "Реквизит справочник" я выбираю "ТестовыйЭлемент21"
//@ВТаблицеИзВыпадающегоСпискаЯВыбираю(Парам01,Парам02,Парам03)
Процедура ВТаблицеИзВыпадающегоСпискаЯВыбираю(Парам01,Парам02,Парам03) Экспорт
	ВТЧИзВыпадающегоСпискаЯВыбираю(Парам01,Парам02,Парам03);
КонецПроцедуры

&НаКлиенте
//И     в таблице "ТабличнаяЧасть1" из выпадающего списка с именем "Реквизит справочник" я выбираю "ТестовыйЭлемент21"
//@ВТаблицеИзВыпадающегоСпискаСИменемЯВыбираю(Парам01,Парам02,Парам03)
Процедура ВТаблицеИзВыпадающегоСпискаСИменемЯВыбираю(Парам01,Парам02,Парам03) Экспорт
	ВТЧИзВыпадающегоСпискаЯВыбираю(Парам01,Парам02,Парам03,Истина);
КонецПроцедуры

&НаКлиенте
//И     в ТЧ "ТабличнаяЧасть1" я изменяю флаг "Реквизит булево"
//@ВТЧЯИзменяюФлаг(Парам01,Парам02)
Процедура ВТЧЯИзменяюФлаг(Парам01,Парам02,ИскатьПоИмени = Ложь) Экспорт
	ВОткрытойФормеВТЧЯИзменяюФлаг(Парам01,Парам02,ИскатьПоИмени);
КонецПроцедуры

&НаКлиенте
//И     в таблице "ТабличнаяЧасть1" я изменяю флаг "Реквизит булево"
//@ВТаблицеЯИзменяюФлаг(Парам01,Парам02)
Процедура ВТаблицеЯИзменяюФлаг(Парам01,Парам02) Экспорт
	ВТЧЯИзменяюФлаг(Парам01,Парам02);
КонецПроцедуры

&НаКлиенте
//И     в таблице "ТабличнаяЧасть1" я изменяю флаг с именем "Реквизит булево"
//@ВТаблицеЯИзменяюФлагСИменем(Парам01,Парам02)
Процедура ВТаблицеЯИзменяюФлагСИменем(Парам01,Парам02) Экспорт
	ВТЧЯИзменяюФлаг(Парам01,Парам02,Истина);
КонецПроцедуры


&НаКлиенте
//И     в ТЧ "ТабличнаяЧасть1" я выбираю значение реквизита "Реквизит справочник выбор из формы списка" из формы списка"
//@ВТЧЯВыбираюЗначениеРеквизитаИзФормыСписка(Парам01,Парам02)
Процедура ВТЧЯВыбираюЗначениеРеквизитаИзФормыСписка(Парам01,Парам02) Экспорт
	ВОткрытойФормеВТЧЯВыбираюЗначениеРеквизитаИзФормыСписка(Парам01,Парам02);
КонецПроцедуры

&НаКлиенте
//И     в таблице "ТабличнаяЧасть1" я выбираю значение реквизита "Реквизит справочник выбор из формы списка" из формы списка"
//@ВТаблицеЯВыбираюЗначениеРеквизитаИзФормыСписка(Парам01,Парам02)
Процедура ВТаблицеЯВыбираюЗначениеРеквизитаИзФормыСписка(Парам01,Парам02) Экспорт
	ВТЧЯВыбираюЗначениеРеквизитаИзФормыСписка(Парам01,Парам02);
КонецПроцедуры

&НаКлиенте
//И     в ТЧ "ТабличнаяЧасть1" я выбираю значение реквизита с именем "Реквизит справочник выбор из формы списка" из формы списка"
//@ВТЧЯВыбираюЗначениеРеквизитаСИменемИзФормыСписка(Парам01,Парам02)
Процедура ВТЧЯВыбираюЗначениеРеквизитаСИменемИзФормыСписка(Парам01,Парам02) Экспорт
	ВОткрытойФормеВТЧЯВыбираюЗначениеРеквизитаСИменемИзФормыСписка(Парам01,Парам02);
КонецПроцедуры

&НаКлиенте
//И     в таблице "ТабличнаяЧасть1" я выбираю значение реквизита с именем "Реквизит справочник выбор из формы списка" из формы списка"
//@ВТаблицеЯВыбираюЗначениеРеквизитаСИменемИзФормыСписка(Парам01,Парам02)
Процедура ВТаблицеЯВыбираюЗначениеРеквизитаСИменемИзФормыСписка(Парам01,Парам02) Экспорт
	ВТЧЯВыбираюЗначениеРеквизитаСИменемИзФормыСписка(Парам01,Парам02);
КонецПроцедуры

&НаКлиенте
//И     в ТЧ "Товары" я добавляю новую строку"
//@ВТЧЯДобавляюНовуюСтроку(Парам01)
Процедура ВТЧЯДобавляюНовуюСтроку(Парам01) Экспорт
	ВОткрытойФормеВТЧЯДобавляюНовуюСтроку(Парам01);
КонецПроцедуры

&НаКлиенте
//И     в таблице "Товары" я добавляю новую строку"
//@ВТаблицеЯДобавляюНовуюСтроку(Парам01)
Процедура ВТаблицеЯДобавляюНовуюСтроку(Парам01) Экспорт
	ВТЧЯДобавляюНовуюСтроку(Парам01);
КонецПроцедуры

&НаКлиенте
//И     я нажимаю на кнопку открытия поля "Реквизит2"
//@ЯНажимаюНаКнопкуОткрытияПоля(Парам01)
Процедура ЯНажимаюНаКнопкуОткрытияПоля(Парам01) Экспорт
	ВОткрытойФормеЯНажимаюНаКнопкуОткрытияПоля(Парам01);
КонецПроцедуры

&НаКлиенте
//И     я нажимаю на кнопку открытия поля с именем "Реквизит2"
//@ЯНажимаюНаКнопкуОткрытияПоляСИменем(Парам01)
Процедура ЯНажимаюНаКнопкуОткрытияПоляСИменем(Парам01) Экспорт
	ВОткрытойФормеЯНажимаюНаКнопкуОткрытияПоляСИменем(Парам01);
КонецПроцедуры

&НаКлиенте
//И     из выпадающего списка "Реквизит2" я выбираю "ТестовыйЭлемент21"
//@ИзВыпадающегоСпискаЯВыбираю(Парам01,Парам02)
Процедура ИзВыпадающегоСпискаЯВыбираю(Парам01,Парам02) Экспорт
	ВОткрытойФормеИзВыпадающегоСпискаЯВыбираю(Парам01,Парам02);
КонецПроцедуры

&НаКлиенте
//И     из выпадающего списка с именем "Реквизит2" я выбираю "ТестовыйЭлемент21"
//@ИзВыпадающегоСпискаСИменемЯВыбираю(Парам01,Парам02)
Процедура ИзВыпадающегоСпискаСИменемЯВыбираю(Парам01,Парам02) Экспорт
	ВОткрытойФормеИзВыпадающегоСпискаСИменемЯВыбираю(Парам01,Парам02);
КонецПроцедуры

&НаКлиенте
//И     я нажимаю кнопку очистить у поля "Отбор"
//@ЯНажимаюКнопкуОчиститьУПоля(Парам01)
Процедура ЯНажимаюКнопкуОчиститьУПоля(Парам01) Экспорт
	ВОткрытойФормеЯНажимаюКнопкуОчиститьУПоля(Парам01);
КонецПроцедуры

&НаКлиенте
//И     я нажимаю кнопку очистить у поля с именем "Отбор"
//@ЯНажимаюКнопкуОчиститьУПоляСИменем(Парам01)
Процедура ЯНажимаюКнопкуОчиститьУПоляСИменем(Парам01) Экспорт
	ВОткрытойФормеЯНажимаюКнопкуОчиститьУПоляСИменем(Парам01);
КонецПроцедуры

&НаКлиенте
//И в таблице с именем "ДеревоТестов" в колонке "Имя" нет значения "Temp1"
//@ВТаблицеСИменемВКолонкеНетЗначения(Парам01,Парам02,Парам03)
Процедура ВТаблицеСИменемВКолонкеНетЗначения(Парам01,Парам02,Парам03) Экспорт
	ВОткрытойФормеВТаблицеСИменемВКолонкеНетЗначения(Парам01,Парам02,Парам03);
КонецПроцедуры

&НаКлиенте
//И в таблице с именем "ДеревоТестов" в колонке "Имя" есть значение "ОткрытиеФормы"
//@ВТаблицеСИменемВКолонкеЕстьЗначение(Парам01,Парам02,Парам03)
Процедура ВТаблицеСИменемВКолонкеЕстьЗначение(Парам01,Парам02,Парам03) Экспорт
	ВОткрытойФормеВТаблицеСИменемВКолонкеЕстьЗначение(Парам01,Парам02,Парам03);
КонецПроцедуры

&НаКлиенте
//И     в ТЧ "Отборы" я активизирую поле "ИмяПоля"
//@ВТЧЯАктивизируюПоле(Парам01,Парам02)
Процедура ВТЧЯАктивизируюПоле(Парам01,Парам02) Экспорт
	ВОткрытойФормеВТЧЯАктивизируюПоле(Парам01,Парам02);
КонецПроцедуры

&НаКлиенте
//И     в таблице "Отборы" я активизирую поле "ИмяПоля"
//@ВТаблицеЯАктивизируюПоле(Парам01,Парам02)
Процедура ВТаблицеЯАктивизируюПоле(Парам01,Парам02) Экспорт
	ВТЧЯАктивизируюПоле(Парам01,Парам02);
КонецПроцедуры

&НаКлиенте
//И     в ТЧ "Отборы" я активизирую поле с именем "ИмяПоля"
//@ВТЧЯАктивизируюПолеСИменем(Парам01,Парам02)
Процедура ВТЧЯАктивизируюПолеСИменем(Парам01,Парам02) Экспорт
	ВОткрытойФормеВТЧЯАктивизируюПолеСИменем(Парам01,Парам02);
КонецПроцедуры

&НаКлиенте
//И     в таблице "Отборы" я активизирую поле с именем "ИмяПоля"
//@ВТаблицеЯАктивизируюПолеСИменем(Парам01,Парам02)
Процедура ВТаблицеЯАктивизируюПолеСИменем(Парам01,Парам02) Экспорт
	ВТЧЯАктивизируюПолеСИменем(Парам01,Парам02);
КонецПроцедуры

&НаКлиенте
//И     я запоминаю значение поля "Номер" как "НомерДокумента"
//@ЯЗапоминаюЗначениеПоляСКлючом(Парам01,Парам02)
Процедура ЯЗапоминаюЗначениеПоляСКлючом(ИмяПоля,ИмяПеременной,ИскатьПоИмени = Ложь) Экспорт
	Значение = Ванесса.ПолучитьЗначениеРеквизитаОткрытойФормыПоЗаголовку(ИмяПоля,ИскатьПоИмени);
	Ванесса.СохранитьЗначениеВКонтекст(ИмяПеременной,Значение);
КонецПроцедуры

&НаКлиенте
//И     я запоминаю значение поля "Номер" с ключом "Номер документа"
//@ЯЗапоминаюЗначениеПоляКак(Парам01,Парам02)
Процедура ЯЗапоминаюЗначениеПоляКак(ИмяПоля,ИмяПеременной,ИскатьПоИмени = Ложь) Экспорт
	Значение = Ванесса.ПолучитьЗначениеРеквизитаОткрытойФормыПоЗаголовку(ИмяПоля,ИскатьПоИмени);
	Контекст.Вставить(ИмяПеременной,Значение);
КонецПроцедуры

&НаКлиенте
//И     я запоминаю значение таблицы "ТабличнаяЧасть1" поля "Номер" с ключом "Номер документа"
//@ЯЗапоминаюЗначениеТаблицыПоляКак(Парам01,Парам02)
Процедура ЯЗапоминаюЗначениеТаблицыПоляКак(ИмяТЧ,ИмяПоля,ИмяПеременной,ИскатьПоИмени = Ложь) Экспорт
	
	//ПолеРеквизит = Ванесса.НайтиРеквизитТаблицы(ИмяТЧ,ИмяПоля,ИскатьПоИмени);
	ТЧ = НайтиТЧПоИмени(ИмяТЧ);
	
	Значение = ТЧ.ПолучитьТекстЯчейки(); 
	
	Контекст.Вставить(ИмяПеременной,Значение);
КонецПроцедуры

&НаКлиенте
//И     я запоминаю значение поля "Номер" как "НомерДокумента" глобально
//@ЯЗапоминаюЗначениеПоляКакГлобально(Парам01,Парам02)
Процедура ЯЗапоминаюЗначениеПоляКакГлобально(ИмяПоля,ИмяПеременной,ИскатьПоИмени = Ложь) Экспорт
	Значение = Ванесса.ПолучитьЗначениеРеквизитаОткрытойФормыПоЗаголовку(ИмяПоля,ИскатьПоИмени);
	КонтекстСохраняемый.Вставить(ИмяПеременной,Значение);
КонецПроцедуры

&НаКлиенте
//И     я запоминаю значение поля "Номер" с ключом "НомерДокумента" глобально
//@ЯЗапоминаюЗначениеПоляСКлючомГлобально(Парам01,Парам02)
Процедура ЯЗапоминаюЗначениеПоляСКлючомГлобально(ИмяПоля,ИмяПеременной,ИскатьПоИмени = Ложь) Экспорт
	Значение = Ванесса.ПолучитьЗначениеРеквизитаОткрытойФормыПоЗаголовку(ИмяПоля,ИскатьПоИмени);
	Ванесса.СохранитьЗначениеВКонтекстСохраняемый(ИмяПеременной,Значение);
КонецПроцедуры

&НаКлиенте
//И     я выбираю пункт меню "ЗначениеМеню"
//@ЯВыбираюПунктМеню(ЗначениеМеню)
Процедура ЯВыбираюПунктМеню(ЗначениеМеню) Экспорт
	
	ТекущаяФорма = НайтиТекущуюФорму();
	
	Попытка
		ТекущаяФорма.ВыполнитьВыборИзМеню(ЗначениеМеню);
	Исключение
		ВызватьИсключение "В меню нет значения <"+ЗначениеМеню+">";
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
//И     у поля "ИмяПоля" я выбираю пункт контекстного меню "ПунктМеню"
//@УПоляЯВыбираюПунктКонтекстногоМеню(Парам01,Парам02)
Процедура УПоляЯВыбираюПунктКонтекстногоМеню(ИмяПоля,ПунктМеню,ИскатьПоИмени = Ложь) Экспорт
	Поле = Ванесса.НайтиРеквизитОткрытойФормыПоЗаголовку(ИмяПоля,ИскатьПоИмени);
	
	Меню = Поле.ПолучитьКонтекстноеМеню();
	
	ПунктМеню = Меню.НайтиОбъект(Тип("ТестируемаяКнопкаФормы"),ПунктМеню);
	ПунктМеню.Нажать();
КонецПроцедуры

&НаКлиенте
//И     у поля с именем "ИмяПоля" я выбираю пункт контекстного меню "ПунктМеню"
//@УПоляСИменемЯВыбираюПунктКонтекстногоМеню(Парам01,Парам02)
Процедура УПоляСИменемЯВыбираюПунктКонтекстногоМеню(ИмяПоля,ПунктМеню) Экспорт
	
	УПоляЯВыбираюПунктКонтекстногоМеню(ИмяПоля,ПунктМеню, Истина); 
	
КонецПроцедуры


&НаКлиенте
//И     я выбираю из списка "Значение"
//@ЯВыбираюИзСписка(Значение)
Процедура ЯВыбираюИзСписка(Значение) Экспорт
	
	ТекущаяФорма = НайтиТекущуюФорму();
	
	Попытка
		ТекущаяФорма.ВыполнитьВыборИзСписка(Значение);
	Исключение
		ВызватьИсключение "В списке нет значения <"+Значение+">";
	КонецПопытки;
	
КонецПроцедуры


&НаКлиенте
//И     флаг "Реквизит булево" равен "Истина"
//@ФлагРавен(Парам01,Парам02)
Процедура ФлагРавен(Заголовок,Значение) Экспорт
	НРегЗначение = НРег(Значение);
	
	Если НРегЗначение = "истина" Тогда
		ЗначениеПоиска = "Да";
	ИначеЕсли НРегЗначение = "да" Тогда
		ЗначениеПоиска = "Да";
	ИначеЕсли НРегЗначение = "ложь" Тогда
		ЗначениеПоиска = "Нет";
	ИначеЕсли НРегЗначение = "нет" Тогда
		ЗначениеПоиска = "Нет";
	Иначе	
		ЗначениеПоиска = Значение;
	КонецЕсли;	 
	ЭлементФормыСталРавен(Заголовок,ЗначениеПоиска,Ложь);
КонецПроцедуры

&НаКлиенте
//Тогда появилось предупреждение, содержащее текст "Текст"
//@ПоявилосьПредупреждениеСодержащееТекст(Парам01)
Процедура ПоявилосьПредупреждениеСодержащееТекст(Текст) Экспорт
	Нашли = Ложь;
	НужноеОкно = Неопределено;
	
	ОкнаПриложения = КонтекстСохраняемый.ТестовоеПриложение.НайтиОбъекты(Тип("ТестируемоеОкноКлиентскогоПриложения"));
	Для Каждого ОкноПриложения Из ОкнаПриложения Цикл
		Если (ОкноПриложения.Заголовок = "1С:Предприятие") или (ОкноПриложения.Заголовок = "1C:Enterprise") Тогда
			НужноеОкно = ОкноПриложения;
			Прервать;
		КонецЕсли;	 
	КонецЦикла;	
	
	Если НужноеОкно = Неопределено Тогда
		ВызватьИсключение "Не найдено окно предупреждения.";
	КонецЕсли;	 
	
	Контекст.Вставить("АктивноеОкно",НужноеОкно);
	
	
	ПоляФормы = НужноеОкно.НайтиОбъекты(Тип("ТестируемоеПолеФормы"));
	Если ПоляФормы.Количество() = 0 Тогда
		ВызватьИсключение "У окна <" + НужноеОкно.Заголовок + "> не найдено ни одного элемента с типом <ТестируемоеПолеФормы>.";
	КонецЕсли;	 
	
	ПолеФормы = ПоляФормы[0];
	
	ТекстЗаголовка = ПолеФормы.ТекстЗаголовка;
	
	Если Найти(НРег(ТекстЗаголовка),НРег(Текст)) = 0 Тогда
		ВызватьИсключение "В строке <" + ТекстЗаголовка + "> не найдена подстрока <" + Текст + ">";
	КонецЕсли;	 
	
КонецПроцедуры

&НаКлиенте
//Тогда не появилось окно предупреждения системы
//@НеПоявилосьОкноПредупрежденияСистемы()
Процедура НеПоявилосьОкноПредупрежденияСистемы() Экспорт
	Нашли = Ложь;
	НужноеОкно = Неопределено;
	
	ОкнаПриложения = КонтекстСохраняемый.ТестовоеПриложение.НайтиОбъекты(Тип("ТестируемоеОкноКлиентскогоПриложения"));
	Для Каждого ОкноПриложения Из ОкнаПриложения Цикл
		Если (ОкноПриложения.Заголовок = "1С:Предприятие") или (ОкноПриложения.Заголовок = "1C:Enterprise") Тогда
			НужноеОкно = ОкноПриложения;
			Прервать;
		КонецЕсли;	 
	КонецЦикла;	
	
	Если НужноеОкно = Неопределено Тогда
		Возврат;
	КонецЕсли;	 
	
	
	ПоляФормы = НужноеОкно.НайтиОбъекты(Тип("ТестируемоеПолеФормы"));
	Если ПоляФормы.Количество() = 0 Тогда
		ВызватьИсключение "Было найдено окно предупреждения. А ожидалось, что таких окон не будет.";
	КонецЕсли;	 
	
	ПолеФормы = ПоляФормы[0];
	
	ТекстЗаголовка = ПолеФормы.ТекстЗаголовка;
	
	ВызватьИсключение "Было найдено окно предупреждения с текстом: <" + ТекстЗаголовка + "> А ожидалось, что таких окон не будет.";
КонецПроцедуры

&НаКлиенте
//Если появилось окно диалога я нажимаю на кнопку "ОК"
//@ЕслиПоявилосьОкноДиалогаЯНажимаюНаКнопку()
Процедура ЕслиПоявилосьОкноДиалогаЯНажимаюНаКнопку(ИмяКнопки) Экспорт
	ОкноПредупреждения  = Ванесса.НайтиОкноПредупреждения();
	Если ОкноПредупреждения = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	Кнопка = ОкноПредупреждения.НайтиОбъект(Тип("ТестируемаяКнопкаФормы"),ИмяКнопки);
	Если Кнопка = Неопределено Тогда
		ВызватьИсключение "Кнопка/команда с заголовком <" + ИмяКнопки + "> не найдена!";
	КонецЕсли;	 
	
	Кнопка.Нажать();
КонецПроцедуры



&НаКлиенте
Процедура ДоступенДляПросмотра(ИмяЭлемента, ИскатьПоИмени = Ложь)
	
	ЭлементФормы = НайтиЭлементНаФорме(ИмяЭлемента,, ИскатьПоИмени);
		
	Нашли = ЭлементФормы.ТекущееТолькоПросмотр();
	
	Если НЕ Нашли Тогда
		Если ИскатьПоИмени Тогда
			Стр = "Элемент с именем <" + ИмяЭлемента + "> доступен только для просмотра";
		Иначе
			Стр = "Элемент с заголовком <" + ИмяЭлемента + "> доступен только для просмотра";
		КонецЕсли;
		Сообщить(Стр);
		ВызватьИсключение Стр;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НеДоступенДляПросмотра(ИмяЭлемента, ИскатьПоИмени = Ложь)
	
	ЭлементФормы = НайтиЭлементНаФорме(ИмяЭлемента,, ИскатьПоИмени);
		
	Нашли = ЭлементФормы.ТекущееТолькоПросмотр();
	
	Если Нашли Тогда
		Если ИскатьПоИмени Тогда
			Стр = "Элемент с именем <" + ИмяЭлемента + "> доступен только для просмотра";
		Иначе
			Стр = "Элемент с заголовком <" + ИмяЭлемента + "> доступен только для просмотра";
		КонецЕсли;
		Сообщить(Стр);
		ВызватьИсключение Стр;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
//И элемент "Имя Элемента" доступен для просмотра
//@ЭлементДоступенТолькоДляПросмотра(ИмяЭлемента)
Процедура ЭлементДоступенДляПросмотра(ИмяЭлемента) Экспорт
	ДоступенДляПросмотра(ИмяЭлемента, Ложь);
КонецПроцедуры

&НаКлиенте
//И элемент с именем "Имя Элемента" доступен для просмотра
//@ЭлементСИменемДоступенТолькоДляПросмотра(ИмяЭлемента)
Процедура ЭлементСИменемДоступенДляПросмотра(ИмяЭлемента) Экспорт
	ДоступенДляПросмотра(ИмяЭлемента, Истина);
КонецПроцедуры

&НаКлиенте
//И в открытой форме элемент "Имя Элемента" доступен для просмотра
//@ВОткрытойФормеЭлементДоступенТолькоДляПросмотра(ИмяЭлемента)
Процедура ВОткрытойФормеЭлементДоступенДляПросмотра(ИмяЭлемента) Экспорт
	ДоступенДляПросмотра(ИмяЭлемента, Ложь);
КонецПроцедуры

&НаКлиенте
//И в открытой форме элемент с именем "Имя Элемента" доступен для просмотра
//@ВОткрытойФормеЭлементСИменемДоступенТолькоДляПросмотра(ИмяЭлемента)
Процедура ВОткрытойФормеЭлементСИменемДоступенДляПросмотра(ИмяЭлемента) Экспорт
	ДоступенДляПросмотра(ИмяЭлемента, Истина);
КонецПроцедуры

&НаКлиенте
//И элемент "Реквизит1" доступен не только для просмотра
//@ЭлементДоступенНеТолькоДляПросмотра(ИмяЭлемента)
Процедура ЭлементДоступенНеТолькоДляПросмотра(ИмяЭлемента) Экспорт
	НеДоступенДляПросмотра(ИмяЭлемента, Ложь);
КонецПроцедуры

&НаКлиенте
//И элемент с именем "Реквизит1" доступен не только для просмотра
//@ЭлементСИменемДоступенНеТолькоДляПросмотра(ИмяЭлемента)
Процедура ЭлементСИменемДоступенНеТолькоДляПросмотра(ИмяЭлемента) Экспорт
	НеДоступенДляПросмотра(ИмяЭлемента, Истина);
КонецПроцедуры




&НаКлиенте
Процедура ВОткрытойФормеЯВижуЭлемент(ИмяЭлемента, ИскатьПоИмени = Ложь)
	
	ЭлементФормы = НайтиЭлементНаФорме(ИмяЭлемента,, ИскатьПоИмени);
		
	Нашли = ЭлементФормы.ТекущаяВидимость();
	
	Если НЕ Нашли Тогда
		Если ИскатьПоИмени Тогда
			Стр = "Элемент с именем <" + ИмяЭлемента + "> не виден на текущей форме";
		Иначе
			Стр = "Элемент с заголовком <" + ИмяЭлемента + "> не виден на текущей форме";
		КонецЕсли;
		Сообщить(Стр);
		ВызватьИсключение Стр;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВОткрытойФормеЯНеВижуЭлемент(ИмяЭлемента, ИскатьПоИмени = Ложь)
	
	ЭлементФормы = НайтиЭлементНаФорме(ИмяЭлемента,, ИскатьПоИмени);
		
	Нашли = ЭлементФормы.ТекущаяВидимость();
	
	Если Нашли Тогда
		Если ИскатьПоИмени Тогда
			Стр = "Элемент с именем <" + ИмяЭлемента + "> виден на текущей форме";
		Иначе
			Стр = "Элемент с заголовком <" + ИмяЭлемента + "> виден на текущей форме";
		КонецЕсли;
		Сообщить(Стр);
		ВызватьИсключение Стр;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
//И я вижу элемент "Имя элемента"
//@ЯВижуЭлемент(ИмяЭлемента)
Процедура ЯВижуЭлемент(ИмяЭлемента) Экспорт
	ВОткрытойФормеЯВижуЭлемент(ИмяЭлемента, Ложь);
КонецПроцедуры

&НаКлиенте
//И я вижу элемент "Имя элемента" на форме
//@ЯВижуЭлементНаФорме(ИмяЭлемента)
Процедура ЯВижуЭлементНаФорме(ИмяЭлемента) Экспорт
	ВОткрытойФормеЯВижуЭлемент(ИмяЭлемента, Ложь);
КонецПроцедуры

&НаКлиенте
//И я вижу элемент с именем "Имя элемента"
//@ЯВижуЭлементСИменем(ИмяЭлемента)
Процедура ЯВижуЭлементСИменем(ИмяЭлемента) Экспорт
	ВОткрытойФормеЯВижуЭлемент(ИмяЭлемента, Истина);
КонецПроцедуры

&НаКлиенте
//И я вижу элемент с именем "Имя элемента" на форме
//@ЯВижуЭлементСИменемНаФорме(ИмяЭлемента)
Процедура ЯВижуЭлементСИменемНаФорме(ИмяЭлемента) Экспорт
	ВОткрытойФормеЯВижуЭлемент(ИмяЭлемента, Истина);
КонецПроцедуры

&НаКлиенте
//И я не вижу элемент "Имя элемента"
//@ЯНеВижуЭлемент(Парам01)
Процедура ЯНеВижуЭлемент(ИмяЭлемента) Экспорт
	ВОткрытойФормеЯНеВижуЭлемент(ИмяЭлемента, Ложь);
КонецПроцедуры

&НаКлиенте
//И я не вижу элемент "Имя элемента" на форме
//@ЯНеВижуЭлементНаФорме(Парам01)
Процедура ЯНеВижуЭлементНаФорме(ИмяЭлемента) Экспорт
	ВОткрытойФормеЯНеВижуЭлемент(ИмяЭлемента, Ложь);
КонецПроцедуры

&НаКлиенте
//И я не вижу элемент с именем "Имя элемента"
//@ЯНеВижуЭлементСИменем(Парам01)
Процедура ЯНеВижуЭлементСИменем(ИмяЭлемента) Экспорт
	ВОткрытойФормеЯНеВижуЭлемент(ИмяЭлемента, Истина);
КонецПроцедуры

&НаКлиенте
//И я не вижу элемент с именем "Имя элемента" на форме
//@ЯНеВижуЭлементСИменемНаФорме(Парам01)
Процедура ЯНеВижуЭлементСИменемНаФорме(ИмяЭлемента) Экспорт
	ВОткрытойФормеЯНеВижуЭлемент(ИмяЭлемента, Истина);
КонецПроцедуры


// { доступность


&НаКлиенте
Процедура ЯПроверяюДоступностьЭлементаФормы(ИмяЭлемента, ИскатьПоИмени = Ложь)

	Нашли = Ложь;
	ЭлементФормы = НайтиЭлементНаФорме(ИмяЭлемента,, ИскатьПоИмени);
	Если ЭлементФормы <> Неопределено Тогда
		Нашли = ЭлементФормы.ТекущаяДоступность();
	КонецЕсли;
	
	Если НЕ Нашли Тогда
		Если ИскатьПоИмени Тогда
			Стр = "Элемент с именем <" + ИмяЭлемента + "> не доступен на форме";
		Иначе	
			Стр = "Элемент с заголовком <" + ИмяЭлемента + "> не доступен на форме";
		КонецЕсли;
		Сообщить(Стр);
		ВызватьИсключение Стр;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЯПроверяюНеДоступностьЭлементаФормы(ИмяЭлемента, ИскатьПоИмени = Ложь)

	Нашли = Ложь;
	ЭлементФормы = НайтиЭлементНаФорме(ИмяЭлемента,, ИскатьПоИмени);
	Если ЭлементФормы <> Неопределено Тогда
		Нашли = ЭлементФормы.ТекущаяДоступность();
	КонецЕсли;
	
	Если Нашли Тогда
		Если ИскатьПоИмени Тогда
			Стр = "Элемент с именем <" + ИмяЭлемента + "> доступен на форме";
		Иначе	
			Стр = "Элемент с заголовком <" + ИмяЭлемента + "> доступен на форме";
		КонецЕсли;
		Сообщить(Стр);
		ВызватьИсключение Стр;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
//И     элемент формы "ИмяЭлемента" доступен
//@ЭлементФормыДоступен(ИмяЭлемента)
Процедура ЭлементФормыДоступен(ИмяЭлемента) Экспорт
	ЯПроверяюДоступностьЭлементаФормы(ИмяЭлемента, Ложь);
КонецПроцедуры

&НаКлиенте
//И     элемент формы "ИмяЭлемента" не доступен
//@ЭлементФормыНеДоступен(ИмяЭлемента)
Процедура ЭлементФормыНеДоступен(ИмяЭлемента) Экспорт
	ЯПроверяюНеДоступностьЭлементаФормы(ИмяЭлемента, Ложь);
КонецПроцедуры

&НаКлиенте
//И     элемент формы с именем "ИмяЭлемента" доступен
//@ЭлементФормыСИменемДоступен(ИмяЭлемента)
Процедура ЭлементФормыСИменемДоступен(ИмяЭлемента) Экспорт
	ЯПроверяюДоступностьЭлементаФормы(ИмяЭлемента, Истина);
КонецПроцедуры

&НаКлиенте
//И     элемент формы с именем "ИмяЭлемента" не доступен
//@ЭлементФормыСИменемНеДоступен(ИмяЭлемента)
Процедура ЭлементФормыСИменемНеДоступен(ИмяЭлемента) Экспорт
	ЯПроверяюНеДоступностьЭлементаФормы(ИмяЭлемента, Истина);
КонецПроцедуры

// ТЧ

&НаКлиенте
//И     В ТЧ "ИмяТЧ" поле "ИмяРеквизита" доступно
//@ВТЧПолеДоступно(ИмяТЧ, ИмяРеквизита)
Процедура ВТЧПолеДоступно(ИмяТЧ,ИмяРеквизита,ИскатьПоИмени = Ложь) Экспорт
	ТЧ                     =  НайтиТЧПоИмени(ИмяТЧ);
	
	Если ИскатьПоИмени Тогда
		ПолеРеквизит           = ТЧ.НайтиОбъект(Тип("ТестируемоеПолеФормы"),, ИмяРеквизита);
	Иначе	
		ПолеРеквизит           = ТЧ.НайтиОбъект(Тип("ТестируемоеПолеФормы"), ИмяРеквизита);
	КонецЕсли;	 
	
	Если ПолеРеквизит = Неопределено Тогда
		Если ИскатьПоИмени Тогда
			Стр = "В ТЧ <" +ИмяТЧ  + "> поле с именем <" + ИмяРеквизита + "> не найдено!";
		Иначе	
			Стр = "В ТЧ <" +ИмяТЧ  + "> поле с заголовком <" + ИмяРеквизита + "> не найдено!";
		КонецЕсли;	 
		Сообщить(Стр);
		ВызватьИсключение Стр;
	КонецЕсли;	 
	
	Нашли = ПолеРеквизит.ТекущаяДоступность();
	
	Если НЕ Нашли Тогда
		Если ИскатьПоИмени Тогда
			Стр = "Элемент с именем <" + ИмяРеквизита + "> не доступен на форме";
		Иначе	
			Стр = "Элемент с заголовком <" + ИмяРеквизита + "> не доступен на форме";
		КонецЕсли;
		Сообщить(Стр);
		ВызватьИсключение Стр;
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
//И     В ТЧ "ИмяТЧ" поле с именем "ИмяРеквизита" доступно
//@ВТЧПолеСИменемДоступно(ИмяТЧ, ИмяРеквизита)
Процедура ВТЧПолеСИменемДоступно(ИмяТЧ,ИмяРеквизита) Экспорт
	ВТЧПолеДоступно(ИмяТЧ,ИмяРеквизита,Истина);
КонецПроцедуры

&НаКлиенте
//И     В ТЧ "ИмяТЧ" поле "ИмяРеквизита" не доступно
//@ВТЧПолеНеДоступно(ИмяТЧ, ИмяРеквизита)
Процедура ВТЧПолеНеДоступно(ИмяТЧ,ИмяРеквизита,ИскатьПоИмени = Ложь) Экспорт
	ТЧ                     =  НайтиТЧПоИмени(ИмяТЧ);
	
	Если ИскатьПоИмени Тогда
		ПолеРеквизит           = ТЧ.НайтиОбъект(Тип("ТестируемоеПолеФормы"),, ИмяРеквизита);
	Иначе	
		ПолеРеквизит           = ТЧ.НайтиОбъект(Тип("ТестируемоеПолеФормы"), ИмяРеквизита);
	КонецЕсли;	 
	
	Если ПолеРеквизит = Неопределено Тогда
		Если ИскатьПоИмени Тогда
			Стр = "В ТЧ <" +ИмяТЧ  + "> поле с именем <" + ИмяРеквизита + "> не найдено!";
		Иначе	
			Стр = "В ТЧ <" +ИмяТЧ  + "> поле с заголовком <" + ИмяРеквизита + "> не найдено!";
		КонецЕсли;	 
		Сообщить(Стр);
		ВызватьИсключение Стр;
	КонецЕсли;	 
	
	Нашли = ПолеРеквизит.ТекущаяДоступность();
	
	Если Нашли Тогда
		Если ИскатьПоИмени Тогда
			Стр = "Элемент с именем <" + ИмяРеквизита + "> доступен на форме";
		Иначе	
			Стр = "Элемент с заголовком <" + ИмяРеквизита + "> доступен на форме";
		КонецЕсли;
		Сообщить(Стр);
		ВызватьИсключение Стр;
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
//И     В ТЧ "ИмяТЧ" поле с именем "ИмяРеквизита" недоступно
//@ВТЧПолеСИменемНеДоступно(ИмяТЧ, ИмяРеквизита)
Процедура ВТЧПолеСИменемНеДоступно(ИмяТЧ,ИмяРеквизита) Экспорт
	ВТЧПолеНеДоступно(ИмяТЧ,ИмяРеквизита,Истина);
КонецПроцедуры



&НаКлиенте
//И     В ТЧ "ИмяТЧ" поле "ИмяРеквизита" доступно только для просмотра
//@ВТЧПолеДоступноТолькоДляПросмотра(ИмяТЧ, ИмяРеквизита)
Процедура ВТЧПолеДоступноТолькоДляПросмотра(ИмяТЧ,ИмяРеквизита,ИскатьПоИмени = Ложь) Экспорт
	ТЧ                     =  НайтиТЧПоИмени(ИмяТЧ);
	
	Если ИскатьПоИмени Тогда
		ПолеРеквизит           = ТЧ.НайтиОбъект(Тип("ТестируемоеПолеФормы"),, ИмяРеквизита);
	Иначе	
		ПолеРеквизит           = ТЧ.НайтиОбъект(Тип("ТестируемоеПолеФормы"), ИмяРеквизита);
	КонецЕсли;	 
	
	Если ПолеРеквизит = Неопределено Тогда
		Если ИскатьПоИмени Тогда
			Стр = "В ТЧ <" +ИмяТЧ  + "> поле с именем <" + ИмяРеквизита + "> не найдено!";
		Иначе	
			Стр = "В ТЧ <" +ИмяТЧ  + "> поле с заголовком <" + ИмяРеквизита + "> не найдено!";
		КонецЕсли;	 
		Сообщить(Стр);
		ВызватьИсключение Стр;
	КонецЕсли;	 
	
	Нашли = ПолеРеквизит.ТекущееТолькоПросмотр();
	
	Если НЕ Нашли Тогда
		Если ИскатьПоИмени Тогда
			Стр = "Элемент с именем <" + ИмяРеквизита + "> доступен только для просмотра";
		Иначе
			Стр = "Элемент с заголовком <" + ИмяРеквизита + "> доступен только для просмотра";
		КонецЕсли;
		Сообщить(Стр);
		ВызватьИсключение Стр;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
//И     В ТЧ "ИмяТЧ" поле с именем "ИмяРеквизита" доступно только для просмотра
//@ВТЧПолеСИменемДоступноТолькоДляПросмотра(ИмяТЧ, ИмяРеквизита)
Процедура ВТЧПолеСИменемДоступноТолькоДляПросмотра(ИмяТЧ,ИмяРеквизита,ИскатьПоИмени = Ложь) Экспорт
	ВТЧПолеДоступноТолькоДляПросмотра(ИмяТЧ,ИмяРеквизита, Истина);
КонецПроцедуры


&НаКлиенте
//И     В ТЧ "ИмяТЧ" поле "ИмяРеквизита" доступно не только для просмотра
//@ВТЧПолеДоступноНеТолькоДляПросмотра(ИмяТЧ, ИмяРеквизита)
Процедура ВТЧПолеДоступноНеТолькоДляПросмотра(ИмяТЧ,ИмяРеквизита,ИскатьПоИмени = Ложь) Экспорт
	ТЧ                     =  НайтиТЧПоИмени(ИмяТЧ);
	
	Если ИскатьПоИмени Тогда
		ПолеРеквизит           = ТЧ.НайтиОбъект(Тип("ТестируемоеПолеФормы"),, ИмяРеквизита);
	Иначе	
		ПолеРеквизит           = ТЧ.НайтиОбъект(Тип("ТестируемоеПолеФормы"), ИмяРеквизита);
	КонецЕсли;	 
	
	Если ПолеРеквизит = Неопределено Тогда
		Если ИскатьПоИмени Тогда
			Стр = "В ТЧ <" +ИмяТЧ  + "> поле с именем <" + ИмяРеквизита + "> не найдено!";
		Иначе	
			Стр = "В ТЧ <" +ИмяТЧ  + "> поле с заголовком <" + ИмяРеквизита + "> не найдено!";
		КонецЕсли;	 
		Сообщить(Стр);
		ВызватьИсключение Стр;
	КонецЕсли;	 
	
	Нашли = ПолеРеквизит.ТекущееТолькоПросмотр();
	
	Если Нашли Тогда
		Если ИскатьПоИмени Тогда
			Стр = "Элемент с именем <" + ИмяРеквизита + "> доступен не только для просмотра";
		Иначе
			Стр = "Элемент с заголовком <" + ИмяРеквизита + "> доступен не только для просмотра";
		КонецЕсли;
		Сообщить(Стр);
		ВызватьИсключение Стр;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
//И     В ТЧ "ИмяТЧ" поле с именем "ИмяРеквизита" доступно не только для просмотра
//@ВТЧПолеСИменемДоступноНеТолькоДляПросмотра(ИмяТЧ, ИмяРеквизита)
Процедура ВТЧПолеСИменемДоступноНеТолькоДляПросмотра(ИмяТЧ,ИмяРеквизита,ИскатьПоИмени = Ложь) Экспорт
	ВТЧПолеДоступноНеТолькоДляПросмотра(ИмяТЧ,ИмяРеквизита, Истина);
КонецПроцедуры


// } доступность



&НаКлиенте
//Тогда в таблице с именем "ТабличнаяЧасть1" я выделяю все строки
//@ВТаблицеСИменемЯВыделяюВсеСтроки(Парам01)
Процедура ВТаблицеСИменемЯВыделяюВсеСтроки(ИмяТЧ) Экспорт
	ТЧ =  НайтиТЧПоИмени(ИмяТЧ);
	Попытка
		ТЧ.ВыделитьВсеСтроки();
	Исключение
		ВызватьИсключение "Не смог выделить все строки в таблице <" + ИмяТЧ + ">. " + Символы.ПС + ОписаниеОшибки();
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
//Тогда в таблице "ТабличнаяЧасть1" я выделяю все строки
//@ВТаблицеЯВыделяюВсеСтроки(Парам01)
Процедура ВТаблицеЯВыделяюВсеСтроки(ИмяТЧ) Экспорт
	ВТаблицеСИменемЯВыделяюВсеСтроки(ИмяТЧ);
КонецПроцедуры

&НаКлиенте
//И     в поле "&Что искать" ввожу значение переменной "Документ2_Сценарий_1"
//@ВПолеВвожуЗначениеПеременной(Парам01,Парам02)
Процедура ВПолеВвожуЗначениеПеременной(ИмяПоля,ИмяПеременной,ИскатьПоИмени = Ложь) Экспорт
	ЗначениеПеременной = "";
	Контекст.Свойство(ИмяПеременной, ЗначениеПеременной);
	Если ЗначениеПеременной = Неопределено Тогда
		ВызватьИсключение "Переменная <" + ИмяПеременной + "> ранее не была сохранена";
	КонецЕсли;
	Ванесса.Шаг("И     в поле """+ИмяПоля+""" я ввожу текст """+ЗначениеПеременной+"""");
КонецПроцедуры

&НаКлиенте
//И     в Таблицу "ТабличнаяЧасть1" поле "Номер" ввожу значение переменной "НомерДок"
//@ВТаблицуВПолеВвожуЗначениеПеременной(Парам01,Парам02,Парам03)
Процедура ВТаблицуВПолеВвожуЗначениеПеременной(ИмяТЧ,ИмяПоля,ИмяПеременной) Экспорт
	ЗначениеПеременной = "";
	Контекст.Свойство(ИмяПеременной, ЗначениеПеременной);
	Если ЗначениеПеременной = Неопределено Тогда
		ВызватьИсключение "Переменная <" + ИмяПеременной + "> ранее не была сохранена";
	КонецЕсли;
	ВТЧВПолеЯВвожуТекст(ИмяТЧ,ИмяПоля,ЗначениеПеременной);
КонецПроцедуры

&НаКлиенте
//И     в поле "&Что искать" ввожу значение ключа "Номер документа"
//@ВПолеВвожуЗначениеКлюча(Парам01,Парам02)
Процедура ВПолеВвожуЗначениеКлюча(ИмяПоля,ИмяПеременной,ИскатьПоИмени = Ложь) Экспорт
	ЗначениеПеременной = Ванесса.ПолучитьСохраненноеЗначениеИзКонтекста(ИмяПеременной);
	Если ЗначениеПеременной = Неопределено Тогда
		ВызватьИсключение "Переменная <" + ИмяПеременной + "> ранее не была сохранена";
	КонецЕсли;
	Ванесса.Шаг("И     в поле """+ИмяПоля+""" я ввожу текст """+ЗначениеПеременной+"""");
КонецПроцедуры

&НаКлиенте
//И     в поле "&Что искать" ввожу значение глобальной переменной "Документ2_Сценарий_1"
//@ВПолеВвожуЗначениеГлобальнойПеременной(Парам01,Парам02)
Процедура ВПолеВвожуЗначениеГлобальнойПеременной(ИмяПоля,ИмяПеременной,ИскатьПоИмени = Ложь) Экспорт
	ЗначениеПеременной = "";
	КонтекстСохраняемый.Свойство(ИмяПеременной, ЗначениеПеременной);
	Если ЗначениеПеременной = Неопределено Тогда
		ВызватьИсключение "Переменная <" + ИмяПеременной + "> ранее не была сохранена";
	КонецЕсли;
	Ванесса.Шаг("И     в поле """+ИмяПоля+""" я ввожу текст """+ЗначениеПеременной+"""");
КонецПроцедуры

&НаКлиенте
//И     в поле "&Что искать" ввожу значение глобального ключа "Номер документа"
//@ВПолеВвожуЗначениеГлобальногоКлюча(Парам01,Парам02)
Процедура ВПолеВвожуЗначениеГлобальногоКлюча(ИмяПоля,ИмяПеременной,ИскатьПоИмени = Ложь) Экспорт
	ЗначениеПеременной = Ванесса.ПолучитьСохраненноеЗначениеИзКонтекстаСохраняемого(ИмяПеременной);
	Если ЗначениеПеременной = Неопределено Тогда
		ВызватьИсключение "Переменная <" + ИмяПеременной + "> ранее не была сохранена";
	КонецЕсли;
	Ванесса.Шаг("И     в поле """+ИмяПоля+""" я ввожу текст """+ЗначениеПеременной+"""");
КонецПроцедуры

&НаКлиенте
//И     в поле с именем "&Что искать" ввожу значение переменной "Документ2_Сценарий_1"
//@ВПолеСИменемВвожуЗначениеПеременной(Парам01,Парам02)
Процедура ВПолеСИменемВвожуЗначениеПеременной(Парам01,ИмяПеременной) Экспорт
	ЗначениеПеременной = "";
	Контекст.Свойство(ИмяПеременной, ЗначениеПеременной);
	Если ЗначениеПеременной = Неопределено Тогда
		ВызватьИсключение "Переменная <" + ИмяПеременной + "> ранее не была сохранена";
	КонецЕсли;
	Ванесса.Шаг("И     В открытой форме в поле с именем """+Парам01+""" я ввожу текст """+ЗначениеПеременной+"""");
КонецПроцедуры

&НаКлиенте
//И     в поле с именем "&Что искать" ввожу значение ключа "Номер документа"
//@ВПолеСИменемВвожуЗначениеКлюча(Парам01,Парам02)
Процедура ВПолеСИменемВвожуЗначениеКлюча(Парам01,ИмяПеременной) Экспорт
	ЗначениеПеременной = Ванесса.ПолучитьСохраненноеЗначениеИзКонтекста(ИмяПеременной);
	Если ЗначениеПеременной = Неопределено Тогда
		ВызватьИсключение "Переменная <" + ИмяПеременной + "> ранее не была сохранена";
	КонецЕсли;
	Ванесса.Шаг("И     В открытой форме в поле с именем """+Парам01+""" я ввожу текст """+ЗначениеПеременной+"""");
КонецПроцедуры

&НаКлиенте
//И     в поле с именем "&Что искать" ввожу значение глобальной переменной "Документ2_Сценарий_1"
//@ВПолеСИменемВвожуЗначениеГлобальнойПеременной(Парам01,Парам02)
Процедура ВПолеСИменемВвожуЗначениеГлобальнойПеременной(Парам01,ИмяПеременной) Экспорт
	ЗначениеПеременной = "";
	КонтекстСохраняемый.Свойство(ИмяПеременной, ЗначениеПеременной);
	Если ЗначениеПеременной = Неопределено Тогда
		ВызватьИсключение "Переменная <" + ИмяПеременной + "> ранее не была сохранена";
	КонецЕсли;
	Ванесса.Шаг("И     В открытой форме в поле с именем """+Парам01+""" я ввожу текст """+ЗначениеПеременной+"""");
КонецПроцедуры

&НаКлиенте
//И     в поле с именем "&Что искать" ввожу значение глобального ключа "Номер документа"
//@ВПолеСИменемВвожуЗначениеГлобальногоКлюча(Парам01,Парам02)
Процедура ВПолеСИменемВвожуЗначениеГлобальногоКлюча(Парам01,ИмяПеременной) Экспорт
	ЗначениеПеременной = Ванесса.ПолучитьСохраненноеЗначениеИзКонтекста(ИмяПеременной);
	Если ЗначениеПеременной = Неопределено Тогда
		ВызватьИсключение "Переменная <" + ИмяПеременной + "> ранее не была сохранена";
	КонецЕсли;
	Ванесса.Шаг("И     В открытой форме в поле с именем """+Парам01+""" я ввожу текст """+ЗначениеПеременной+"""");
КонецПроцедуры

&НаКлиенте
//И я удаляю все строки таблицы "График"
//@ЯУдаляюВсеСтрокиТаблицы(Парам01)
Процедура ЯУдаляюВсеСтрокиТаблицы(ИмяТаблицы) Экспорт
	ТЧ =  НайтиТЧПоИмени(ИмяТаблицы);
	
	ЗначениеТЧ = ПолучитьСтрокиИзТаблицыTestClient(ТЧ);
	ОсталосьУдалить = ЗначениеТЧ.Количество();
	
	Для Счетчик = 1 По ОсталосьУдалить Цикл
		Попытка
			ТЧ.ПерейтиКПоследнейСтроке();
			ТЧ.УдалитьСтроку();
		Исключение
			Прервать;
		КонецПопытки;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
//И     в таблице с именем "ТабличнаяЧасть1" я удаляю текущую строку
//@ВТаблицеСИменемЯУдаляюТекущуюСтроку(Парам01)
Процедура ВТаблицеСИменемЯУдаляюТекущуюСтроку(ИмяТаблицы) Экспорт
	ТЧ =  НайтиТЧПоИмени(ИмяТаблицы);
	ТЧ.УдалитьСтроку();
КонецПроцедуры

&НаКлиенте
//И     в таблице "ТабличнаяЧасть1" я удаляю текущую строку
//@ВТаблицеЯУдаляюТекущуюСтроку(Парам01)
Процедура ВТаблицеЯУдаляюТекущуюСтроку(ИмяТаблицы) Экспорт
	ВТаблицеСИменемЯУдаляюТекущуюСтроку(ИмяТаблицы);
КонецПроцедуры





&НаКлиенте
//И     поле "Реквизит2" существует
//@ПолеСуществует(Парам01)
Процедура ПолеСуществует(ИмяПоля,ИскатьПоИмени = Ложь) Экспорт
	Ванесса.НайтиРеквизитОткрытойФормыПоЗаголовку(ИмяПоля,ИскатьПоИмени);
КонецПроцедуры

&НаКлиенте
//И     поле "Реквизит2" не существует
//@ПолеНеСуществует(Парам01)
Процедура ПолеНеСуществует(ИмяПоля,ИскатьПоИмени = Ложь) Экспорт
	Нашли = Ложь;
	МассивФорм = Ванесса.НайтиФормыТекущегоОкнаTestClient();
	Для каждого ТекущаяФорма Из МассивФорм Цикл
		
		Если ИскатьПоИмени Тогда
			МассивЭлементов        = ТекущаяФорма.НайтиОбъекты(, , ИмяПоля);
		Иначе
			МассивЭлементов        = ТекущаяФорма.НайтиОбъекты(, ИмяПоля);
		КонецЕсли;	 
		
		Если МассивЭлементов = Неопределено Тогда
			Продолжить;
		КонецЕсли;	 
		
		Если МассивЭлементов.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;	 
		
		Нашли = Истина;
		Прервать;
	КонецЦикла;	
	
	Если Нашли Тогда
		ВызватьИсключение "Поле <" + ИмяПоля + "> существует, а ожидали, что его нет.";
	КонецЕсли;	 
	
КонецПроцедуры


&НаКлиенте
//И     поле с именем "Реквизит2" существует
//@ПолеСИменемСуществует(Парам01)
Процедура ПолеСИменемСуществует(ИмяПоля,ИскатьПоИмени = Ложь) Экспорт
	ПолеСуществует(ИмяПоля,Истина);
КонецПроцедуры

&НаКлиенте
//И     поле с именем "Реквизит2" не существует
//@ПолеСИменемНеСуществует(Парам01)
Процедура ПолеСИменемНеСуществует(ИмяПоля) Экспорт
	ПолеНеСуществует(ИмяПоля,Истина);
КонецПроцедуры





&НаКлиенте
//И     поле с именем "Реквизит2" имеет заголовок
//@ПолеСИменемИмеетЗаголовок(Парам01)
Процедура ПолеСИменемИмеетЗаголовок(ИмяПоля,Заголовок) Экспорт
	Поле = Ванесса.НайтиРеквизитОткрытойФормыПоЗаголовку(ИмяПоля,Истина);
	
	Если Поле.ТекстЗаголовка <> Заголовок Тогда
		ВызватьИсключение "У поля <" + ИмяПоля + "> ожидали заголовок <" + Заголовок + ">, а получили <" + Поле.ТекстЗаголовка + ">";
	КонецЕсли;	 
КонецПроцедуры

&НаКлиенте
//И     у поля с именем "Реквизит2" текст подсказки равен "Заголовок"
//@УПоляСИменемТекстПодсказкиРавен(Парам01,Парам02)
Процедура УПоляСИменемТекстПодсказкиРавен(ИмяПоля,НужныйТекстПодсказки) Экспорт
	Поле = Ванесса.НайтиРеквизитОткрытойФормыПоЗаголовку(ИмяПоля,Истина);
	
	ТекущийТекстПодсказки = Поле.ПолучитьТекстПодсказки();
	
	Если ТекущийТекстПодсказки <> НужныйТекстПодсказки Тогда
		ВызватьИсключение "У поля <" + ИмяПоля + "> ожидали текст подсказки <" + НужныйТекстПодсказки +
		                                                        ">, а получили <" + ТекущийТекстПодсказки + ">";
	КонецЕсли;	 
КонецПроцедуры




&НаКлиенте
//И     у поля "Имя поля" я перехожу к дате "08.04.1981"
//@УПоляЯПерехожуКДате(Парам01,Парам02)
Процедура УПоляЯПерехожуКДате(ИмяРеквизита,Дат,ИскатьПоИмени = Ложь) Экспорт
	ПолеРеквизит = Ванесса.НайтиРеквизитОткрытойФормыПоЗаголовку(ИмяРеквизита,ИскатьПоИмени);
	ПолеРеквизит.Активизировать();
	
	
	СделатьДействияПриЗаписиВидео();
	ПолеРеквизит.ПерейтиКДате(Дат);
	СделатьДействияПриЗаписиHTML();
КонецПроцедуры


&НаКлиенте
//И     у поля с именем "Имя поля" я перехожу к дате "08.04.1981"
//@УПоляСИменемЯПерехожуКДате(Парам01,Парам02)
Процедура УПоляСИменемЯПерехожуКДате(ИмяРеквизита,Дат,ИскатьПоИмени = Ложь) Экспорт
	УПоляЯПерехожуКДате(ИмяРеквизита,Дат,Истина);
КонецПроцедуры


